  NAudio.Gui.Fader.resources - Embedded, ContainedInManifestFile, 
  NAudio.Gui.PanSlider.resources - Embedded, ContainedInManifestFile, 
  NAudio.Gui.Pot.resources - Embedded, ContainedInManifestFile, 
  NAudio.Gui.VolumeSlider.resources - Embedded, ContainedInManifestFile, 
  NAudio.Gui.WaveViewer.resources - Embedded, ContainedInManifestFile, 
  NAudio.Utils.ProgressLog.resources - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v2.0.50727
Assembly NAudio, Version=1.8.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Class <>f__AnonymousType0`2[<MediaType>j__TPar,<Delta>j__TPar]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: <MediaType>j__TPar
  Type parameter: <Delta>j__TPar
    Void .ctor(<MediaType>j__TPar, <Delta>j__TPar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    <MediaType>j__TPar MediaType 'get ' : 
    <Delta>j__TPar Delta 'get ' : 
  Methods:
    get_MediaType(): PrivateScope, Public, HideBySig, SpecialName
    get_Delta(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct NAudio.Manufacturers: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Manufacturers Microsoft = 1 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Creative = 2 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Mediavision = 3 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Fujitsu = 4 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Artisoft = 20 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers TurtleBeach = 21 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Ibm = 22 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Vocaltec = 23 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Roland = 24 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers DspSolutions = 25 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Nec = 26 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Ati = 27 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Wanglabs = 28 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Tandy = 29 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Voyetra = 30 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Antex = 31 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers IclPS = 32 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Intel = 33 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Gravis = 34 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Val = 35 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Interactive = 36 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Yamaha = 37 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Everex = 38 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Echo = 39 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Sierra = 40 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Cat = 41 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Apps = 42 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers DspGroup = 43 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Melabs = 44 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers ComputerFriends = 45 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Ess = 46 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Audiofile = 47 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Motorola = 48 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Canopus = 49 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Epson = 50 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Truevision = 51 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Aztech = 52 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Videologic = 53 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Scalacs = 54 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Korg = 55 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Apt = 56 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Ics = 57 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Iteratedsys = 58 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Metheus = 59 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Logitech = 60 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Winnov = 61 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Ncr = 62 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Exan = 63 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Ast = 64 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Willowpond = 65 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Sonicfoundry = 66 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Vitec = 67 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Moscom = 68 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Siliconsoft = 69 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Supermac = 73 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Audiopt = 74 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Speechcomp = 76 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Ahead = 77 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Dolby = 78 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Oki = 79 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Auravision = 80 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Olivetti = 81 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Iomagic = 82 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Matsushita = 83 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Controlres = 84 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Xebec = 85 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Newmedia = 86 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Nms = 87 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Lyrrus = 88 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Compusic = 89 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Opti = 90 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Adlacc = 91 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Compaq = 92 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Dialogic = 93 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Insoft = 94 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Mptus = 95 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Weitek = 96 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers LernoutAndHauspie = 97 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Qciar = 98 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Apple = 99 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Digital = 100 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Motu = 101 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Workbit = 102 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Ositech = 103 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Miro = 104 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Cirruslogic = 105 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Isolution = 106 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Horizons = 107 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Concepts = 108 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Vtg = 109 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Radius = 110 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Rockwell = 111 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Xyz = 112 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Opcode = 113 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Voxware = 114 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers NorthernTelecom = 115 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Apicom = 116 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Grande = 117 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Addx = 118 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Wildcat = 119 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Rhetorex = 120 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Brooktree = 121 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Ensoniq = 125 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Fast = 126 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Nvidia = 127 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Oksori = 128 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Diacoustics = 129 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Gulbransen = 130 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers KayElemetrics = 131 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Crystal = 132 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers SplashStudios = 133 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Quarterdeck = 134 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Tdk = 135 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers DigitalAudioLabs = 136 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Seersys = 137 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Picturetel = 138 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers AttMicroelectronics = 139 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Osprey = 140 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Mediatrix = 141 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Soundesigns = 142 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Aldigital = 143 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers SpectrumSignalProcessing = 144 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Ecs = 145 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Amd = 146 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Coredynamics = 147 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Canam = 148 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Softsound = 149 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Norris = 150 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Ddd = 151 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Euphonics = 152 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Precept = 153 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers CrystalNet = 154 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Chromatic = 155 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Voiceinfo = 156 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Viennasys = 157 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Connectix = 158 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Gadgetlabs = 159 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Frontier = 160 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Viona = 161 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Casio = 162 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers Diamondmm = 163 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers S3 = 164 : Public, Static, Literal, HasDefault
    NAudio.Manufacturers FraunhoferIis = 172 : Public, Static, Literal, HasDefault
Class NAudio.MmException: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Exception
    Void .ctor(NAudio.MmResult, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.MmResult Result 'get ' : 
  Methods:
    Try(MmResult, String): PrivateScope, Public, Static, HideBySig
    get_Result(): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.MmResult: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.MmResult NoError = 0 : Public, Static, Literal, HasDefault
    NAudio.MmResult UnspecifiedError = 1 : Public, Static, Literal, HasDefault
    NAudio.MmResult BadDeviceId = 2 : Public, Static, Literal, HasDefault
    NAudio.MmResult NotEnabled = 3 : Public, Static, Literal, HasDefault
    NAudio.MmResult AlreadyAllocated = 4 : Public, Static, Literal, HasDefault
    NAudio.MmResult InvalidHandle = 5 : Public, Static, Literal, HasDefault
    NAudio.MmResult NoDriver = 6 : Public, Static, Literal, HasDefault
    NAudio.MmResult MemoryAllocationError = 7 : Public, Static, Literal, HasDefault
    NAudio.MmResult NotSupported = 8 : Public, Static, Literal, HasDefault
    NAudio.MmResult BadErrorNumber = 9 : Public, Static, Literal, HasDefault
    NAudio.MmResult InvalidFlag = 10 : Public, Static, Literal, HasDefault
    NAudio.MmResult InvalidParameter = 11 : Public, Static, Literal, HasDefault
    NAudio.MmResult HandleBusy = 12 : Public, Static, Literal, HasDefault
    NAudio.MmResult InvalidAlias = 13 : Public, Static, Literal, HasDefault
    NAudio.MmResult BadRegistryDatabase = 14 : Public, Static, Literal, HasDefault
    NAudio.MmResult RegistryKeyNotFound = 15 : Public, Static, Literal, HasDefault
    NAudio.MmResult RegistryReadError = 16 : Public, Static, Literal, HasDefault
    NAudio.MmResult RegistryWriteError = 17 : Public, Static, Literal, HasDefault
    NAudio.MmResult RegistryDeleteError = 18 : Public, Static, Literal, HasDefault
    NAudio.MmResult RegistryValueNotFound = 19 : Public, Static, Literal, HasDefault
    NAudio.MmResult NoDriverCallback = 20 : Public, Static, Literal, HasDefault
    NAudio.MmResult MoreData = 21 : Public, Static, Literal, HasDefault
    NAudio.MmResult WaveBadFormat = 32 : Public, Static, Literal, HasDefault
    NAudio.MmResult WaveStillPlaying = 33 : Public, Static, Literal, HasDefault
    NAudio.MmResult WaveHeaderUnprepared = 34 : Public, Static, Literal, HasDefault
    NAudio.MmResult WaveSync = 35 : Public, Static, Literal, HasDefault
    NAudio.MmResult AcmNotPossible = 512 : Public, Static, Literal, HasDefault
    NAudio.MmResult AcmBusy = 513 : Public, Static, Literal, HasDefault
    NAudio.MmResult AcmHeaderUnprepared = 514 : Public, Static, Literal, HasDefault
    NAudio.MmResult AcmCancelled = 515 : Public, Static, Literal, HasDefault
    NAudio.MmResult MixerInvalidLine = 1024 : Public, Static, Literal, HasDefault
    NAudio.MmResult MixerInvalidControl = 1025 : Public, Static, Literal, HasDefault
    NAudio.MmResult MixerInvalidValue = 1026 : Public, Static, Literal, HasDefault
Class NAudio.Mixer.BooleanMixerControl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Mixer.MixerControl
    Void .ctor(MIXERCONTROL, IntPtr, NAudio.Mixer.MixerFlags, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Value 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Mixer.CustomMixerControl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Mixer.MixerControl
    Void .ctor(MIXERCONTROL, IntPtr, NAudio.Mixer.MixerFlags, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class NAudio.Mixer.ListTextMixerControl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Mixer.MixerControl
    Void .ctor(MIXERCONTROL, IntPtr, NAudio.Mixer.MixerFlags, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class NAudio.Mixer.Mixer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfDevices 'get ' : 
    Int32 DestinationCount 'get ' : 
    System.String Name 'get ' : 
    NAudio.Manufacturers Manufacturer 'get ' : 
    Int32 ProductID 'get ' : 
    System.Collections.Generic.IEnumerable`1[NAudio.Mixer.MixerLine] Destinations 'get ' : 
    System.Collections.Generic.IEnumerable`1[NAudio.Mixer.Mixer] Mixers 'get ' : 
  Methods:
    get_NumberOfDevices(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DestinationCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Manufacturer(): PrivateScope, Public, HideBySig, SpecialName
    get_ProductID(): PrivateScope, Public, HideBySig, SpecialName
    GetDestination(Int32): PrivateScope, Public, HideBySig
    get_Destinations(): PrivateScope, Public, HideBySig, SpecialName
    get_Mixers(): PrivateScope, Public, Static, HideBySig, SpecialName
Class NAudio.Mixer.MixerControl: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Fields:
    MIXERCONTROL mixerControl : Assembly
    MIXERCONTROLDETAILS mixerControlDetails : Assembly
  Properties:
    System.String Name 'get ' : 
    NAudio.Mixer.MixerControlType ControlType 'get ' : 
    Boolean IsBoolean 'get ' : 
    Boolean IsListText 'get ' : 
    Boolean IsSigned 'get ' : 
    Boolean IsUnsigned 'get ' : 
    Boolean IsCustom 'get ' : 
  Methods:
    GetMixerControls(IntPtr, MixerLine, MixerFlags): PrivateScope, Public, Static, HideBySig
    GetMixerControl(IntPtr, Int32, Int32, Int32, MixerFlags): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlType(): PrivateScope, Public, HideBySig, SpecialName
    get_IsBoolean(): PrivateScope, Public, HideBySig, SpecialName
    get_IsListText(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSigned(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnsigned(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCustom(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct NAudio.Mixer.MixerControlClass: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Mixer.MixerControlClass Custom = 0 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlClass Meter = 268435456 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlClass Switch = 536870912 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlClass Number = 805306368 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlClass Slider = 1073741824 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlClass Fader = 1342177280 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlClass Time = 1610612736 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlClass List = 1879048192 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlClass Mask = 1879048192 : Public, Static, Literal, HasDefault
Struct NAudio.Mixer.MixerControlSubclass: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Mixer.MixerControlSubclass SwitchBoolean = 0 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlSubclass SwitchButton = 16777216 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlSubclass MeterPolled = 0 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlSubclass TimeMicrosecs = 0 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlSubclass TimeMillisecs = 16777216 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlSubclass ListSingle = 0 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlSubclass ListMultiple = 16777216 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlSubclass Mask = 251658240 : Public, Static, Literal, HasDefault
Struct NAudio.Mixer.MixerControlUnits: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Mixer.MixerControlUnits Custom = 0 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlUnits Boolean = 65536 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlUnits Signed = 131072 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlUnits Unsigned = 196608 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlUnits Decibels = 262144 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlUnits Percent = 327680 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlUnits Mask = 16711680 : Public, Static, Literal, HasDefault
Struct NAudio.Mixer.MixerControlType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Mixer.MixerControlType Custom = 0 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType BooleanMeter = 268500992 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType SignedMeter = 268566528 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType PeakMeter = 268566529 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType UnsignedMeter = 268632064 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Boolean = 536936448 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType OnOff = 536936449 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Mute = 536936450 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Mono = 536936451 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Loudness = 536936452 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType StereoEnhance = 536936453 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Button = 553713664 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Decibels = 805568512 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Signed = 805437440 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Unsigned = 805502976 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Percent = 805634048 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Slider = 1073872896 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Pan = 1073872897 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType QSoundPan = 1073872898 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Fader = 1342373888 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Volume = 1342373889 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Bass = 1342373890 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Treble = 1342373891 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Equalizer = 1342373892 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType SingleSelect = 1879113728 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Mux = 1879113729 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType MultipleSelect = 1895890944 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType Mixer = 1895890945 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType MicroTime = 1610809344 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerControlType MilliTime = 1627586560 : Public, Static, Literal, HasDefault
Class NAudio.Mixer.MixerLine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(IntPtr, Int32, NAudio.Mixer.MixerFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, Int32, Int32, NAudio.Mixer.MixerFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    System.String ShortName 'get ' : 
    Int32 LineId 'get ' : 
    NAudio.Mixer.MixerLineComponentType ComponentType 'get ' : 
    System.String TypeDescription 'get ' : 
    Int32 Channels 'get ' : 
    Int32 SourceCount 'get ' : 
    Int32 ControlsCount 'get ' : 
    Boolean IsActive 'get ' : 
    Boolean IsDisconnected 'get ' : 
    Boolean IsSource 'get ' : 
    System.Collections.Generic.IEnumerable`1[NAudio.Mixer.MixerControl] Controls 'get ' : 
    System.Collections.Generic.IEnumerable`1[NAudio.Mixer.MixerLine] Sources 'get ' : 
    System.String TargetName 'get ' : 
  Methods:
    GetMixerIdForWaveIn(Int32): PrivateScope, Public, Static, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_ShortName(): PrivateScope, Public, HideBySig, SpecialName
    get_LineId(): PrivateScope, Public, HideBySig, SpecialName
    get_ComponentType(): PrivateScope, Public, HideBySig, SpecialName
    get_TypeDescription(): PrivateScope, Public, HideBySig, SpecialName
    get_Channels(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceCount(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_IsActive(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisconnected(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSource(): PrivateScope, Public, HideBySig, SpecialName
    GetSource(Int32): PrivateScope, Public, HideBySig
    get_Controls(): PrivateScope, Public, HideBySig, SpecialName
    get_Sources(): PrivateScope, Public, HideBySig, SpecialName
    get_TargetName(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct NAudio.Mixer.MixerFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Mixer.MixerFlags Handle = -2147483648 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags Mixer = 0 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags MixerHandle = -2147483648 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags WaveOut = 268435456 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags WaveOutHandle = -1879048192 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags WaveIn = 536870912 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags WaveInHandle = -1610612736 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags MidiOut = 805306368 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags MidiOutHandle = -1342177280 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags MidiIn = 1073741824 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags MidiInHandle = -1073741824 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags Aux = 1342177280 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags Value = 0 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags ListText = 1 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags QueryMask = 15 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags All = 0 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags OneById = 1 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags OneByType = 2 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags GetLineInfoOfDestination = 0 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags GetLineInfoOfSource = 1 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags GetLineInfoOfLineId = 2 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags GetLineInfoOfComponentType = 3 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags GetLineInfoOfTargetType = 4 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerFlags GetLineInfoOfQueryMask = 15 : Public, Static, Literal, HasDefault
Class NAudio.Mixer.MixerInterop: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 MIXERCONTROL_CONTROLF_UNIFORM = 1 : Public, Static, Literal, HasDefault
    UInt32 MIXERCONTROL_CONTROLF_MULTIPLE = 2 : Public, Static, Literal, HasDefault
    UInt32 MIXERCONTROL_CONTROLF_DISABLED = 2147483648 : Public, Static, Literal, HasDefault
    Int32 MAXPNAMELEN = 32 : Public, Static, Literal, HasDefault
    Int32 MIXER_SHORT_NAME_CHARS = 16 : Public, Static, Literal, HasDefault
    Int32 MIXER_LONG_NAME_CHARS = 64 : Public, Static, Literal, HasDefault
  Methods:
    mixerGetNumDevs(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mixerOpen(IntPtr&(Out), Int32, IntPtr, IntPtr, MixerFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mixerClose(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mixerGetControlDetails(IntPtr, MIXERCONTROLDETAILS&, MixerFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mixerGetDevCaps(IntPtr, MIXERCAPS&, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mixerGetID(IntPtr, Int32&(Out), MixerFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mixerGetLineControls(IntPtr, MIXERLINECONTROLS&, MixerFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mixerGetLineInfo(IntPtr, MIXERLINE&, MixerFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mixerMessage(IntPtr, UInt32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mixerSetControlDetails(IntPtr, MIXERCONTROLDETAILS&, MixerFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Struct NAudio.Mixer.MixerLineComponentType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Mixer.MixerLineComponentType DestinationUndefined = 0 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType DestinationDigital = 1 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType DestinationLine = 2 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType DestinationMonitor = 3 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType DestinationSpeakers = 4 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType DestinationHeadphones = 5 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType DestinationTelephone = 6 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType DestinationWaveIn = 7 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType DestinationVoiceIn = 8 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType SourceUndefined = 4096 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType SourceDigital = 4097 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType SourceLine = 4098 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType SourceMicrophone = 4099 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType SourceSynthesizer = 4100 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType SourceCompactDisc = 4101 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType SourceTelephone = 4102 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType SourcePcSpeaker = 4103 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType SourceWaveOut = 4104 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType SourceAuxiliary = 4105 : Public, Static, Literal, HasDefault
    NAudio.Mixer.MixerLineComponentType SourceAnalog = 4106 : Public, Static, Literal, HasDefault
Class NAudio.Mixer.SignedMixerControl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Mixer.MixerControl
    Void .ctor(MIXERCONTROL, IntPtr, NAudio.Mixer.MixerFlags, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Value 'get set' : 
    Int32 MinValue 'get ' : 
    Int32 MaxValue 'get ' : 
    Double Percent 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MinValue(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Percent(): PrivateScope, Public, HideBySig, SpecialName
    set_Percent(Double): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Mixer.UnsignedMixerControl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Mixer.MixerControl
    Void .ctor(MIXERCONTROL, IntPtr, NAudio.Mixer.MixerFlags, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 Value 'get set' : 
    UInt32 MinValue 'get ' : 
    UInt32 MaxValue 'get ' : 
    Double Percent 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_MinValue(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxValue(): PrivateScope, Public, HideBySig, SpecialName
    get_Percent(): PrivateScope, Public, HideBySig, SpecialName
    set_Percent(Double): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Gui.Fader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Control
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Minimum 'get set' : 
    Int32 Maximum 'get set' : 
    Int32 Value 'get set' : 
    System.Windows.Forms.Orientation Orientation 'get set' : 
  Methods:
    get_Minimum(): PrivateScope, Public, HideBySig, SpecialName
    set_Minimum(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Maximum(): PrivateScope, Public, HideBySig, SpecialName
    set_Maximum(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Orientation(): PrivateScope, Public, HideBySig, SpecialName
    set_Orientation(Orientation): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Gui.PanSlider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.UserControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Pan 'get set' : 
  Events:
    System.EventHandler PanChanged: 
  Methods:
    add_PanChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_PanChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Pan(): PrivateScope, Public, HideBySig, SpecialName
    set_Pan(Single): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Gui.Pot: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.UserControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Minimum 'get set' : 
    Double Maximum 'get set' : 
    Double Value 'get set' : 
  Events:
    System.EventHandler ValueChanged: 
  Methods:
    add_ValueChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ValueChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Minimum(): PrivateScope, Public, HideBySig, SpecialName
    set_Minimum(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Maximum(): PrivateScope, Public, HideBySig, SpecialName
    set_Maximum(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Double): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Gui.VolumeMeter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Control
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Amplitude 'get set' : 
    Single MinDb 'get set' : 
    Single MaxDb 'get set' : 
    System.Windows.Forms.Orientation Orientation 'get set' : 
  Methods:
    get_Amplitude(): PrivateScope, Public, HideBySig, SpecialName
    set_Amplitude(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MinDb(): PrivateScope, Public, HideBySig, SpecialName
    set_MinDb(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MaxDb(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxDb(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Orientation(): PrivateScope, Public, HideBySig, SpecialName
    set_Orientation(Orientation): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Gui.VolumeSlider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.UserControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Volume 'get set' : 
  Events:
    System.EventHandler VolumeChanged: 
  Methods:
    add_VolumeChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_VolumeChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Gui.WaveformPainter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Control
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddMax(Single): PrivateScope, Public, HideBySig
Class NAudio.Gui.WaveViewer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.UserControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Wave.WaveStream WaveStream 'get set' : 
    Int32 SamplesPerPixel 'get set' : 
    Int64 StartPosition 'get set' : 
  Methods:
    get_WaveStream(): PrivateScope, Public, HideBySig, SpecialName
    set_WaveStream(WaveStream): PrivateScope, Public, HideBySig, SpecialName
    get_SamplesPerPixel(): PrivateScope, Public, HideBySig, SpecialName
    set_SamplesPerPixel(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StartPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_StartPosition(Int64): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.SoundFont.Generator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.SoundFont.GeneratorEnum GeneratorType 'get set' : 
    UInt16 UInt16Amount 'get set' : 
    Int16 Int16Amount 'get set' : 
    Byte LowByteAmount 'get set' : 
    Byte HighByteAmount 'get set' : 
    NAudio.SoundFont.Instrument Instrument 'get set' : 
    NAudio.SoundFont.SampleHeader SampleHeader 'get set' : 
  Methods:
    get_GeneratorType(): PrivateScope, Public, HideBySig, SpecialName
    set_GeneratorType(GeneratorEnum): PrivateScope, Public, HideBySig, SpecialName
    get_UInt16Amount(): PrivateScope, Public, HideBySig, SpecialName
    set_UInt16Amount(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_Int16Amount(): PrivateScope, Public, HideBySig, SpecialName
    set_Int16Amount(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_LowByteAmount(): PrivateScope, Public, HideBySig, SpecialName
    set_LowByteAmount(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_HighByteAmount(): PrivateScope, Public, HideBySig, SpecialName
    set_HighByteAmount(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Instrument(): PrivateScope, Public, HideBySig, SpecialName
    set_Instrument(Instrument): PrivateScope, Public, HideBySig, SpecialName
    get_SampleHeader(): PrivateScope, Public, HideBySig, SpecialName
    set_SampleHeader(SampleHeader): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.SoundFont.GeneratorBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NAudio.SoundFont.StructureBuilder`1[NAudio.SoundFont.Generator]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
    NAudio.SoundFont.Generator[] Generators 'get ' : 
  Methods:
    Read(BinaryReader): PrivateScope, Public, Virtual, HideBySig
    Write(BinaryWriter, Generator): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Generators(): PrivateScope, Public, HideBySig, SpecialName
    Load(Instrument[]): PrivateScope, Public, HideBySig
    Load(SampleHeader[]): PrivateScope, Public, HideBySig
Struct NAudio.SoundFont.GeneratorEnum: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.SoundFont.GeneratorEnum StartAddressOffset = 0 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum EndAddressOffset = 1 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum StartLoopAddressOffset = 2 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum EndLoopAddressOffset = 3 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum StartAddressCoarseOffset = 4 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum ModulationLFOToPitch = 5 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum VibratoLFOToPitch = 6 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum ModulationEnvelopeToPitch = 7 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum InitialFilterCutoffFrequency = 8 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum InitialFilterQ = 9 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum ModulationLFOToFilterCutoffFrequency = 10 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum ModulationEnvelopeToFilterCutoffFrequency = 11 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum EndAddressCoarseOffset = 12 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum ModulationLFOToVolume = 13 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum Unused1 = 14 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum ChorusEffectsSend = 15 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum ReverbEffectsSend = 16 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum Pan = 17 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum Unused2 = 18 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum Unused3 = 19 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum Unused4 = 20 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum DelayModulationLFO = 21 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum FrequencyModulationLFO = 22 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum DelayVibratoLFO = 23 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum FrequencyVibratoLFO = 24 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum DelayModulationEnvelope = 25 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum AttackModulationEnvelope = 26 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum HoldModulationEnvelope = 27 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum DecayModulationEnvelope = 28 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum SustainModulationEnvelope = 29 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum ReleaseModulationEnvelope = 30 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum KeyNumberToModulationEnvelopeHold = 31 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum KeyNumberToModulationEnvelopeDecay = 32 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum DelayVolumeEnvelope = 33 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum AttackVolumeEnvelope = 34 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum HoldVolumeEnvelope = 35 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum DecayVolumeEnvelope = 36 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum SustainVolumeEnvelope = 37 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum ReleaseVolumeEnvelope = 38 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum KeyNumberToVolumeEnvelopeHold = 39 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum KeyNumberToVolumeEnvelopeDecay = 40 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum Instrument = 41 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum Reserved1 = 42 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum KeyRange = 43 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum VelocityRange = 44 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum StartLoopAddressCoarseOffset = 45 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum KeyNumber = 46 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum Velocity = 47 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum InitialAttenuation = 48 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum Reserved2 = 49 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum EndLoopAddressCoarseOffset = 50 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum CoarseTune = 51 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum FineTune = 52 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum SampleID = 53 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum SampleModes = 54 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum Reserved3 = 55 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum ScaleTuning = 56 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum ExclusiveClass = 57 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum OverridingRootKey = 58 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum Unused5 = 59 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.GeneratorEnum UnusedEnd = 60 : Public, Static, Literal, HasDefault
Class NAudio.SoundFont.InfoChunk: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.SoundFont.RiffChunk): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.SoundFont.SFVersion SoundFontVersion 'get ' : 
    System.String WaveTableSoundEngine 'get set' : 
    System.String BankName 'get set' : 
    System.String DataROM 'get set' : 
    System.String CreationDate 'get set' : 
    System.String Author 'get set' : 
    System.String TargetProduct 'get set' : 
    System.String Copyright 'get set' : 
    System.String Comments 'get set' : 
    System.String Tools 'get set' : 
    NAudio.SoundFont.SFVersion ROMVersion 'get set' : 
  Methods:
    get_SoundFontVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_WaveTableSoundEngine(): PrivateScope, Public, HideBySig, SpecialName
    set_WaveTableSoundEngine(String): PrivateScope, Public, HideBySig, SpecialName
    get_BankName(): PrivateScope, Public, HideBySig, SpecialName
    set_BankName(String): PrivateScope, Public, HideBySig, SpecialName
    get_DataROM(): PrivateScope, Public, HideBySig, SpecialName
    set_DataROM(String): PrivateScope, Public, HideBySig, SpecialName
    get_CreationDate(): PrivateScope, Public, HideBySig, SpecialName
    set_CreationDate(String): PrivateScope, Public, HideBySig, SpecialName
    get_Author(): PrivateScope, Public, HideBySig, SpecialName
    set_Author(String): PrivateScope, Public, HideBySig, SpecialName
    get_TargetProduct(): PrivateScope, Public, HideBySig, SpecialName
    set_TargetProduct(String): PrivateScope, Public, HideBySig, SpecialName
    get_Copyright(): PrivateScope, Public, HideBySig, SpecialName
    set_Copyright(String): PrivateScope, Public, HideBySig, SpecialName
    get_Comments(): PrivateScope, Public, HideBySig, SpecialName
    set_Comments(String): PrivateScope, Public, HideBySig, SpecialName
    get_Tools(): PrivateScope, Public, HideBySig, SpecialName
    set_Tools(String): PrivateScope, Public, HideBySig, SpecialName
    get_ROMVersion(): PrivateScope, Public, HideBySig, SpecialName
    set_ROMVersion(SFVersion): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.SoundFont.Instrument: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt16 startInstrumentZoneIndex : Assembly
    UInt16 endInstrumentZoneIndex : Assembly
  Properties:
    System.String Name 'get set' : 
    NAudio.SoundFont.Zone[] Zones 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Zones(): PrivateScope, Public, HideBySig, SpecialName
    set_Zones(Zone[]): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.SoundFont.InstrumentBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NAudio.SoundFont.StructureBuilder`1[NAudio.SoundFont.Instrument]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
    NAudio.SoundFont.Instrument[] Instruments 'get ' : 
  Methods:
    Read(BinaryReader): PrivateScope, Public, Virtual, HideBySig
    Write(BinaryWriter, Instrument): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    LoadZones(Zone[]): PrivateScope, Public, HideBySig
    get_Instruments(): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.SoundFont.TransformEnum: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.SoundFont.TransformEnum Linear = 0 : Public, Static, Literal, HasDefault
Class NAudio.SoundFont.Modulator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.SoundFont.ModulatorType SourceModulationData 'get set' : 
    NAudio.SoundFont.GeneratorEnum DestinationGenerator 'get set' : 
    Int16 Amount 'get set' : 
    NAudio.SoundFont.ModulatorType SourceModulationAmount 'get set' : 
    NAudio.SoundFont.TransformEnum SourceTransform 'get set' : 
  Methods:
    get_SourceModulationData(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceModulationData(ModulatorType): PrivateScope, Public, HideBySig, SpecialName
    get_DestinationGenerator(): PrivateScope, Public, HideBySig, SpecialName
    set_DestinationGenerator(GeneratorEnum): PrivateScope, Public, HideBySig, SpecialName
    get_Amount(): PrivateScope, Public, HideBySig, SpecialName
    set_Amount(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_SourceModulationAmount(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceModulationAmount(ModulatorType): PrivateScope, Public, HideBySig, SpecialName
    get_SourceTransform(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceTransform(TransformEnum): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.SoundFont.ModulatorBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NAudio.SoundFont.StructureBuilder`1[NAudio.SoundFont.Modulator]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
    NAudio.SoundFont.Modulator[] Modulators 'get ' : 
  Methods:
    Read(BinaryReader): PrivateScope, Public, Virtual, HideBySig
    Write(BinaryWriter, Modulator): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Modulators(): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.SoundFont.ControllerSourceEnum: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.SoundFont.ControllerSourceEnum NoController = 0 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.ControllerSourceEnum NoteOnVelocity = 2 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.ControllerSourceEnum NoteOnKeyNumber = 3 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.ControllerSourceEnum PolyPressure = 10 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.ControllerSourceEnum ChannelPressure = 13 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.ControllerSourceEnum PitchWheel = 14 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.ControllerSourceEnum PitchWheelSensitivity = 16 : Public, Static, Literal, HasDefault
Struct NAudio.SoundFont.SourceTypeEnum: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.SoundFont.SourceTypeEnum Linear = 0 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.SourceTypeEnum Concave = 1 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.SourceTypeEnum Convex = 2 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.SourceTypeEnum Switch = 3 : Public, Static, Literal, HasDefault
Class NAudio.SoundFont.ModulatorType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt16): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.SoundFont.Preset: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt16 startPresetZoneIndex : Assembly
    UInt16 endPresetZoneIndex : Assembly
    UInt32 library : Assembly
    UInt32 genre : Assembly
    UInt32 morphology : Assembly
  Properties:
    System.String Name 'get set' : 
    UInt16 PatchNumber 'get set' : 
    UInt16 Bank 'get set' : 
    NAudio.SoundFont.Zone[] Zones 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_PatchNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_PatchNumber(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_Bank(): PrivateScope, Public, HideBySig, SpecialName
    set_Bank(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_Zones(): PrivateScope, Public, HideBySig, SpecialName
    set_Zones(Zone[]): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.SoundFont.PresetBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NAudio.SoundFont.StructureBuilder`1[NAudio.SoundFont.Preset]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
    NAudio.SoundFont.Preset[] Presets 'get ' : 
  Methods:
    Read(BinaryReader): PrivateScope, Public, Virtual, HideBySig
    Write(BinaryWriter, Preset): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    LoadZones(Zone[]): PrivateScope, Public, HideBySig
    get_Presets(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.SoundFont.PresetsChunk: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.SoundFont.RiffChunk): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.SoundFont.Preset[] Presets 'get ' : 
    NAudio.SoundFont.Instrument[] Instruments 'get ' : 
    NAudio.SoundFont.SampleHeader[] SampleHeaders 'get ' : 
  Methods:
    get_Presets(): PrivateScope, Public, HideBySig, SpecialName
    get_Instruments(): PrivateScope, Public, HideBySig, SpecialName
    get_SampleHeaders(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.SoundFont.RiffChunk: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Properties:
    System.String ChunkID 'get set' : 
    UInt32 ChunkSize 'get ' : 
    Int64 DataOffset 'get ' : 
  Methods:
    GetTopLevelChunk(BinaryReader): PrivateScope, Public, Static, HideBySig
    ReadChunkID(): PrivateScope, Public, HideBySig
    GetNextSubChunk(): PrivateScope, Public, HideBySig
    GetData(): PrivateScope, Public, HideBySig
    GetDataAsString(): PrivateScope, Public, HideBySig
    GetDataAsStructure(StructureBuilder`1): PrivateScope, Public, HideBySig
    GetDataAsStructureArray(StructureBuilder`1): PrivateScope, Public, HideBySig
    get_ChunkID(): PrivateScope, Public, HideBySig, SpecialName
    set_ChunkID(String): PrivateScope, Public, HideBySig, SpecialName
    get_ChunkSize(): PrivateScope, Public, HideBySig, SpecialName
    get_DataOffset(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.SoundFont.SampleDataChunk: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NAudio.SoundFont.RiffChunk): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] SampleData 'get ' : 
  Methods:
    get_SampleData(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.SoundFont.SampleHeader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String SampleName : Public
    UInt32 Start : Public
    UInt32 End : Public
    UInt32 StartLoop : Public
    UInt32 EndLoop : Public
    UInt32 SampleRate : Public
    Byte OriginalPitch : Public
    SByte PitchCorrection : Public
    UInt16 SampleLink : Public
    NAudio.SoundFont.SFSampleLink SFSampleLink : Public
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.SoundFont.SampleHeaderBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NAudio.SoundFont.StructureBuilder`1[NAudio.SoundFont.SampleHeader]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
    NAudio.SoundFont.SampleHeader[] SampleHeaders 'get ' : 
  Methods:
    Read(BinaryReader): PrivateScope, Public, Virtual, HideBySig
    Write(BinaryWriter, SampleHeader): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    RemoveEOS(): PrivateScope, Assembly, HideBySig
    get_SampleHeaders(): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.SoundFont.SampleMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.SoundFont.SampleMode NoLoop = 0 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.SampleMode LoopContinuously = 1 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.SampleMode ReservedNoLoop = 2 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.SampleMode LoopAndContinue = 3 : Public, Static, Literal, HasDefault
Struct NAudio.SoundFont.SFSampleLink: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    NAudio.SoundFont.SFSampleLink MonoSample = 1 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.SFSampleLink RightSample = 2 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.SFSampleLink LeftSample = 4 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.SFSampleLink LinkedSample = 8 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.SFSampleLink RomMonoSample = 32769 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.SFSampleLink RomRightSample = 32770 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.SFSampleLink RomLeftSample = 32772 : Public, Static, Literal, HasDefault
    NAudio.SoundFont.SFSampleLink RomLinkedSample = 32776 : Public, Static, Literal, HasDefault
Class NAudio.SoundFont.SFVersion: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int16 Major 'get set' : 
    Int16 Minor 'get set' : 
  Methods:
    get_Major(): PrivateScope, Public, HideBySig, SpecialName
    set_Major(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_Minor(): PrivateScope, Public, HideBySig, SpecialName
    set_Minor(Int16): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.SoundFont.SFVersionBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NAudio.SoundFont.StructureBuilder`1[NAudio.SoundFont.SFVersion]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
  Methods:
    Read(BinaryReader): PrivateScope, Public, Virtual, HideBySig
    Write(BinaryWriter, SFVersion): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NAudio.SoundFont.SoundFont: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.SoundFont.InfoChunk FileInfo 'get ' : 
    NAudio.SoundFont.Preset[] Presets 'get ' : 
    NAudio.SoundFont.Instrument[] Instruments 'get ' : 
    NAudio.SoundFont.SampleHeader[] SampleHeaders 'get ' : 
    Byte[] SampleData 'get ' : 
  Methods:
    get_FileInfo(): PrivateScope, Public, HideBySig, SpecialName
    get_Presets(): PrivateScope, Public, HideBySig, SpecialName
    get_Instruments(): PrivateScope, Public, HideBySig, SpecialName
    get_SampleHeaders(): PrivateScope, Public, HideBySig, SpecialName
    get_SampleData(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.SoundFont.StructureBuilder`1[T]: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
    T[] Data   'get ' : 
  Methods:
    Read(BinaryReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Write(BinaryWriter, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Length(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Reset(): PrivateScope, Public, HideBySig
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.SoundFont.Zone: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt16 generatorIndex : Assembly
    UInt16 modulatorIndex : Assembly
    UInt16 generatorCount : Assembly
    UInt16 modulatorCount : Assembly
  Properties:
    NAudio.SoundFont.Modulator[] Modulators 'get set' : 
    NAudio.SoundFont.Generator[] Generators 'get set' : 
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Modulators(): PrivateScope, Public, HideBySig, SpecialName
    set_Modulators(Modulator[]): PrivateScope, Public, HideBySig, SpecialName
    get_Generators(): PrivateScope, Public, HideBySig, SpecialName
    set_Generators(Generator[]): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.SoundFont.ZoneBuilder: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NAudio.SoundFont.StructureBuilder`1[NAudio.SoundFont.Zone]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.SoundFont.Zone[] Zones 'get ' : 
    Int32 Length 'get ' : 
  Methods:
    Read(BinaryReader): PrivateScope, Public, Virtual, HideBySig
    Write(BinaryWriter, Zone): PrivateScope, Public, Virtual, HideBySig
    Load(Modulator[], Generator[]): PrivateScope, Public, HideBySig
    get_Zones(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NAudio.Dmo.AudioMediaSubtypes: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Guid MEDIASUBTYPE_PCM : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_PCMAudioObsolete : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_MPEG1Packet : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_MPEG1Payload : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_MPEG2_AUDIO : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_DVD_LPCM_AUDIO : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_DRM_Audio : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_IEEE_FLOAT : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_DOLBY_AC3 : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_DOLBY_AC3_SPDIF : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_RAW_SPORT : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_SPDIF_TAG_241h : Public, Static, InitOnly
    System.Guid WMMEDIASUBTYPE_MP3 : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_WAVE : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_AU : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_AIFF : Public, Static, InitOnly
    System.Guid[] AudioSubTypes : Public, Static, InitOnly
    System.String[] AudioSubTypeNames : Public, Static, InitOnly
  Methods:
    GetAudioSubtypeName(Guid): PrivateScope, Public, Static, HideBySig
Class NAudio.Dmo.DmoDescriptor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.Guid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    System.Guid Clsid 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Clsid(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Dmo.DmoEnumerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetAudioEffectNames(): PrivateScope, Public, Static, HideBySig
    GetAudioEncoderNames(): PrivateScope, Public, Static, HideBySig
    GetAudioDecoderNames(): PrivateScope, Public, Static, HideBySig
Struct NAudio.Dmo.DmoEnumFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Dmo.DmoEnumFlags None = 0 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoEnumFlags DMO_ENUMF_INCLUDE_KEYED = 1 : Public, Static, Literal, HasDefault
Class NAudio.Dmo.DmoGuids: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Guid DMOCATEGORY_AUDIO_DECODER : Public, Static, InitOnly
    System.Guid DMOCATEGORY_AUDIO_ENCODER : Public, Static, InitOnly
    System.Guid DMOCATEGORY_VIDEO_DECODER : Public, Static, InitOnly
    System.Guid DMOCATEGORY_VIDEO_ENCODER : Public, Static, InitOnly
    System.Guid DMOCATEGORY_AUDIO_EFFECT : Public, Static, InitOnly
    System.Guid DMOCATEGORY_VIDEO_EFFECT : Public, Static, InitOnly
    System.Guid DMOCATEGORY_AUDIO_CAPTURE_EFFECT : Public, Static, InitOnly
Class NAudio.Dmo.DmoMediaTypeGuids: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Guid FORMAT_None : Public, Static, InitOnly
    System.Guid FORMAT_VideoInfo : Public, Static, InitOnly
    System.Guid FORMAT_VideoInfo2 : Public, Static, InitOnly
    System.Guid FORMAT_WaveFormatEx : Public, Static, InitOnly
    System.Guid FORMAT_MPEGVideo : Public, Static, InitOnly
    System.Guid FORMAT_MPEGStreams : Public, Static, InitOnly
    System.Guid FORMAT_DvInfo : Public, Static, InitOnly
    System.Guid FORMAT_525WSS : Public, Static, InitOnly
Struct NAudio.Dmo.DmoHResults: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Dmo.DmoHResults DMO_E_INVALIDSTREAMINDEX = -2147220991 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoHResults DMO_E_INVALIDTYPE = -2147220990 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoHResults DMO_E_TYPE_NOT_SET = -2147220989 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoHResults DMO_E_NOTACCEPTING = -2147220988 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoHResults DMO_E_TYPE_NOT_ACCEPTED = -2147220987 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoHResults DMO_E_NO_MORE_ITEMS = -2147220986 : Public, Static, Literal, HasDefault
Class NAudio.Dmo.DmoInterop: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    DMOEnum(Guid&(In), DmoEnumFlags, Int32, DmoPartialMediaType[](In), Int32, DmoPartialMediaType[](In), IEnumDmo&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MoFreeMediaType(DmoMediaType&(In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MoInitMediaType(DmoMediaType&(In, Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    DMOGetName(Guid&(In), StringBuilder(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Struct NAudio.Dmo.DmoPartialMediaType: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    System.Guid Type 'get set' : 
    System.Guid Subtype 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Guid): PrivateScope, Assembly, HideBySig, SpecialName
    get_Subtype(): PrivateScope, Public, HideBySig, SpecialName
    set_Subtype(Guid): PrivateScope, Assembly, HideBySig, SpecialName
Interface NAudio.Dmo.IMediaParamInfo: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import, HasSecurity
  Methods:
    GetParamCount(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetParamInfo(Int32, MediaParamInfo&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetParamText(Int32, IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNumTimeFormats(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSupportedTimeFormat(Int32, Guid&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCurrentTimeFormat(Guid&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.Dmo.IWMResamplerProps: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    SetHalfFilterLength(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUserChannelMtx(Single[](In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NAudio.Dmo.MediaBuffer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Dmo.IMediaBuffer
    System.IDisposable
  Properties:
    Int32 Length 'get set' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Int32): PrivateScope, Public, HideBySig, SpecialName
    LoadData(Byte[], Int32): PrivateScope, Public, HideBySig
    RetrieveData(Byte[], Int32): PrivateScope, Public, HideBySig
Class NAudio.Dmo.MediaObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Dmo.IMediaObject): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 InputStreamCount 'get ' : 
    Int32 OutputStreamCount 'get ' : 
  Methods:
    get_InputStreamCount(): PrivateScope, Public, HideBySig, SpecialName
    get_OutputStreamCount(): PrivateScope, Public, HideBySig, SpecialName
    GetInputType(Int32, Int32): PrivateScope, Public, HideBySig
    GetOutputType(Int32, Int32): PrivateScope, Public, HideBySig
    GetOutputCurrentType(Int32): PrivateScope, Public, HideBySig
    GetInputTypes(Int32): PrivateScope, Public, HideBySig
    GetOutputTypes(Int32): PrivateScope, Public, HideBySig
    SupportsInputType(Int32, DmoMediaType): PrivateScope, Public, HideBySig
    SetInputType(Int32, DmoMediaType): PrivateScope, Public, HideBySig
    SetInputWaveFormat(Int32, WaveFormat): PrivateScope, Public, HideBySig
    SupportsInputWaveFormat(Int32, WaveFormat): PrivateScope, Public, HideBySig
    SupportsOutputType(Int32, DmoMediaType): PrivateScope, Public, HideBySig
    SupportsOutputWaveFormat(Int32, WaveFormat): PrivateScope, Public, HideBySig
    SetOutputType(Int32, DmoMediaType): PrivateScope, Public, HideBySig
    SetOutputWaveFormat(Int32, WaveFormat): PrivateScope, Public, HideBySig
    GetInputSizeInfo(Int32): PrivateScope, Public, HideBySig
    GetOutputSizeInfo(Int32): PrivateScope, Public, HideBySig
    ProcessInput(Int32, IMediaBuffer, DmoInputDataBufferFlags, Int64, Int64): PrivateScope, Public, HideBySig
    ProcessOutput(DmoProcessOutputFlags, Int32, DmoOutputDataBuffer[]): PrivateScope, Public, HideBySig
    AllocateStreamingResources(): PrivateScope, Public, HideBySig
    FreeStreamingResources(): PrivateScope, Public, HideBySig
    GetInputMaxLatency(Int32): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, HideBySig
    Discontinuity(Int32): PrivateScope, Public, HideBySig
    IsAcceptingData(Int32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Dmo.MediaObjectSizeInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Size 'get set' : 
    Int32 MaxLookahead 'get ' : 
    Int32 Alignment 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxLookahead(): PrivateScope, Public, HideBySig, SpecialName
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct NAudio.Dmo.MediaParamInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    NAudio.Dmo.MediaParamType mpType : Public
    NAudio.Dmo.MediaParamCurveType mopCaps : Public
    Single mpdMinValue : Public
    Single mpdMaxValue : Public
    Single mpdNeutralValue : Public
    System.String szUnitText : Public, HasFieldMarshal
    System.String szLabel : Public, HasFieldMarshal
Struct NAudio.Dmo.MediaParamType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Dmo.MediaParamType Int = 0 : Public, Static, Literal, HasDefault
    NAudio.Dmo.MediaParamType Float = 1 : Public, Static, Literal, HasDefault
    NAudio.Dmo.MediaParamType Bool = 2 : Public, Static, Literal, HasDefault
    NAudio.Dmo.MediaParamType Enum = 3 : Public, Static, Literal, HasDefault
    NAudio.Dmo.MediaParamType Max = 4 : Public, Static, Literal, HasDefault
Struct NAudio.Dmo.MediaParamCurveType: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Dmo.MediaParamCurveType MP_CURVE_JUMP = 1 : Public, Static, Literal, HasDefault
    NAudio.Dmo.MediaParamCurveType MP_CURVE_LINEAR = 2 : Public, Static, Literal, HasDefault
    NAudio.Dmo.MediaParamCurveType MP_CURVE_SQUARE = 4 : Public, Static, Literal, HasDefault
    NAudio.Dmo.MediaParamCurveType MP_CURVE_INVSQUARE = 8 : Public, Static, Literal, HasDefault
    NAudio.Dmo.MediaParamCurveType MP_CURVE_SINE = 16 : Public, Static, Literal, HasDefault
Class NAudio.Dmo.MediaTypes: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Guid MEDIATYPE_AnalogAudio : Public, Static, InitOnly
    System.Guid MEDIATYPE_AnalogVideo : Public, Static, InitOnly
    System.Guid MEDIATYPE_Audio : Public, Static, InitOnly
    System.Guid MEDIATYPE_AUXLine21Data : Public, Static, InitOnly
    System.Guid MEDIATYPE_File : Public, Static, InitOnly
    System.Guid MEDIATYPE_Interleaved : Public, Static, InitOnly
    System.Guid MEDIATYPE_Midi : Public, Static, InitOnly
    System.Guid MEDIATYPE_ScriptCommand : Public, Static, InitOnly
    System.Guid MEDIATYPE_Stream : Public, Static, InitOnly
    System.Guid MEDIATYPE_Text : Public, Static, InitOnly
    System.Guid MEDIATYPE_Timecode : Public, Static, InitOnly
    System.Guid MEDIATYPE_Video : Public, Static, InitOnly
    System.Guid[] MajorTypes : Public, Static, InitOnly
    System.String[] MajorTypeNames : Public, Static, InitOnly
  Methods:
    GetMediaTypeName(Guid): PrivateScope, Public, Static, HideBySig
Class NAudio.Dmo.WindowsMediaMp3DecoderComObject: AutoLayout, AnsiClass, Class, Import, BeforeFieldInit
  :System.__ComObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NAudio.Dmo.WindowsMediaMp3Decoder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    NAudio.Dmo.MediaObject MediaObject 'get ' : 
  Methods:
    get_MediaObject(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NAudio.Dmo.DmoInputDataBufferFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Dmo.DmoInputDataBufferFlags None = 0 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoInputDataBufferFlags SyncPoint = 1 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoInputDataBufferFlags Time = 2 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoInputDataBufferFlags TimeLength = 4 : Public, Static, Literal, HasDefault
Struct NAudio.Dmo.DmoInputStatusFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Dmo.DmoInputStatusFlags None = 0 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoInputStatusFlags DMO_INPUT_STATUSF_ACCEPT_DATA = 1 : Public, Static, Literal, HasDefault
Struct NAudio.Dmo.DmoMediaType: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    System.Guid MajorType 'get ' : 
    System.String MajorTypeName 'get ' : 
    System.Guid SubType 'get ' : 
    System.String SubTypeName 'get ' : 
    Boolean FixedSizeSamples 'get ' : 
    Int32 SampleSize 'get ' : 
    System.Guid FormatType 'get ' : 
    System.String FormatTypeName 'get ' : 
  Methods:
    get_MajorType(): PrivateScope, Public, HideBySig, SpecialName
    get_MajorTypeName(): PrivateScope, Public, HideBySig, SpecialName
    get_SubType(): PrivateScope, Public, HideBySig, SpecialName
    get_SubTypeName(): PrivateScope, Public, HideBySig, SpecialName
    get_FixedSizeSamples(): PrivateScope, Public, HideBySig, SpecialName
    get_SampleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_FormatType(): PrivateScope, Public, HideBySig, SpecialName
    get_FormatTypeName(): PrivateScope, Public, HideBySig, SpecialName
    GetWaveFormat(): PrivateScope, Public, HideBySig
    SetWaveFormat(WaveFormat): PrivateScope, Public, HideBySig
Struct NAudio.Dmo.DmoOutputDataBuffer: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    NAudio.Dmo.IMediaBuffer MediaBuffer 'get set' : 
    Int32 Length 'get ' : 
    NAudio.Dmo.DmoOutputDataBufferFlags StatusFlags 'get set' : 
    Int64 Timestamp 'get set' : 
    Int64 Duration 'get set' : 
    Boolean MoreDataAvailable 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_MediaBuffer(): PrivateScope, Public, HideBySig, SpecialName
    set_MediaBuffer(IMediaBuffer): PrivateScope, Assembly, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_StatusFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_StatusFlags(DmoOutputDataBufferFlags): PrivateScope, Assembly, HideBySig, SpecialName
    get_Timestamp(): PrivateScope, Public, HideBySig, SpecialName
    set_Timestamp(Int64): PrivateScope, Assembly, HideBySig, SpecialName
    get_Duration(): PrivateScope, Public, HideBySig, SpecialName
    set_Duration(Int64): PrivateScope, Assembly, HideBySig, SpecialName
    RetrieveData(Byte[], Int32): PrivateScope, Public, HideBySig
    get_MoreDataAvailable(): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.Dmo.DmoOutputDataBufferFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Dmo.DmoOutputDataBufferFlags None = 0 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoOutputDataBufferFlags SyncPoint = 1 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoOutputDataBufferFlags Time = 2 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoOutputDataBufferFlags TimeLength = 4 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoOutputDataBufferFlags Incomplete = 16777216 : Public, Static, Literal, HasDefault
Struct NAudio.Dmo.DmoProcessOutputFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Dmo.DmoProcessOutputFlags None = 0 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoProcessOutputFlags DiscardWhenNoBuffer = 1 : Public, Static, Literal, HasDefault
Struct NAudio.Dmo.DmoSetTypeFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Dmo.DmoSetTypeFlags None = 0 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoSetTypeFlags DMO_SET_TYPEF_TEST_ONLY = 1 : Public, Static, Literal, HasDefault
    NAudio.Dmo.DmoSetTypeFlags DMO_SET_TYPEF_CLEAR = 2 : Public, Static, Literal, HasDefault
Interface NAudio.Dmo.IEnumDmo: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Next(Int32, Guid&(Out), IntPtr&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Skip(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Clone(IEnumDmo&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.Dmo.IMediaBuffer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, Import, HasSecurity
  Methods:
    SetLength(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMaxLength(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBufferAndLength(IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.Dmo.IMediaObject: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import, HasSecurity
  Methods:
    GetStreamCount(Int32&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInputStreamInfo(Int32, InputStreamInfoFlags&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputStreamInfo(Int32, OutputStreamInfoFlags&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInputType(Int32, Int32, DmoMediaType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputType(Int32, Int32, DmoMediaType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetInputType(Int32, DmoMediaType&(In), DmoSetTypeFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetOutputType(Int32, DmoMediaType&(In), DmoSetTypeFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInputCurrentType(Int32, DmoMediaType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputCurrentType(Int32, DmoMediaType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInputSizeInfo(Int32, Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputSizeInfo(Int32, Int32&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInputMaxLatency(Int32, Int64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetInputMaxLatency(Int32, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Discontinuity(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AllocateStreamingResources(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FreeStreamingResources(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInputStatus(Int32, DmoInputStatusFlags&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessInput(Int32, IMediaBuffer(In), DmoInputDataBufferFlags, Int64, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessOutput(DmoProcessOutputFlags, Int32, DmoOutputDataBuffer[](In, Out, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Lock(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct NAudio.Dmo.InputStreamInfoFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Dmo.InputStreamInfoFlags None = 0 : Public, Static, Literal, HasDefault
    NAudio.Dmo.InputStreamInfoFlags DMO_INPUT_STREAMF_WHOLE_SAMPLES = 1 : Public, Static, Literal, HasDefault
    NAudio.Dmo.InputStreamInfoFlags DMO_INPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER = 2 : Public, Static, Literal, HasDefault
    NAudio.Dmo.InputStreamInfoFlags DMO_INPUT_STREAMF_FIXED_SAMPLE_SIZE = 4 : Public, Static, Literal, HasDefault
    NAudio.Dmo.InputStreamInfoFlags DMO_INPUT_STREAMF_HOLDS_BUFFERS = 8 : Public, Static, Literal, HasDefault
Struct NAudio.Dmo.OutputStreamInfoFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Dmo.OutputStreamInfoFlags DMO_OUTPUT_STREAMF_WHOLE_SAMPLES = 1 : Public, Static, Literal, HasDefault
    NAudio.Dmo.OutputStreamInfoFlags DMO_OUTPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER = 2 : Public, Static, Literal, HasDefault
    NAudio.Dmo.OutputStreamInfoFlags DMO_OUTPUT_STREAMF_FIXED_SAMPLE_SIZE = 4 : Public, Static, Literal, HasDefault
    NAudio.Dmo.OutputStreamInfoFlags DMO_OUTPUT_STREAMF_DISCARDABLE = 8 : Public, Static, Literal, HasDefault
    NAudio.Dmo.OutputStreamInfoFlags DMO_OUTPUT_STREAMF_OPTIONAL = 16 : Public, Static, Literal, HasDefault
Class NAudio.Dmo.ResamplerMediaComObject: AutoLayout, AnsiClass, Class, Import, BeforeFieldInit
  :System.__ComObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NAudio.Dmo.DmoResampler: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    NAudio.Dmo.MediaObject MediaObject 'get ' : 
  Methods:
    get_MediaObject(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.WaveExtensionMethods: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToSampleProvider(IWaveProvider): PrivateScope, Public, Static, HideBySig
    Init(IWavePlayer, ISampleProvider, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    AsStandardWaveFormat(WaveFormat): PrivateScope, Public, Static, HideBySig
    ToWaveProvider(ISampleProvider): PrivateScope, Public, Static, HideBySig
    ToWaveProvider16(ISampleProvider): PrivateScope, Public, Static, HideBySig
    FollowedBy(ISampleProvider, ISampleProvider): PrivateScope, Public, Static, HideBySig
    FollowedBy(ISampleProvider, TimeSpan, ISampleProvider): PrivateScope, Public, Static, HideBySig
    Skip(ISampleProvider, TimeSpan): PrivateScope, Public, Static, HideBySig
    Take(ISampleProvider, TimeSpan): PrivateScope, Public, Static, HideBySig
    ToMono(ISampleProvider, Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ToStereo(ISampleProvider, Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class NAudio.Wave.WaveInEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveIn
    System.IDisposable
  Properties:
    Int32 DeviceCount 'get ' : 
    Int32 BufferMilliseconds 'get set' : 
    Int32 NumberOfBuffers 'get set' : 
    Int32 DeviceNumber 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get set' : 
  Events:
    System.EventHandler`1[NAudio.Wave.WaveInEventArgs] DataAvailable: 
    System.EventHandler`1[NAudio.Wave.StoppedEventArgs] RecordingStopped: 
  Methods:
    add_DataAvailable(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_DataAvailable(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_RecordingStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_RecordingStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DeviceCount(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetCapabilities(Int32): PrivateScope, Public, Static, HideBySig
    get_BufferMilliseconds(): PrivateScope, Public, HideBySig, SpecialName
    set_BufferMilliseconds(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfBuffers(): PrivateScope, Public, HideBySig, SpecialName
    set_NumberOfBuffers(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_DeviceNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    StartRecording(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    StopRecording(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_WaveFormat(WaveFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetMixerLine(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NAudio.Wave.ChannelMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.ChannelMode Stereo = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.ChannelMode JointStereo = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.ChannelMode DualChannel = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.ChannelMode Mono = 3 : Public, Static, Literal, HasDefault
Class NAudio.Wave.Id3v2Tag: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Byte[] RawData 'get ' : 
  Methods:
    ReadTag(Stream): PrivateScope, Public, Static, HideBySig
    Create(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    get_RawData(): PrivateScope, Public, HideBySig, SpecialName
Interface NAudio.Wave.IMp3FrameDecompressor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    NAudio.Wave.WaveFormat OutputFormat 'get ' : 
  Methods:
    DecompressFrame(Mp3Frame, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_OutputFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class NAudio.Wave.Mp3Frame: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Int32 SampleRate 'get set' : 
    Int32 FrameLength 'get set' : 
    Int32 BitRate 'get set' : 
    Byte[] RawData 'get set' : 
    NAudio.Wave.MpegVersion MpegVersion 'get set' : 
    NAudio.Wave.MpegLayer MpegLayer 'get set' : 
    NAudio.Wave.ChannelMode ChannelMode 'get set' : 
    Int32 SampleCount 'get set' : 
    Int32 ChannelExtension 'get set' : 
    Int32 BitRateIndex 'get set' : 
    Boolean Copyright 'get set' : 
    Boolean CrcPresent 'get set' : 
    Int64 FileOffset 'get set' : 
  Methods:
    LoadFromStream(Stream): PrivateScope, Public, Static, HideBySig
    LoadFromStream(Stream, Boolean): PrivateScope, Public, Static, HideBySig
    get_SampleRate(): PrivateScope, Public, HideBySig, SpecialName
    get_FrameLength(): PrivateScope, Public, HideBySig, SpecialName
    get_BitRate(): PrivateScope, Public, HideBySig, SpecialName
    get_RawData(): PrivateScope, Public, HideBySig, SpecialName
    get_MpegVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_MpegLayer(): PrivateScope, Public, HideBySig, SpecialName
    get_ChannelMode(): PrivateScope, Public, HideBySig, SpecialName
    get_SampleCount(): PrivateScope, Public, HideBySig, SpecialName
    get_ChannelExtension(): PrivateScope, Public, HideBySig, SpecialName
    get_BitRateIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_Copyright(): PrivateScope, Public, HideBySig, SpecialName
    get_CrcPresent(): PrivateScope, Public, HideBySig, SpecialName
    get_FileOffset(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.AcmMp3FrameDecompressor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IMp3FrameDecompressor
    System.IDisposable
  Properties:
    NAudio.Wave.WaveFormat OutputFormat 'get ' : 
  Methods:
    get_OutputFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    DecompressFrame(Mp3Frame, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NAudio.Wave.MpegLayer: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.MpegLayer Reserved = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.MpegLayer Layer3 = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.MpegLayer Layer2 = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.MpegLayer Layer1 = 3 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.MpegVersion: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.MpegVersion Version25 = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.MpegVersion Reserved = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.MpegVersion Version2 = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.MpegVersion Version1 = 3 : Public, Static, Literal, HasDefault
Class NAudio.Wave.XingHeader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Int32 Frames 'get set' : 
    Int32 Bytes 'get set' : 
    Int32 VbrScale 'get ' : 
    NAudio.Wave.Mp3Frame Mp3Frame 'get ' : 
  Methods:
    LoadXingHeader(Mp3Frame): PrivateScope, Public, Static, HideBySig
    get_Frames(): PrivateScope, Public, HideBySig, SpecialName
    set_Frames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Bytes(): PrivateScope, Public, HideBySig, SpecialName
    set_Bytes(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_VbrScale(): PrivateScope, Public, HideBySig, SpecialName
    get_Mp3Frame(): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.Wave.AcmMetrics: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.AcmMetrics CountDrivers = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics CountCodecs = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics CountConverters = 3 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics CountFilters = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics CountDisabled = 5 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics CountHardware = 6 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics CountLocalDrivers = 20 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics CountLocalCodecs = 21 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics CountLocalConverters = 22 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics CountLocalFilters = 23 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics CountLocalDisabled = 24 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics HardwareWaveInput = 30 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics HardwareWaveOutput = 31 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics MaxSizeFormat = 50 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics MaxSizeFilter = 51 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics DriverSupport = 100 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmMetrics DriverPriority = 101 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.AcmStreamConvertFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.AcmStreamConvertFlags BlockAlign = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmStreamConvertFlags Start = 16 : Public, Static, Literal, HasDefault
    NAudio.Wave.AcmStreamConvertFlags End = 32 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.MmTime: AutoLayout, AnsiClass, Class, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 wType : Public
    UInt32 ms : Public
    UInt32 sample : Public
    UInt32 cb : Public
    UInt32 ticks : Public
    Byte smpteHour : Public
    Byte smpteMin : Public
    Byte smpteSec : Public
    Byte smpteFrame : Public
    Byte smpteFps : Public
    Byte smpteDummy : Public
    Byte smptePad0 : Public
    Byte smptePad1 : Public
    UInt32 midiSongPtrPos : Public
    Int32 TIME_MS = 1 : Public, Static, Literal, HasDefault
    Int32 TIME_SAMPLES = 2 : Public, Static, Literal, HasDefault
    Int32 TIME_BYTES = 4 : Public, Static, Literal, HasDefault
Class NAudio.Wave.WaveHeader: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    IntPtr dataBuffer : Public
    Int32 bufferLength : Public
    Int32 bytesRecorded : Public
    IntPtr userData : Public
    NAudio.Wave.WaveHeaderFlags flags : Public
    Int32 loops : Public
    IntPtr next : Public
    IntPtr reserved : Public
Struct NAudio.Wave.WaveHeaderFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.WaveHeaderFlags BeginLoop = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveHeaderFlags Done = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveHeaderFlags EndLoop = 8 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveHeaderFlags InQueue = 16 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveHeaderFlags Prepared = 2 : Public, Static, Literal, HasDefault
Class NAudio.Wave.WasapiLoopbackCapture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.CoreAudioApi.WasapiCapture
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.CoreAudioApi.MMDevice): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get set' : 
  Methods:
    GetDefaultLoopbackCaptureDevice(): PrivateScope, Public, Static, HideBySig
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_WaveFormat(WaveFormat): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NAudio.Wave.WaveIn: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.Wave.WaveCallbackInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveIn
    System.IDisposable
  Properties:
    Int32 DeviceCount 'get ' : 
    Int32 BufferMilliseconds 'get set' : 
    Int32 NumberOfBuffers 'get set' : 
    Int32 DeviceNumber 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get set' : 
  Events:
    System.EventHandler`1[NAudio.Wave.WaveInEventArgs] DataAvailable: 
    System.EventHandler`1[NAudio.Wave.StoppedEventArgs] RecordingStopped: 
  Methods:
    add_DataAvailable(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_DataAvailable(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_RecordingStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_RecordingStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DeviceCount(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetCapabilities(Int32): PrivateScope, Public, Static, HideBySig
    get_BufferMilliseconds(): PrivateScope, Public, HideBySig, SpecialName
    set_BufferMilliseconds(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfBuffers(): PrivateScope, Public, HideBySig, SpecialName
    set_NumberOfBuffers(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_DeviceNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    StartRecording(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    StopRecording(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_WaveFormat(WaveFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetMixerLine(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NAudio.Wave.WaveInCapabilities: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, AutoClass, BeforeFieldInit
  :System.ValueType
  Properties:
    Int32 Channels 'get ' : 
    System.String ProductName 'get ' : 
    System.Guid NameGuid 'get ' : 
    System.Guid ProductGuid 'get ' : 
    System.Guid ManufacturerGuid 'get ' : 
  Methods:
    get_Channels(): PrivateScope, Public, HideBySig, SpecialName
    get_ProductName(): PrivateScope, Public, HideBySig, SpecialName
    get_NameGuid(): PrivateScope, Public, HideBySig, SpecialName
    get_ProductGuid(): PrivateScope, Public, HideBySig, SpecialName
    get_ManufacturerGuid(): PrivateScope, Public, HideBySig, SpecialName
    SupportsWaveFormat(SupportedWaveFormat): PrivateScope, Public, HideBySig
Class NAudio.Wave.WaveCapabilitiesHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Guid MicrosoftDefaultManufacturerId : Public, Static, InitOnly
    System.Guid DefaultWaveOutGuid : Public, Static, InitOnly
    System.Guid DefaultWaveInGuid : Public, Static, InitOnly
  Methods:
    GetNameFromGuid(Guid): PrivateScope, Public, Static, HideBySig
Class NAudio.Wave.WaveInEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Byte[], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Buffer 'get ' : 
    Int32 BytesRecorded 'get ' : 
  Methods:
    get_Buffer(): PrivateScope, Public, HideBySig, SpecialName
    get_BytesRecorded(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.WaveInterop: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    waveInReset(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveInStart(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveInStop(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    mmioStringToFOURCC(String(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutGetNumDevs(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutPrepareHeader(IntPtr, WaveHeader, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutUnprepareHeader(IntPtr, WaveHeader, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutWrite(IntPtr, WaveHeader, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutOpen(IntPtr&(Out), IntPtr, WaveFormat, WaveCallback, IntPtr, WaveInOutOpenFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutOpenWindow(IntPtr&(Out), IntPtr, WaveFormat, IntPtr, IntPtr, WaveInOutOpenFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutReset(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutClose(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutPause(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutRestart(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutGetPosition(IntPtr, MmTime&(Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutSetVolume(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutGetVolume(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveOutGetDevCaps(IntPtr, WaveOutCapabilities&(Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveInGetNumDevs(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveInGetDevCaps(IntPtr, WaveInCapabilities&(Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveInAddBuffer(IntPtr, WaveHeader, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveInClose(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveInOpen(IntPtr&(Out), IntPtr, WaveFormat, WaveCallback, IntPtr, WaveInOutOpenFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveInOpenWindow(IntPtr&(Out), IntPtr, WaveFormat, IntPtr, IntPtr, WaveInOutOpenFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveInPrepareHeader(IntPtr, WaveHeader, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    waveInUnprepareHeader(IntPtr, WaveHeader, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Struct NAudio.Wave.WaveOutCapabilities: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, AutoClass, BeforeFieldInit
  :System.ValueType
  Properties:
    Int32 Channels 'get ' : 
    Boolean SupportsPlaybackRateControl 'get ' : 
    System.String ProductName 'get ' : 
    System.Guid NameGuid 'get ' : 
    System.Guid ProductGuid 'get ' : 
    System.Guid ManufacturerGuid 'get ' : 
  Methods:
    get_Channels(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportsPlaybackRateControl(): PrivateScope, Public, HideBySig, SpecialName
    get_ProductName(): PrivateScope, Public, HideBySig, SpecialName
    SupportsWaveFormat(SupportedWaveFormat): PrivateScope, Public, HideBySig
    get_NameGuid(): PrivateScope, Public, HideBySig, SpecialName
    get_ProductGuid(): PrivateScope, Public, HideBySig, SpecialName
    get_ManufacturerGuid(): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.Wave.SupportedWaveFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_1M08 = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_1S08 = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_1M16 = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_1S16 = 8 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_2M08 = 16 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_2S08 = 32 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_2M16 = 64 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_2S16 = 128 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_4M08 = 256 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_4S08 = 512 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_4M16 = 1024 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_4S16 = 2048 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_44M08 = 256 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_44S08 = 512 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_44M16 = 1024 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_44S16 = 2048 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_48M08 = 4096 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_48S08 = 8192 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_48M16 = 16384 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_48S16 = 32768 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_96M08 = 65536 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_96S08 = 131072 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_96M16 = 262144 : Public, Static, Literal, HasDefault
    NAudio.Wave.SupportedWaveFormat WAVE_FORMAT_96S16 = 524288 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.WaveOutSupport: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.WaveOutSupport Pitch = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveOutSupport PlaybackRate = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveOutSupport Volume = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveOutSupport LRVolume = 8 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveOutSupport Sync = 16 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveOutSupport SampleAccurate = 32 : Public, Static, Literal, HasDefault
Class NAudio.Wave.WaveWindowNative: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Windows.Forms.NativeWindow
    Void .ctor(WaveCallback): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NAudio.Wave.WaveWindow: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(WaveCallback): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NAudio.Wave.Gsm610WaveFormat: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
  :NAudio.Wave.WaveFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int16 SamplesPerBlock 'get ' : 
  Methods:
    get_SamplesPerBlock(): PrivateScope, Public, HideBySig, SpecialName
    Serialize(BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.ImaAdpcmWaveFormat: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
  :NAudio.Wave.WaveFormat
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NAudio.Wave.Mp3WaveFormat: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
  :NAudio.Wave.WaveFormat
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    NAudio.Wave.Mp3WaveFormatId id : Public
    NAudio.Wave.Mp3WaveFormatFlags flags : Public
    UInt16 blockSize : Public
    UInt16 framesPerBlock : Public
    UInt16 codecDelay : Public
Struct NAudio.Wave.Mp3WaveFormatFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Mp3WaveFormatFlags PaddingIso = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.Mp3WaveFormatFlags PaddingOn = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.Mp3WaveFormatFlags PaddingOff = 2 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.Mp3WaveFormatId: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Mp3WaveFormatId Unknown = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.Mp3WaveFormatId Mpeg = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.Mp3WaveFormatId ConstantFrameSize = 2 : Public, Static, Literal, HasDefault
Class NAudio.Wave.OggWaveFormat: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
  :NAudio.Wave.WaveFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 dwVorbisACMVersion : Public
    UInt32 dwLibVorbisVersion : Public
Class NAudio.Wave.TrueSpeechWaveFormat: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
  :NAudio.Wave.WaveFormat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Serialize(BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.WaveFormat: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Wave.WaveFormatEncoding Encoding 'get ' : 
    Int32 Channels 'get ' : 
    Int32 SampleRate 'get ' : 
    Int32 AverageBytesPerSecond 'get ' : 
    Int32 BlockAlign 'get ' : 
    Int32 BitsPerSample 'get ' : 
    Int32 ExtraSize 'get ' : 
  Methods:
    ConvertLatencyToByteSize(Int32): PrivateScope, Public, HideBySig
    CreateCustomFormat(WaveFormatEncoding, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateALawFormat(Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateMuLawFormat(Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateIeeeFloatWaveFormat(Int32, Int32): PrivateScope, Public, Static, HideBySig
    MarshalFromPtr(IntPtr): PrivateScope, Public, Static, HideBySig
    MarshalToPtr(WaveFormat): PrivateScope, Public, Static, HideBySig
    FromFormatChunk(BinaryReader, Int32): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    get_Encoding(): PrivateScope, Public, HideBySig, SpecialName
    Serialize(BinaryWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Channels(): PrivateScope, Public, HideBySig, SpecialName
    get_SampleRate(): PrivateScope, Public, HideBySig, SpecialName
    get_AverageBytesPerSecond(): PrivateScope, Public, HideBySig, SpecialName
    get_BlockAlign(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BitsPerSample(): PrivateScope, Public, HideBySig, SpecialName
    get_ExtraSize(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.AdpcmWaveFormat: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
  :NAudio.Wave.WaveFormat
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 SamplesPerBlock 'get ' : 
    Int32 NumCoefficients 'get ' : 
    Int16[] Coefficients 'get ' : 
  Methods:
    get_SamplesPerBlock(): PrivateScope, Public, HideBySig, SpecialName
    get_NumCoefficients(): PrivateScope, Public, HideBySig, SpecialName
    get_Coefficients(): PrivateScope, Public, HideBySig, SpecialName
    Serialize(BinaryWriter): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.WaveFormatCustomMarshaler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.InteropServices.ICustomMarshaler
  Methods:
    GetInstance(String): PrivateScope, Public, Static, HideBySig
    CleanUpManagedData(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CleanUpNativeData(IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNativeDataSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MarshalManagedToNative(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MarshalNativeToManaged(IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NAudio.Wave.WaveFormatEncoding: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.WaveFormatEncoding Unknown = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Pcm = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Adpcm = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding IeeeFloat = 3 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Vselp = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding IbmCvsd = 5 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding ALaw = 6 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding MuLaw = 7 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Dts = 8 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Drm = 9 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WmaVoice9 = 10 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding OkiAdpcm = 16 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding DviAdpcm = 17 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding ImaAdpcm = 17 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding MediaspaceAdpcm = 18 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding SierraAdpcm = 19 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding G723Adpcm = 20 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding DigiStd = 21 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding DigiFix = 22 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding DialogicOkiAdpcm = 23 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding MediaVisionAdpcm = 24 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding CUCodec = 25 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding YamahaAdpcm = 32 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding SonarC = 33 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding DspGroupTrueSpeech = 34 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding EchoSpeechCorporation1 = 35 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding AudioFileAf36 = 36 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Aptx = 37 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding AudioFileAf10 = 38 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Prosody1612 = 39 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Lrc = 40 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding DolbyAc2 = 48 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Gsm610 = 49 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding MsnAudio = 50 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding AntexAdpcme = 51 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding ControlResVqlpc = 52 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding DigiReal = 53 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding DigiAdpcm = 54 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding ControlResCr10 = 55 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_NMS_VBXADPCM = 56 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_CS_IMAADPCM = 57 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_ECHOSC3 = 58 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_ROCKWELL_ADPCM = 59 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_ROCKWELL_DIGITALK = 60 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_XEBEC = 61 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_G721_ADPCM = 64 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_G728_CELP = 65 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_MSG723 = 66 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Mpeg = 80 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_RT24 = 82 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_PAC = 83 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding MpegLayer3 = 85 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_LUCENT_G723 = 89 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_CIRRUS = 96 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_ESPCM = 97 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VOXWARE = 98 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_CANOPUS_ATRAC = 99 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_G726_ADPCM = 100 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_G722_ADPCM = 101 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_DSAT_DISPLAY = 103 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VOXWARE_BYTE_ALIGNED = 105 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VOXWARE_AC8 = 112 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VOXWARE_AC10 = 113 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VOXWARE_AC16 = 114 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VOXWARE_AC20 = 115 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VOXWARE_RT24 = 116 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VOXWARE_RT29 = 117 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VOXWARE_RT29HW = 118 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VOXWARE_VR12 = 119 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VOXWARE_VR18 = 120 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VOXWARE_TQ40 = 121 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_SOFTSOUND = 128 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VOXWARE_TQ60 = 129 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_MSRT24 = 130 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_G729A = 131 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_MVI_MVI2 = 132 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_DF_G726 = 133 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_DF_GSM610 = 134 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_ISIAUDIO = 136 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_ONLIVE = 137 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_SBC24 = 145 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_DOLBY_AC3_SPDIF = 146 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_MEDIASONIC_G723 = 147 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_PROSODY_8KBPS = 148 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_ZYXEL_ADPCM = 151 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_PHILIPS_LPCBB = 152 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_PACKED = 153 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_MALDEN_PHONYTALK = 160 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Gsm = 161 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding G729 = 162 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding G723 = 163 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Acelp = 164 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding RawAac = 255 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_RHETOREX_ADPCM = 256 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_IRAT = 257 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VIVO_G723 = 273 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VIVO_SIREN = 274 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_DIGITAL_G723 = 291 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_SANYO_LD_ADPCM = 293 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_SIPROLAB_ACEPLNET = 304 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_SIPROLAB_ACELP4800 = 305 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_SIPROLAB_ACELP8V3 = 306 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_SIPROLAB_G729 = 307 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_SIPROLAB_G729A = 308 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_SIPROLAB_KELVIN = 309 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_G726ADPCM = 320 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_QUALCOMM_PUREVOICE = 336 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_QUALCOMM_HALFRATE = 337 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_TUBGSM = 341 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_MSAUDIO1 = 352 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WindowsMediaAudio = 353 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WindowsMediaAudioProfessional = 354 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WindowsMediaAudioLosseless = 355 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WindowsMediaAudioSpdif = 356 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_UNISYS_NAP_ADPCM = 368 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_UNISYS_NAP_ULAW = 369 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_UNISYS_NAP_ALAW = 370 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_UNISYS_NAP_16K = 371 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_CREATIVE_ADPCM = 512 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_CREATIVE_FASTSPEECH8 = 514 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_CREATIVE_FASTSPEECH10 = 515 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_UHER_ADPCM = 528 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_QUARTERDECK = 544 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_ILINK_VC = 560 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_RAW_SPORT = 576 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_ESST_AC3 = 577 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_IPI_HSX = 592 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_IPI_RPELP = 593 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_CS2 = 608 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_SONY_SCX = 624 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_FM_TOWNS_SND = 768 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_BTV_DIGITAL = 1024 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_QDESIGN_MUSIC = 1104 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_VME_VMPCM = 1664 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_TPC = 1665 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_OLIGSM = 4096 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_OLIADPCM = 4097 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_OLICELP = 4098 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_OLISBC = 4099 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_OLIOPR = 4100 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_LH_CODEC = 4352 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_NORRIS = 5120 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS = 5376 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding MPEG_ADTS_AAC = 5632 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding MPEG_RAW_AAC = 5633 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding MPEG_LOAS = 5634 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding NOKIA_MPEG_ADTS_AAC = 5640 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding NOKIA_MPEG_RAW_AAC = 5641 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding VODAFONE_MPEG_ADTS_AAC = 5642 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding VODAFONE_MPEG_RAW_AAC = 5643 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding MPEG_HEAAC = 5648 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_DVM = 8192 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Vorbis1 = 26447 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Vorbis2 = 26448 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Vorbis3 = 26449 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Vorbis1P = 26479 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Vorbis2P = 26480 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Vorbis3P = 26481 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding Extensible = 65534 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveFormatEncoding WAVE_FORMAT_DEVELOPMENT = 65535 : Public, Static, Literal, HasDefault
Class NAudio.Wave.WaveFormatExtensible: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
  :NAudio.Wave.WaveFormat
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Guid SubFormat 'get ' : 
  Methods:
    ToStandardWaveFormat(): PrivateScope, Public, HideBySig
    get_SubFormat(): PrivateScope, Public, HideBySig, SpecialName
    Serialize(BinaryWriter): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.WaveFormatExtraData: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
  :NAudio.Wave.WaveFormat
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] ExtraData 'get ' : 
  Methods:
    get_ExtraData(): PrivateScope, Public, HideBySig, SpecialName
    ReadExtraData(BinaryReader): PrivateScope, Assembly, HideBySig
    Serialize(BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Interface NAudio.Wave.IWaveIn: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get set' : 
  Events:
    System.EventHandler`1[NAudio.Wave.WaveInEventArgs] DataAvailable: 
    System.EventHandler`1[NAudio.Wave.StoppedEventArgs] RecordingStopped: 
  Methods:
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_WaveFormat(WaveFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    StartRecording(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StopRecording(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    add_DataAvailable(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_DataAvailable(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_RecordingStopped(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_RecordingStopped(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class NAudio.Wave.AiffFileWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream, NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Filename 'get ' : 
    Int64 Length 'get ' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    CreateAiffFile(String, WaveStream): PrivateScope, Public, Static, HideBySig
    get_Filename(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteSample(Single): PrivateScope, Public, HideBySig
    WriteSamples(Single[], Int32, Int32): PrivateScope, Public, HideBySig
    WriteSamples(Int16[], Int32, Int32): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.AsioAudioAvailableEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(IntPtr[], IntPtr[], Int32, NAudio.Wave.Asio.AsioSampleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr[] InputBuffers 'get set' : 
    IntPtr[] OutputBuffers 'get set' : 
    Boolean WrittenToOutputBuffers 'get set' : 
    Int32 SamplesPerBuffer 'get set' : 
    NAudio.Wave.Asio.AsioSampleType AsioSampleType 'get set' : 
  Methods:
    get_InputBuffers(): PrivateScope, Public, HideBySig, SpecialName
    get_OutputBuffers(): PrivateScope, Public, HideBySig, SpecialName
    get_WrittenToOutputBuffers(): PrivateScope, Public, HideBySig, SpecialName
    set_WrittenToOutputBuffers(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SamplesPerBuffer(): PrivateScope, Public, HideBySig, SpecialName
    GetAsInterleavedSamples(Single[]): PrivateScope, Public, HideBySig
    get_AsioSampleType(): PrivateScope, Public, HideBySig, SpecialName
    GetAsInterleavedSamples(): PrivateScope, Public, HideBySig (Obsolete)
Class NAudio.Wave.AsioOut: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWavePlayer
    System.IDisposable
  Properties:
    Int32 PlaybackLatency 'get ' : 
    NAudio.Wave.PlaybackState PlaybackState 'get ' : 
    System.String DriverName 'get ' : 
    Int32 NumberOfOutputChannels 'get set' : 
    Int32 NumberOfInputChannels 'get set' : 
    Int32 DriverInputChannelCount 'get ' : 
    Int32 DriverOutputChannelCount 'get ' : 
    Int32 FramesPerBuffer 'get ' : 
    Int32 ChannelOffset 'get set' : 
    Int32 InputChannelOffset 'get set' : 
    Single Volume 'get set' :  (Obsolete)
  Events:
    System.EventHandler`1[NAudio.Wave.StoppedEventArgs] PlaybackStopped: 
    System.EventHandler`1[NAudio.Wave.AsioAudioAvailableEventArgs] AudioAvailable: 
  Methods:
    add_PlaybackStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_PlaybackStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_AudioAvailable(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_AudioAvailable(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDriverNames(): PrivateScope, Public, Static, HideBySig
    isSupported(): PrivateScope, Public, Static, HideBySig
    ShowControlPanel(): PrivateScope, Public, HideBySig
    Play(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Stop(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Pause(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Init(IWaveProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InitRecordAndPlayback(IWaveProvider, Int32, Int32): PrivateScope, Public, HideBySig
    get_PlaybackLatency(): PrivateScope, Public, HideBySig, SpecialName
    get_PlaybackState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DriverName(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfOutputChannels(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfInputChannels(): PrivateScope, Public, HideBySig, SpecialName
    get_DriverInputChannelCount(): PrivateScope, Public, HideBySig, SpecialName
    get_DriverOutputChannelCount(): PrivateScope, Public, HideBySig, SpecialName
    get_FramesPerBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_ChannelOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_ChannelOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_InputChannelOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_InputChannelOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Volume(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Volume(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AsioInputChannelName(Int32): PrivateScope, Public, HideBySig
    AsioOutputChannelName(Int32): PrivateScope, Public, HideBySig
Class NAudio.Wave.BextChunkInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get set' : 
    System.String Originator 'get set' : 
    System.String OriginatorReference 'get set' : 
    System.DateTime OriginationDateTime 'get set' : 
    System.String OriginationDate 'get ' : 
    System.String OriginationTime 'get ' : 
    Int64 TimeReference 'get set' : 
    UInt16 Version 'get ' : 
    System.String UniqueMaterialIdentifier 'get set' : 
    Byte[] Reserved 'get ' : 
    System.String CodingHistory 'get set' : 
  Methods:
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_Originator(): PrivateScope, Public, HideBySig, SpecialName
    set_Originator(String): PrivateScope, Public, HideBySig, SpecialName
    get_OriginatorReference(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginatorReference(String): PrivateScope, Public, HideBySig, SpecialName
    get_OriginationDateTime(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginationDateTime(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_OriginationDate(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginationTime(): PrivateScope, Public, HideBySig, SpecialName
    get_TimeReference(): PrivateScope, Public, HideBySig, SpecialName
    set_TimeReference(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_UniqueMaterialIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    set_UniqueMaterialIdentifier(String): PrivateScope, Public, HideBySig, SpecialName
    get_Reserved(): PrivateScope, Public, HideBySig, SpecialName
    get_CodingHistory(): PrivateScope, Public, HideBySig, SpecialName
    set_CodingHistory(String): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.BwfWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, NAudio.Wave.WaveFormat, NAudio.Wave.BextChunkInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Write(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.CueWaveFileWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveFileWriter
    Void .ctor(System.String, NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddCue(Int32, String): PrivateScope, Public, HideBySig
Class NAudio.Wave.MediaFoundationEncoder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.MediaFoundation.MediaType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    GetEncodeBitrates(Guid, Int32, Int32): PrivateScope, Public, Static, HideBySig
    GetOutputMediaTypes(Guid): PrivateScope, Public, Static, HideBySig
    EncodeToWma(IWaveProvider, String, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EncodeToMp3(IWaveProvider, String, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EncodeToAac(IWaveProvider, String, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SelectMediaType(Guid, WaveFormat, Int32): PrivateScope, Public, Static, HideBySig
    Encode(String, IWaveProvider): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.StoppedEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Exception Exception 'get ' : 
  Methods:
    get_Exception(): PrivateScope, Public, HideBySig, SpecialName
Interface NAudio.Wave.IWaveBuffer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Byte[] ByteBuffer 'get ' : 
    Single[] FloatBuffer 'get ' : 
    Int16[] ShortBuffer 'get ' : 
    Int32[] IntBuffer 'get ' : 
    Int32 MaxSize 'get ' : 
    Int32 ByteBufferCount 'get ' : 
    Int32 FloatBufferCount 'get ' : 
    Int32 ShortBufferCount 'get ' : 
    Int32 IntBufferCount 'get ' : 
  Methods:
    get_ByteBuffer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FloatBuffer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ShortBuffer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IntBuffer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MaxSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ByteBufferCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FloatBufferCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ShortBufferCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IntBufferCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NAudio.Wave.IWavePlayer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    NAudio.Wave.PlaybackState PlaybackState 'get ' : 
    Single Volume 'get set' : 
  Events:
    System.EventHandler`1[NAudio.Wave.StoppedEventArgs] PlaybackStopped: 
  Methods:
    Play(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Stop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Pause(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Init(IWaveProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_PlaybackState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Volume(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Volume(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_PlaybackStopped(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_PlaybackStopped(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NAudio.Wave.IWavePosition: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    NAudio.Wave.WaveFormat OutputWaveFormat 'get ' : 
  Methods:
    GetPosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_OutputWaveFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface NAudio.Wave.IWaveProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NAudio.Wave.DirectSoundOut: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Guid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Guid, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWavePlayer
    System.IDisposable
  Fields:
    System.Guid DSDEVID_DefaultPlayback : Public, Static, InitOnly
    System.Guid DSDEVID_DefaultCapture : Public, Static, InitOnly
    System.Guid DSDEVID_DefaultVoicePlayback : Public, Static, InitOnly
    System.Guid DSDEVID_DefaultVoiceCapture : Public, Static, InitOnly
  Properties:
    System.Collections.Generic.IEnumerable`1[NAudio.Wave.DirectSoundDeviceInfo] Devices 'get ' : 
    System.TimeSpan PlaybackPosition 'get ' : 
    NAudio.Wave.PlaybackState PlaybackState 'get ' : 
    Single Volume 'get set' : 
  Events:
    System.EventHandler`1[NAudio.Wave.StoppedEventArgs] PlaybackStopped: 
  Methods:
    add_PlaybackStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_PlaybackStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Devices(): PrivateScope, Public, Static, HideBySig, SpecialName
    Play(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Stop(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Pause(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetPosition(): PrivateScope, Public, HideBySig
    get_PlaybackPosition(): PrivateScope, Public, HideBySig, SpecialName
    Init(IWaveProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_PlaybackState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Volume(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Volume(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.DirectSoundDeviceInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Guid Guid 'get set' : 
    System.String Description 'get set' : 
    System.String ModuleName 'get set' : 
  Methods:
    get_Guid(): PrivateScope, Public, HideBySig, SpecialName
    set_Guid(Guid): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_ModuleName(): PrivateScope, Public, HideBySig, SpecialName
    set_ModuleName(String): PrivateScope, Public, HideBySig, SpecialName
Interface NAudio.Wave.ISampleProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Read(Single[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct NAudio.Wave.PlaybackState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.PlaybackState Stopped = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.PlaybackState Playing = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.PlaybackState Paused = 2 : Public, Static, Literal, HasDefault
Class NAudio.Wave.WasapiOut: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.CoreAudioApi.AudioClientShareMode, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.CoreAudioApi.AudioClientShareMode, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.CoreAudioApi.MMDevice, NAudio.CoreAudioApi.AudioClientShareMode, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWavePlayer
    System.IDisposable
    NAudio.Wave.IWavePosition
  Properties:
    NAudio.Wave.WaveFormat OutputWaveFormat 'get ' : 
    NAudio.Wave.PlaybackState PlaybackState 'get ' : 
    Single Volume 'get set' : 
    NAudio.CoreAudioApi.AudioStreamVolume AudioStreamVolume 'get ' : 
  Events:
    System.EventHandler`1[NAudio.Wave.StoppedEventArgs] PlaybackStopped: 
  Methods:
    add_PlaybackStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_PlaybackStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetPosition(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_OutputWaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Play(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Stop(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Pause(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Init(IWaveProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_PlaybackState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Volume(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Volume(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AudioStreamVolume(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.WaveBuffer: AutoLayout, AnsiClass, Class, Public, ExplicitLayout, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveBuffer
  Fields:
    Int32 numberOfBytes : Public
  Properties:
    Byte[] ByteBuffer 'get ' : 
    Single[] FloatBuffer 'get ' : 
    Int16[] ShortBuffer 'get ' : 
    Int32[] IntBuffer 'get ' : 
    Int32 MaxSize 'get ' : 
    Int32 ByteBufferCount 'get set' : 
    Int32 FloatBufferCount 'get set' : 
    Int32 ShortBufferCount 'get set' : 
    Int32 IntBufferCount 'get set' : 
  Methods:
    BindTo(Byte[]): PrivateScope, Public, HideBySig
    op_Implicit(WaveBuffer): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(WaveBuffer): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(WaveBuffer): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(WaveBuffer): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ByteBuffer(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FloatBuffer(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ShortBuffer(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IntBuffer(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MaxSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ByteBufferCount(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ByteBufferCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FloatBufferCount(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FloatBufferCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ShortBufferCount(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ShortBufferCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IntBufferCount(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IntBufferCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    Copy(Array): PrivateScope, Public, HideBySig
Class NAudio.Wave.WaveCallbackInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    NAudio.Wave.WaveCallbackStrategy Strategy 'get set' : 
    IntPtr Handle 'get set' : 
  Methods:
    get_Strategy(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    FunctionCallback(): PrivateScope, Public, Static, HideBySig
    NewWindow(): PrivateScope, Public, Static, HideBySig
    ExistingWindow(IntPtr): PrivateScope, Public, Static, HideBySig
    Connect(WaveCallback): PrivateScope, Assembly, HideBySig
    WaveOutOpen(IntPtr&(Out), Int32, WaveFormat, WaveCallback): PrivateScope, Assembly, HideBySig
    WaveInOpen(IntPtr&(Out), Int32, WaveFormat, WaveCallback): PrivateScope, Assembly, HideBySig
    Disconnect(): PrivateScope, Assembly, HideBySig
Struct NAudio.Wave.WaveCallbackStrategy: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.WaveCallbackStrategy FunctionCallback = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveCallbackStrategy NewWindow = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveCallbackStrategy ExistingWindow = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.WaveCallbackStrategy Event = 3 : Public, Static, Literal, HasDefault
Class NAudio.Wave.WaveFileWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream, NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Filename 'get ' : 
    Int64 Length 'get ' : 
    System.TimeSpan TotalTime 'get ' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    CreateWaveFile16(String, ISampleProvider): PrivateScope, Public, Static, HideBySig
    CreateWaveFile(String, IWaveProvider): PrivateScope, Public, Static, HideBySig
    WriteWavFileToStream(Stream, IWaveProvider): PrivateScope, Public, Static, HideBySig
    get_Filename(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TotalTime(): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    WriteData(Byte[], Int32, Int32): PrivateScope, Public, HideBySig (Obsolete)
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    WriteSample(Single): PrivateScope, Public, HideBySig
    WriteSamples(Single[], Int32, Int32): PrivateScope, Public, HideBySig
    WriteData(Int16[], Int32, Int32): PrivateScope, Public, HideBySig (Obsolete)
    WriteSamples(Int16[], Int32, Int32): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.WaveOut: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.Wave.WaveCallbackInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWavePlayer
    System.IDisposable
    NAudio.Wave.IWavePosition
  Properties:
    Int32 DeviceCount 'get ' : 
    Int32 DesiredLatency 'get set' : 
    Int32 NumberOfBuffers 'get set' : 
    Int32 DeviceNumber 'get set' : 
    NAudio.Wave.WaveFormat OutputWaveFormat 'get ' : 
    NAudio.Wave.PlaybackState PlaybackState 'get ' : 
    Single Volume 'get set' : 
  Events:
    System.EventHandler`1[NAudio.Wave.StoppedEventArgs] PlaybackStopped: 
  Methods:
    add_PlaybackStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_PlaybackStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetCapabilities(Int32): PrivateScope, Public, Static, HideBySig
    get_DeviceCount(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DesiredLatency(): PrivateScope, Public, HideBySig, SpecialName
    set_DesiredLatency(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfBuffers(): PrivateScope, Public, HideBySig, SpecialName
    set_NumberOfBuffers(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_DeviceNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    Init(IWaveProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Play(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Pause(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Resume(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetPosition(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_OutputWaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PlaybackState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Volume(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Volume(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetWaveOutVolume(Single, IntPtr, Object): PrivateScope, Assembly, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.WaveOutEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWavePlayer
    System.IDisposable
    NAudio.Wave.IWavePosition
  Properties:
    Int32 DesiredLatency 'get set' : 
    Int32 NumberOfBuffers 'get set' : 
    Int32 DeviceNumber 'get set' : 
    NAudio.Wave.WaveFormat OutputWaveFormat 'get ' : 
    NAudio.Wave.PlaybackState PlaybackState 'get ' : 
    Single Volume 'get set' : 
  Events:
    System.EventHandler`1[NAudio.Wave.StoppedEventArgs] PlaybackStopped: 
  Methods:
    add_PlaybackStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_PlaybackStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DesiredLatency(): PrivateScope, Public, HideBySig, SpecialName
    set_DesiredLatency(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfBuffers(): PrivateScope, Public, HideBySig, SpecialName
    set_NumberOfBuffers(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_DeviceNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    Init(IWaveProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Play(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Pause(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Stop(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetPosition(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_OutputWaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PlaybackState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Volume(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Volume(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.BufferedWaveProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    Boolean ReadFully 'get set' : 
    Int32 BufferLength 'get set' : 
    System.TimeSpan BufferDuration 'get set' : 
    Boolean DiscardOnBufferOverflow 'get set' : 
    Int32 BufferedBytes 'get ' : 
    System.TimeSpan BufferedDuration 'get ' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    get_ReadFully(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadFully(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BufferLength(): PrivateScope, Public, HideBySig, SpecialName
    set_BufferLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BufferDuration(): PrivateScope, Public, HideBySig, SpecialName
    set_BufferDuration(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_DiscardOnBufferOverflow(): PrivateScope, Public, HideBySig, SpecialName
    set_DiscardOnBufferOverflow(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BufferedBytes(): PrivateScope, Public, HideBySig, SpecialName
    get_BufferedDuration(): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddSamples(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ClearBuffer(): PrivateScope, Public, HideBySig
Class NAudio.Wave.MediaFoundationResampler: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.MediaFoundation.MediaFoundationTransform
    Void .ctor(NAudio.Wave.IWaveProvider, NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.Wave.IWaveProvider, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ResamplerQuality 'get set' : 
  Methods:
    get_ResamplerQuality(): PrivateScope, Public, HideBySig, SpecialName
    set_ResamplerQuality(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.MixingWaveProvider32: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[NAudio.Wave.IWaveProvider]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    Int32 InputCount 'get ' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    AddInputStream(IWaveProvider): PrivateScope, Public, HideBySig
    RemoveInputStream(IWaveProvider): PrivateScope, Public, HideBySig
    get_InputCount(): PrivateScope, Public, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NAudio.Wave.MultiplexingWaveProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Generic.IEnumerable`1[NAudio.Wave.IWaveProvider]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[NAudio.Wave.IWaveProvider], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Int32 InputChannelCount 'get ' : 
    Int32 OutputChannelCount 'get ' : 
  Methods:
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ConnectInputToOutput(Int32, Int32): PrivateScope, Public, HideBySig
    get_InputChannelCount(): PrivateScope, Public, HideBySig, SpecialName
    get_OutputChannelCount(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.SilenceProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get set' : 
  Methods:
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NAudio.Wave.StereoToMonoProvider16: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    Single LeftVolume 'get set' : 
    Single RightVolume 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get set' : 
  Methods:
    get_LeftVolume(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftVolume(Single): PrivateScope, Public, HideBySig, SpecialName
    get_RightVolume(): PrivateScope, Public, HideBySig, SpecialName
    set_RightVolume(Single): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.MonoToStereoProvider16: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    Single LeftVolume 'get set' : 
    Single RightVolume 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    get_LeftVolume(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftVolume(Single): PrivateScope, Public, HideBySig, SpecialName
    get_RightVolume(): PrivateScope, Public, HideBySig, SpecialName
    set_RightVolume(Single): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.VolumeWaveProvider16: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    Single Volume 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.WaveFloatTo16Provider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Single Volume 'get set' : 
  Methods:
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.Wave16ToFloatProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Single Volume 'get set' : 
  Methods:
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.WaveInProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.IWaveIn): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NAudio.Wave.WaveProvider16: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    SetWaveFormat(Int32, Int32): PrivateScope, Public, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Read(Int16[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NAudio.Wave.WaveProvider32: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
    NAudio.Wave.ISampleProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    SetWaveFormat(Int32, Int32): PrivateScope, Public, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Read(Single[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NAudio.Wave.WaveRecorder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.IWaveProvider, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
    System.IDisposable
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.AiffFileReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Int64 Length 'get ' : 
    Int64 SampleCount 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    ReadAiffHeader(Stream, WaveFormat&(Out), Int64&(Out), Int32&(Out), List`1): PrivateScope, Public, Static, HideBySig
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SampleCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.AudioFileReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    System.String FileName 'get ' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    Single Volume 'get set' : 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.BlockAlignReductionStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(NAudio.Wave.WaveStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 BlockAlign 'get ' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_BlockAlign(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.ComStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.InteropServices.ComTypes.IStream
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.Cue: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Position 'get ' : 
    System.String Label 'get ' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.CueList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32[] CuePositions 'get ' : 
    System.String[] CueLabels 'get ' : 
    Int32 Count 'get ' : 
    NAudio.Wave.Cue Item [Int32] 'get ' : 
  Methods:
    Add(Cue): PrivateScope, Public, HideBySig
    get_CuePositions(): PrivateScope, Public, HideBySig, SpecialName
    get_CueLabels(): PrivateScope, Public, HideBySig, SpecialName
    GetRiffChunks(): PrivateScope, Assembly, HideBySig
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    FromChunks(WaveFileReader): PrivateScope, Assembly, Static, HideBySig
Class NAudio.Wave.CueWaveFileReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveFileReader
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Wave.CueList Cues 'get ' : 
  Methods:
    get_Cues(): PrivateScope, Public, HideBySig, SpecialName
Interface NAudio.Wave.ISampleNotifier: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Events:
    System.EventHandler`1[NAudio.Wave.SampleEventArgs] Sample: 
  Methods:
    add_Sample(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_Sample(EventHandler`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class NAudio.Wave.SampleEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Left 'get set' : 
    Single Right 'get set' : 
  Methods:
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(Single): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.MediaFoundationReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, MediaFoundationReaderSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Events:
    System.EventHandler WaveFormatChanged: 
  Methods:
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add_WaveFormatChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_WaveFormatChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.Mp3Index: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 FilePosition 'get set' : 
    Int64 SamplePosition 'get set' : 
    Int32 SampleCount 'get set' : 
    Int32 ByteCount 'get set' : 
  Methods:
    get_FilePosition(): PrivateScope, Public, HideBySig, SpecialName
    set_FilePosition(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_SamplePosition(): PrivateScope, Public, HideBySig, SpecialName
    set_SamplePosition(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_SampleCount(): PrivateScope, Public, HideBySig, SpecialName
    set_SampleCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ByteCount(): PrivateScope, Public, HideBySig, SpecialName
    set_ByteCount(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.Mp3FileReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, FrameDecompressorBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, FrameDecompressorBuilder): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Wave.Mp3WaveFormat Mp3WaveFormat 'get set' : 
    NAudio.Wave.Id3v2Tag Id3v2Tag 'get ' : 
    Byte[] Id3v1Tag 'get ' : 
    Int64 Length 'get ' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Int64 Position 'get set' : 
    NAudio.Wave.XingHeader XingHeader 'get ' : 
  Methods:
    get_Mp3WaveFormat(): PrivateScope, Public, HideBySig, SpecialName
    CreateAcmFrameDecompressor(WaveFormat): PrivateScope, Public, Static, HideBySig
    get_Id3v2Tag(): PrivateScope, Public, HideBySig, SpecialName
    get_Id3v1Tag(): PrivateScope, Public, HideBySig, SpecialName
    ReadNextFrame(): PrivateScope, Public, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_XingHeader(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.RawSourceWaveStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(System.IO.Stream, NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int32, Int32, NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.ResamplerDmoStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(NAudio.Wave.IWaveProvider, NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.RiffChunk: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Identifier 'get ' : 
    System.String IdentifierAsString 'get ' : 
    Int32 Length 'get set' : 
    Int64 StreamPosition 'get set' : 
  Methods:
    get_Identifier(): PrivateScope, Public, HideBySig, SpecialName
    get_IdentifierAsString(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_StreamPosition(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.SimpleCompressorStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(NAudio.Wave.WaveStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double MakeUpGain 'get set' : 
    Double Threshold 'get set' : 
    Double Ratio 'get set' : 
    Double Attack 'get set' : 
    Double Release 'get set' : 
    Boolean Enabled 'get set' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Int32 BlockAlign 'get ' : 
  Methods:
    get_MakeUpGain(): PrivateScope, Public, HideBySig, SpecialName
    set_MakeUpGain(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Threshold(): PrivateScope, Public, HideBySig, SpecialName
    set_Threshold(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Ratio(): PrivateScope, Public, HideBySig, SpecialName
    set_Ratio(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Attack(): PrivateScope, Public, HideBySig, SpecialName
    set_Attack(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Release(): PrivateScope, Public, HideBySig, SpecialName
    set_Release(Double): PrivateScope, Public, HideBySig, SpecialName
    HasData(Int32): PrivateScope, Public, Virtual, HideBySig
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_BlockAlign(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NAudio.Wave.StreamMediaFoundationReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.MediaFoundationReader
    Void .ctor(System.IO.Stream, MediaFoundationReaderSettings): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NAudio.Wave.Wave32To16Stream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(NAudio.Wave.WaveStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single Volume 'get set' : 
    Int32 BlockAlign 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Boolean Clip 'get set' : 
  Methods:
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
    get_BlockAlign(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Clip(): PrivateScope, Public, HideBySig, SpecialName
    set_Clip(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.WaveChannel32: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(NAudio.Wave.WaveStream, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.Wave.WaveStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleNotifier
  Properties:
    Int32 BlockAlign 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    Boolean PadWithZeroes 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Single Volume 'get set' : 
    Single Pan 'get set' : 
  Events:
    System.EventHandler`1[NAudio.Wave.SampleEventArgs] Sample: 
  Methods:
    get_BlockAlign(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_PadWithZeroes(): PrivateScope, Public, HideBySig, SpecialName
    set_PadWithZeroes(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Pan(): PrivateScope, Public, HideBySig, SpecialName
    set_Pan(Single): PrivateScope, Public, HideBySig, SpecialName
    HasData(Int32): PrivateScope, Public, Virtual, HideBySig
    add_Sample(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_Sample(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NAudio.Wave.WaveFileReader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[NAudio.Wave.RiffChunk] ExtraChunks 'get ' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Int64 Length 'get ' : 
    Int64 SampleCount 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_ExtraChunks(): PrivateScope, Public, HideBySig, SpecialName
    GetChunkData(RiffChunk): PrivateScope, Public, HideBySig
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SampleCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    ReadNextSampleFrame(): PrivateScope, Public, HideBySig
    TryReadFloat(Single&(Out)): PrivateScope, Public, HideBySig (Obsolete)
Class NAudio.Wave.WaveFormatConversionProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.WaveFormat, NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
    System.IDisposable
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reposition(): PrivateScope, Public, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.WaveFormatConversionStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(NAudio.Wave.WaveFormat, NAudio.Wave.WaveStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 Position 'get set' : 
    Int64 Length 'get ' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    CreatePcmStream(WaveStream): PrivateScope, Public, Static, HideBySig
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    SourceToDest(Int32): PrivateScope, Public, HideBySig (Obsolete)
    DestToSource(Int32): PrivateScope, Public, HideBySig (Obsolete)
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.WaveInBuffer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(IntPtr, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Byte[] Data 'get ' : 
    Boolean Done 'get ' : 
    Boolean InQueue 'get ' : 
    Int32 BytesRecorded 'get ' : 
    Int32 BufferSize 'get ' : 
  Methods:
    Reuse(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    get_Done(): PrivateScope, Public, HideBySig, SpecialName
    get_InQueue(): PrivateScope, Public, HideBySig, SpecialName
    get_BytesRecorded(): PrivateScope, Public, HideBySig, SpecialName
    get_BufferSize(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.WaveMixerStream32: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[NAudio.Wave.WaveStream], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 InputCount 'get ' : 
    Boolean AutoStop 'get set' : 
    Int32 BlockAlign 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    AddInputStream(WaveStream): PrivateScope, Public, HideBySig
    RemoveInputStream(WaveStream): PrivateScope, Public, HideBySig
    get_InputCount(): PrivateScope, Public, HideBySig, SpecialName
    get_AutoStop(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoStop(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_BlockAlign(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class NAudio.Wave.WaveOffsetStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.WaveStream
    Void .ctor(NAudio.Wave.WaveStream, System.TimeSpan, System.TimeSpan, System.TimeSpan): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.Wave.WaveStream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.TimeSpan StartTime 'get set' : 
    System.TimeSpan SourceOffset 'get set' : 
    System.TimeSpan SourceLength 'get set' : 
    Int32 BlockAlign 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    get_StartTime(): PrivateScope, Public, HideBySig, SpecialName
    set_StartTime(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_SourceOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceOffset(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_SourceLength(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceLength(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_BlockAlign(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    HasData(Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.WaveOutBuffer: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(IntPtr, Int32, NAudio.Wave.IWaveProvider, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean InQueue 'get ' : 
    Int32 BufferSize 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnDone(): PrivateScope, Assembly, HideBySig
    get_InQueue(): PrivateScope, Public, HideBySig, SpecialName
    get_BufferSize(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.WaveStream: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.IO.Stream
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int32 BlockAlign 'get ' : 
    System.TimeSpan CurrentTime 'get set' : 
    System.TimeSpan TotalTime 'get ' : 
  Methods:
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    get_BlockAlign(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Skip(Int32): PrivateScope, Public, HideBySig
    get_CurrentTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CurrentTime(TimeSpan): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TotalTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HasData(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.WaveFormats.WmaWaveFormat: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
  :NAudio.Wave.WaveFormat
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NAudio.Wave.SampleProviders.AdsrSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    Single AttackSeconds 'get set' : 
    Single ReleaseSeconds 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    get_AttackSeconds(): PrivateScope, Public, HideBySig, SpecialName
    set_AttackSeconds(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ReleaseSeconds(): PrivateScope, Public, HideBySig, SpecialName
    set_ReleaseSeconds(Single): PrivateScope, Public, HideBySig, SpecialName
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Stop(): PrivateScope, Public, HideBySig
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NAudio.Wave.SampleProviders.ConcatenatingSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Generic.IEnumerable`1[NAudio.Wave.ISampleProvider]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.FadeInOutSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    BeginFadeIn(Double): PrivateScope, Public, HideBySig
    BeginFadeOut(Double): PrivateScope, Public, HideBySig
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NAudio.Wave.SampleProviders.MultiplexingSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Collections.Generic.IEnumerable`1[NAudio.Wave.ISampleProvider], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Int32 InputChannelCount 'get ' : 
    Int32 OutputChannelCount 'get ' : 
  Methods:
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ConnectInputToOutput(Int32, Int32): PrivateScope, Public, HideBySig
    get_InputChannelCount(): PrivateScope, Public, HideBySig, SpecialName
    get_OutputChannelCount(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.SampleProviders.OffsetSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    Int32 DelayBySamples 'get set' : 
    System.TimeSpan DelayBy 'get set' : 
    Int32 SkipOverSamples 'get set' : 
    System.TimeSpan SkipOver 'get set' : 
    Int32 TakeSamples 'get set' : 
    System.TimeSpan Take 'get set' : 
    Int32 LeadOutSamples 'get set' : 
    System.TimeSpan LeadOut 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    get_DelayBySamples(): PrivateScope, Public, HideBySig, SpecialName
    set_DelayBySamples(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DelayBy(): PrivateScope, Public, HideBySig, SpecialName
    set_DelayBy(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_SkipOverSamples(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipOverSamples(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SkipOver(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipOver(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_TakeSamples(): PrivateScope, Public, HideBySig, SpecialName
    set_TakeSamples(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Take(): PrivateScope, Public, HideBySig, SpecialName
    set_Take(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_LeadOutSamples(): PrivateScope, Public, HideBySig, SpecialName
    set_LeadOutSamples(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LeadOut(): PrivateScope, Public, HideBySig, SpecialName
    set_LeadOut(TimeSpan): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.Pcm32BitToSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.SampleProviders.SampleProviderConverterBase
    Void .ctor(NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(Single[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.SampleProviders.SampleProviderConverters: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ConvertWaveProviderIntoSampleProvider(IWaveProvider): PrivateScope, Public, Static, HideBySig
Class NAudio.Wave.SampleProviders.SampleToWaveProvider16: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Single Volume 'get set' : 
  Methods:
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.SampleProviders.SampleToWaveProvider24: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Single Volume 'get set' : 
  Methods:
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.SampleProviders.SignalGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Double Frequency 'get set' : 
    Double FrequencyLog 'get ' : 
    Double FrequencyEnd 'get set' : 
    Double FrequencyEndLog 'get ' : 
    Double Gain 'get set' : 
    Boolean[] PhaseReverse 'get ' : 
    NAudio.Wave.SampleProviders.SignalGeneratorType Type 'get set' : 
    Double SweepLengthSecs 'get set' : 
  Methods:
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Frequency(): PrivateScope, Public, HideBySig, SpecialName
    set_Frequency(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FrequencyLog(): PrivateScope, Public, HideBySig, SpecialName
    get_FrequencyEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_FrequencyEnd(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FrequencyEndLog(): PrivateScope, Public, HideBySig, SpecialName
    get_Gain(): PrivateScope, Public, HideBySig, SpecialName
    set_Gain(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PhaseReverse(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(SignalGeneratorType): PrivateScope, Public, HideBySig, SpecialName
    get_SweepLengthSecs(): PrivateScope, Public, HideBySig, SpecialName
    set_SweepLengthSecs(Double): PrivateScope, Public, HideBySig, SpecialName
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NAudio.Wave.SampleProviders.SignalGeneratorType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.SampleProviders.SignalGeneratorType Pink = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.SampleProviders.SignalGeneratorType White = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.SampleProviders.SignalGeneratorType Sweep = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.SampleProviders.SignalGeneratorType Sin = 3 : Public, Static, Literal, HasDefault
    NAudio.Wave.SampleProviders.SignalGeneratorType Square = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.SampleProviders.SignalGeneratorType Triangle = 5 : Public, Static, Literal, HasDefault
    NAudio.Wave.SampleProviders.SignalGeneratorType SawTooth = 6 : Public, Static, Literal, HasDefault
Class NAudio.Wave.SampleProviders.SmbPitchShiftingSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.Wave.ISampleProvider, Int32, Int64, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Single PitchFactor 'get set' : 
  Methods:
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PitchFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_PitchFactor(Single): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.SampleProviders.StereoToMonoSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    Single LeftVolume 'get set' : 
    Single RightVolume 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    get_LeftVolume(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftVolume(Single): PrivateScope, Public, HideBySig, SpecialName
    get_RightVolume(): PrivateScope, Public, HideBySig, SpecialName
    set_RightVolume(Single): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.WaveToSampleProvider64: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.SampleProviders.SampleProviderConverterBase
    Void .ctor(NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(Single[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.SampleProviders.WdlResamplingSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Interface NAudio.Wave.SampleProviders.ISampleChunkConverter: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Supports(WaveFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadNextChunk(IWaveProvider, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNextSample(Single&(Out), Single&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NAudio.Wave.SampleProviders.Mono16SampleChunkConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.SampleProviders.ISampleChunkConverter
  Methods:
    Supports(WaveFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadNextChunk(IWaveProvider, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNextSample(Single&(Out), Single&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.Mono24SampleChunkConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.SampleProviders.ISampleChunkConverter
  Methods:
    Supports(WaveFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadNextChunk(IWaveProvider, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNextSample(Single&(Out), Single&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.Mono8SampleChunkConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.SampleProviders.ISampleChunkConverter
  Methods:
    Supports(WaveFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadNextChunk(IWaveProvider, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNextSample(Single&(Out), Single&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.MonoFloatSampleChunkConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.SampleProviders.ISampleChunkConverter
  Methods:
    Supports(WaveFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadNextChunk(IWaveProvider, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNextSample(Single&(Out), Single&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.Stereo16SampleChunkConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.SampleProviders.ISampleChunkConverter
  Methods:
    Supports(WaveFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadNextChunk(IWaveProvider, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNextSample(Single&(Out), Single&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.Stereo24SampleChunkConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.SampleProviders.ISampleChunkConverter
  Methods:
    Supports(WaveFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadNextChunk(IWaveProvider, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNextSample(Single&(Out), Single&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.Stereo8SampleChunkConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.SampleProviders.ISampleChunkConverter
  Methods:
    Supports(WaveFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadNextChunk(IWaveProvider, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNextSample(Single&(Out), Single&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.StereoFloatSampleChunkConverter: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.SampleProviders.ISampleChunkConverter
  Methods:
    Supports(WaveFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadNextChunk(IWaveProvider, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNextSample(Single&(Out), Single&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.MixingSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[NAudio.Wave.ISampleProvider]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    System.Collections.Generic.IEnumerable`1[NAudio.Wave.ISampleProvider] MixerInputs 'get ' : 
    Boolean ReadFully 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get set' : 
  Events:
    System.EventHandler`1[NAudio.Wave.SampleProviders.SampleProviderEventArgs] MixerInputEnded: 
  Methods:
    get_MixerInputs(): PrivateScope, Public, HideBySig, SpecialName
    get_ReadFully(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadFully(Boolean): PrivateScope, Public, HideBySig, SpecialName
    AddMixerInput(IWaveProvider): PrivateScope, Public, HideBySig
    AddMixerInput(ISampleProvider): PrivateScope, Public, HideBySig
    add_MixerInputEnded(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_MixerInputEnded(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    RemoveMixerInput(ISampleProvider): PrivateScope, Public, HideBySig
    RemoveAllMixerInputs(): PrivateScope, Public, HideBySig
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.SampleProviderEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(NAudio.Wave.ISampleProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Wave.ISampleProvider SampleProvider 'get set' : 
  Methods:
    get_SampleProvider(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.SampleProviders.PanningSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    Single Pan 'get set' : 
    NAudio.Wave.SampleProviders.IPanStrategy PanStrategy 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    get_Pan(): PrivateScope, Public, HideBySig, SpecialName
    set_Pan(Single): PrivateScope, Public, HideBySig, SpecialName
    get_PanStrategy(): PrivateScope, Public, HideBySig, SpecialName
    set_PanStrategy(IPanStrategy): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NAudio.Wave.SampleProviders.StereoSamplePair: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Single Left 'get set' : 
    Single Right 'get set' : 
  Methods:
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(Single): PrivateScope, Public, HideBySig, SpecialName
Interface NAudio.Wave.SampleProviders.IPanStrategy: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetMultipliers(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NAudio.Wave.SampleProviders.StereoBalanceStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.SampleProviders.IPanStrategy
  Methods:
    GetMultipliers(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.SquareRootPanStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.SampleProviders.IPanStrategy
  Methods:
    GetMultipliers(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.SinPanStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.SampleProviders.IPanStrategy
  Methods:
    GetMultipliers(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.LinearPanStrategy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.SampleProviders.IPanStrategy
  Methods:
    GetMultipliers(Single): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.MeteringSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.Wave.ISampleProvider, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    Int32 SamplesPerNotification 'get set' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Events:
    System.EventHandler`1[NAudio.Wave.SampleProviders.StreamVolumeEventArgs] StreamVolume: 
  Methods:
    get_SamplesPerNotification(): PrivateScope, Public, HideBySig, SpecialName
    set_SamplesPerNotification(Int32): PrivateScope, Public, HideBySig, SpecialName
    add_StreamVolume(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_StreamVolume(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.SampleProviders.StreamVolumeEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single[] MaxSampleValues 'get set' : 
  Methods:
    get_MaxSampleValues(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxSampleValues(Single[]): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.SampleProviders.NotifyingSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
    NAudio.Wave.ISampleNotifier
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Events:
    System.EventHandler`1[NAudio.Wave.SampleEventArgs] Sample: 
  Methods:
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    add_Sample(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_Sample(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NAudio.Wave.SampleProviders.VolumeSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Single Volume 'get set' : 
  Methods:
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.SampleProviders.SampleProviderConverterBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Single[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NAudio.Wave.SampleProviders.SampleToWaveProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class NAudio.Wave.SampleProviders.MonoToStereoSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.ISampleProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Single LeftVolume 'get set' : 
    Single RightVolume 'get set' : 
  Methods:
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_LeftVolume(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftVolume(Single): PrivateScope, Public, HideBySig, SpecialName
    get_RightVolume(): PrivateScope, Public, HideBySig, SpecialName
    set_RightVolume(Single): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.SampleProviders.WaveToSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.SampleProviders.SampleProviderConverterBase
    Void .ctor(NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(Single[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.SampleProviders.Pcm16BitToSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.SampleProviders.SampleProviderConverterBase
    Void .ctor(NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(Single[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.SampleProviders.Pcm24BitToSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.SampleProviders.SampleProviderConverterBase
    Void .ctor(NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(Single[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.SampleProviders.Pcm8BitToSampleProvider: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Wave.SampleProviders.SampleProviderConverterBase
    Void .ctor(NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Read(Single[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Wave.SampleProviders.SampleChannel: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.IWaveProvider): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.Wave.IWaveProvider, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.ISampleProvider
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Single Volume 'get set' : 
  Events:
    System.EventHandler`1[NAudio.Wave.SampleProviders.StreamVolumeEventArgs] PreVolumeMeter: 
  Methods:
    Read(Single[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
    add_PreVolumeMeter(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_PreVolumeMeter(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.Wave.Compression.AcmDriverAddFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Compression.AcmDriverAddFlags Local = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmDriverAddFlags Global = 8 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmDriverAddFlags Function = 3 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmDriverAddFlags NotifyWindowHandle = 4 : Public, Static, Literal, HasDefault
Class NAudio.Wave.Compression.AcmDriver: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Int32 MaxFormatSize 'get ' : 
    System.String ShortName 'get ' : 
    System.String LongName 'get ' : 
    IntPtr DriverId 'get ' : 
    System.Collections.Generic.IEnumerable`1[NAudio.Wave.Compression.AcmFormatTag] FormatTags 'get ' : 
  Methods:
    IsCodecInstalled(String): PrivateScope, Public, Static, HideBySig
    AddLocalDriver(String): PrivateScope, Public, Static, HideBySig
    RemoveLocalDriver(AcmDriver): PrivateScope, Public, Static, HideBySig
    ShowFormatChooseDialog(IntPtr, String, AcmFormatEnumFlags, WaveFormat, WaveFormat&(Out), String&(Out), String&(Out)): PrivateScope, Public, Static, HideBySig
    get_MaxFormatSize(): PrivateScope, Public, HideBySig, SpecialName
    FindByShortName(String): PrivateScope, Public, Static, HideBySig
    EnumerateAcmDrivers(): PrivateScope, Public, Static, HideBySig
    get_ShortName(): PrivateScope, Public, HideBySig, SpecialName
    get_LongName(): PrivateScope, Public, HideBySig, SpecialName
    get_DriverId(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_FormatTags(): PrivateScope, Public, HideBySig, SpecialName
    GetFormats(AcmFormatTag): PrivateScope, Public, HideBySig
    Open(): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NAudio.Wave.Compression.AcmDriverDetails: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 structureSize : Public
    UInt32 fccType : Public
    UInt32 fccComp : Public
    UInt16 manufacturerId : Public
    UInt16 productId : Public
    UInt32 acmVersion : Public
    UInt32 driverVersion : Public
    NAudio.Wave.Compression.AcmDriverDetailsSupportFlags supportFlags : Public
    Int32 formatTagsCount : Public
    Int32 filterTagsCount : Public
    IntPtr hicon : Public
    System.String shortName : Public, HasFieldMarshal
    System.String longName : Public, HasFieldMarshal
    System.String copyright : Public, HasFieldMarshal
    System.String licensing : Public, HasFieldMarshal
    System.String features : Public, HasFieldMarshal
Struct NAudio.Wave.Compression.AcmDriverDetailsSupportFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Compression.AcmDriverDetailsSupportFlags Codec = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmDriverDetailsSupportFlags Converter = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmDriverDetailsSupportFlags Filter = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmDriverDetailsSupportFlags Hardware = 8 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmDriverDetailsSupportFlags Async = 16 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmDriverDetailsSupportFlags Local = 1073741824 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmDriverDetailsSupportFlags Disabled = -2147483648 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.Compression.AcmDriverEnumFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Compression.AcmDriverEnumFlags NoLocal = 1073741824 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmDriverEnumFlags Disabled = -2147483648 : Public, Static, Literal, HasDefault
Class NAudio.Wave.Compression.AcmFormat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.Compression.AcmFormatDetails): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 FormatIndex 'get ' : 
    NAudio.Wave.WaveFormatEncoding FormatTag 'get ' : 
    NAudio.Wave.Compression.AcmDriverDetailsSupportFlags SupportFlags 'get ' : 
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Int32 WaveFormatByteSize 'get ' : 
    System.String FormatDescription 'get ' : 
  Methods:
    get_FormatIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_FormatTag(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportFlags(): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormatByteSize(): PrivateScope, Public, HideBySig, SpecialName
    get_FormatDescription(): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.Wave.Compression.AcmFormatChoose: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, AutoClass, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 structureSize : Public
    NAudio.Wave.Compression.AcmFormatChooseStyleFlags styleFlags : Public
    IntPtr ownerWindowHandle : Public
    IntPtr selectedWaveFormatPointer : Public
    Int32 selectedWaveFormatByteSize : Public
    System.String title : Public, HasFieldMarshal
    System.String formatTagDescription : Public, HasFieldMarshal
    System.String formatDescription : Public, HasFieldMarshal
    System.String name : Public, HasFieldMarshal
    Int32 nameByteSize : Public
    NAudio.Wave.Compression.AcmFormatEnumFlags formatEnumFlags : Public
    IntPtr waveFormatEnumPointer : Public
    IntPtr instanceHandle : Public
    System.String templateName : Public, HasFieldMarshal
    IntPtr customData : Public
    AcmFormatChooseHookProc windowCallbackFunction : Public
Struct NAudio.Wave.Compression.AcmFormatChooseStyleFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Compression.AcmFormatChooseStyleFlags None = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatChooseStyleFlags ShowHelp = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatChooseStyleFlags EnableHook = 8 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatChooseStyleFlags EnableTemplate = 16 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatChooseStyleFlags EnableTemplateHandle = 32 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatChooseStyleFlags InitToWfxStruct = 64 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatChooseStyleFlags ContextHelp = 128 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.Compression.AcmFormatDetails: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 structSize : Public
    Int32 formatIndex : Public
    Int32 formatTag : Public
    NAudio.Wave.Compression.AcmDriverDetailsSupportFlags supportFlags : Public
    IntPtr waveFormatPointer : Public
    Int32 waveFormatByteSize : Public
    System.String formatDescription : Public, HasFieldMarshal
    Int32 FormatDescriptionChars = 128 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.Compression.AcmFormatEnumFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Compression.AcmFormatEnumFlags None = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatEnumFlags Convert = 1048576 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatEnumFlags Hardware = 4194304 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatEnumFlags Input = 8388608 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatEnumFlags Channels = 131072 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatEnumFlags SamplesPerSecond = 262144 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatEnumFlags Output = 16777216 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatEnumFlags Suggest = 2097152 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatEnumFlags BitsPerSample = 524288 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatEnumFlags FormatTag = 65536 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.Compression.AcmFormatSuggestFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Compression.AcmFormatSuggestFlags FormatTag = 65536 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatSuggestFlags Channels = 131072 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatSuggestFlags SamplesPerSecond = 262144 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatSuggestFlags BitsPerSample = 524288 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmFormatSuggestFlags TypeMask = 16711680 : Public, Static, Literal, HasDefault
Class NAudio.Wave.Compression.AcmFormatTag: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.Compression.AcmFormatTagDetails): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 FormatTagIndex 'get ' : 
    NAudio.Wave.WaveFormatEncoding FormatTag 'get ' : 
    Int32 FormatSize 'get ' : 
    NAudio.Wave.Compression.AcmDriverDetailsSupportFlags SupportFlags 'get ' : 
    Int32 StandardFormatsCount 'get ' : 
    System.String FormatDescription 'get ' : 
  Methods:
    get_FormatTagIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_FormatTag(): PrivateScope, Public, HideBySig, SpecialName
    get_FormatSize(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportFlags(): PrivateScope, Public, HideBySig, SpecialName
    get_StandardFormatsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_FormatDescription(): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.Wave.Compression.AcmFormatTagDetails: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 structureSize : Public
    Int32 formatTagIndex : Public
    Int32 formatTag : Public
    Int32 formatSize : Public
    NAudio.Wave.Compression.AcmDriverDetailsSupportFlags supportFlags : Public
    Int32 standardFormatsCount : Public
    System.String formatDescription : Public, HasFieldMarshal
    Int32 FormatTagDescriptionChars = 48 : Public, Static, Literal, HasDefault
Class NAudio.Wave.Compression.AcmInterop: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    acmDriverAdd(IntPtr&(Out), IntPtr, IntPtr, Int32, AcmDriverAddFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmDriverRemove(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmDriverClose(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmDriverEnum(AcmDriverEnumCallback, IntPtr, AcmDriverEnumFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmDriverDetails(IntPtr, AcmDriverDetails&, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmDriverOpen(IntPtr&(Out), IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmFormatChoose(AcmFormatChoose&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmFormatEnum(IntPtr, AcmFormatDetails&, AcmFormatEnumCallback, IntPtr, AcmFormatEnumFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmFormatSuggest(IntPtr, WaveFormat(In, HasFieldMarshal), WaveFormat(In, Out, HasFieldMarshal), Int32, AcmFormatSuggestFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmFormatSuggest2(IntPtr, IntPtr, IntPtr, Int32, AcmFormatSuggestFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmFormatTagEnum(IntPtr, AcmFormatTagDetails&, AcmFormatTagEnumCallback, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmMetrics(IntPtr, AcmMetrics, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmStreamOpen(IntPtr&(Out), IntPtr, WaveFormat(In, HasFieldMarshal), WaveFormat(In, HasFieldMarshal), WaveFilter(In), IntPtr, IntPtr, AcmStreamOpenFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmStreamOpen2(IntPtr&(Out), IntPtr, IntPtr, IntPtr, WaveFilter(In), IntPtr, IntPtr, AcmStreamOpenFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmStreamClose(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmStreamConvert(IntPtr, AcmStreamHeaderStruct(In, Out), AcmStreamConvertFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmStreamPrepareHeader(IntPtr, AcmStreamHeaderStruct(In, Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmStreamReset(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmStreamSize(IntPtr, Int32, Int32&(Out), AcmStreamSizeFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    acmStreamUnprepareHeader(IntPtr, AcmStreamHeaderStruct(In, Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class NAudio.Wave.Compression.AcmStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.WaveFormat, NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, NAudio.Wave.WaveFormat, NAudio.Wave.Compression.WaveFilter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Byte[] SourceBuffer 'get ' : 
    Byte[] DestBuffer 'get ' : 
  Methods:
    SourceToDest(Int32): PrivateScope, Public, HideBySig
    DestToSource(Int32): PrivateScope, Public, HideBySig
    SuggestPcmFormat(WaveFormat): PrivateScope, Public, Static, HideBySig
    get_SourceBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_DestBuffer(): PrivateScope, Public, HideBySig, SpecialName
    Reposition(): PrivateScope, Public, HideBySig
    Convert(Int32, Int32&(Out)): PrivateScope, Public, HideBySig
    Convert(Int32): PrivateScope, Public, HideBySig (Obsolete)
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.Compression.AcmStreamHeader: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(IntPtr, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Byte[] SourceBuffer 'get ' : 
    Byte[] DestBuffer 'get ' : 
  Methods:
    Reposition(): PrivateScope, Public, HideBySig
    Convert(Int32, Int32&(Out)): PrivateScope, Public, HideBySig
    get_SourceBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_DestBuffer(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NAudio.Wave.Compression.AcmStreamHeaderStatusFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Compression.AcmStreamHeaderStatusFlags Done = 65536 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmStreamHeaderStatusFlags Prepared = 131072 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmStreamHeaderStatusFlags InQueue = 1048576 : Public, Static, Literal, HasDefault
Class NAudio.Wave.Compression.AcmStreamHeaderStruct: AutoLayout, AnsiClass, Class, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 cbStruct : Public
    NAudio.Wave.Compression.AcmStreamHeaderStatusFlags fdwStatus : Public
    IntPtr userData : Public
    IntPtr sourceBufferPointer : Public
    Int32 sourceBufferLength : Public
    Int32 sourceBufferLengthUsed : Public
    IntPtr sourceUserData : Public
    IntPtr destBufferPointer : Public
    Int32 destBufferLength : Public
    Int32 destBufferLengthUsed : Public
    IntPtr destUserData : Public
Struct NAudio.Wave.Compression.AcmStreamOpenFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Compression.AcmStreamOpenFlags Query = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmStreamOpenFlags Async = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmStreamOpenFlags NonRealTime = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmStreamOpenFlags CallbackTypeMask = 458752 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmStreamOpenFlags CallbackNull = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmStreamOpenFlags CallbackWindow = 65536 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmStreamOpenFlags CallbackTask = 131072 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmStreamOpenFlags CallbackFunction = 196608 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmStreamOpenFlags CallbackThread = 131072 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmStreamOpenFlags CallbackEvent = 327680 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.Compression.AcmStreamSizeFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Compression.AcmStreamSizeFlags Source = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.Compression.AcmStreamSizeFlags Destination = 1 : Public, Static, Literal, HasDefault
Class NAudio.Wave.Compression.WaveFilter: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 StructureSize : Public
    Int32 FilterTag : Public
    Int32 Filter : Public
    Int32[] Reserved : Public, HasFieldMarshal
Struct NAudio.Wave.Asio.Asio64Bit: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 hi : Public
    UInt32 lo : Public
Struct NAudio.Wave.Asio.AsioCallbacks: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    AsioBufferSwitchCallBack pbufferSwitch : Public
    AsioSampleRateDidChangeCallBack psampleRateDidChange : Public
    AsioAsioMessageCallBack pasioMessage : Public
    AsioBufferSwitchTimeInfoCallBack pbufferSwitchTimeInfo : Public
Struct NAudio.Wave.Asio.AsioChannelInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 channel : Public
    Boolean isInput : Public
    Boolean isActive : Public
    Int32 channelGroup : Public
    NAudio.Wave.Asio.AsioSampleType type : Public, HasFieldMarshal
    System.String name : Public, HasFieldMarshal
Class NAudio.Wave.Asio.AsioDriverCapability: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String DriverName : Public
    Int32 NbInputChannels : Public
    Int32 NbOutputChannels : Public
    Int32 InputLatency : Public
    Int32 OutputLatency : Public
    Int32 BufferMinSize : Public
    Int32 BufferMaxSize : Public
    Int32 BufferPreferredSize : Public
    Int32 BufferGranularity : Public
    Double SampleRate : Public
    NAudio.Wave.Asio.AsioChannelInfo[] InputChannelInfos : Public
    NAudio.Wave.Asio.AsioChannelInfo[] OutputChannelInfos : Public
Struct NAudio.Wave.Asio.AsioError: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Asio.AsioError ASE_OK = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioError ASE_SUCCESS = 1061701536 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioError ASE_NotPresent = -1000 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioError ASE_HWMalfunction = -999 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioError ASE_InvalidParameter = -998 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioError ASE_InvalidMode = -997 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioError ASE_SPNotAdvancing = -996 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioError ASE_NoClock = -995 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioError ASE_NoMemory = -994 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.Asio.AsioMessageSelector: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Asio.AsioMessageSelector kAsioSelectorSupported = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioEngineVersion = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioResetRequest = 3 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioBufferSizeChange = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioResyncRequest = 5 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioLatenciesChanged = 6 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioSupportsTimeInfo = 7 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioSupportsTimeCode = 8 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioMMCCommand = 9 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioSupportsInputMonitor = 10 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioSupportsInputGain = 11 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioSupportsInputMeter = 12 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioSupportsOutputGain = 13 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioSupportsOutputMeter = 14 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioMessageSelector kAsioOverload = 15 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.Asio.AsioSampleType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Asio.AsioSampleType Int16MSB = 0 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Int24MSB = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Int32MSB = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Float32MSB = 3 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Float64MSB = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Int32MSB16 = 8 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Int32MSB18 = 9 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Int32MSB20 = 10 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Int32MSB24 = 11 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Int16LSB = 16 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Int24LSB = 17 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Int32LSB = 18 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Float32LSB = 19 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Float64LSB = 20 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Int32LSB16 = 24 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Int32LSB18 = 25 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Int32LSB20 = 26 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType Int32LSB24 = 27 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType DSDInt8LSB1 = 32 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType DSDInt8MSB1 = 33 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioSampleType DSDInt8NER8 = 40 : Public, Static, Literal, HasDefault
Class NAudio.Wave.Asio.AsioDriver: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    GetAsioDriverNames(): PrivateScope, Public, Static, HideBySig
    GetAsioDriverByName(String): PrivateScope, Public, Static, HideBySig
    GetAsioDriverByGuid(Guid): PrivateScope, Public, Static, HideBySig
    Init(IntPtr): PrivateScope, Public, HideBySig
    GetDriverName(): PrivateScope, Public, HideBySig
    GetDriverVersion(): PrivateScope, Public, HideBySig
    GetErrorMessage(): PrivateScope, Public, HideBySig
    Start(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    GetChannels(Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    GetLatencies(Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    GetBufferSize(Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    CanSampleRate(Double): PrivateScope, Public, HideBySig
    GetSampleRate(): PrivateScope, Public, HideBySig
    SetSampleRate(Double): PrivateScope, Public, HideBySig
    GetClockSources(Int64&(Out), Int32): PrivateScope, Public, HideBySig
    SetClockSource(Int32): PrivateScope, Public, HideBySig
    GetSamplePosition(Int64&(Out), Asio64Bit&): PrivateScope, Public, HideBySig
    GetChannelInfo(Int32, Boolean): PrivateScope, Public, HideBySig
    CreateBuffers(IntPtr, Int32, Int32, AsioCallbacks&): PrivateScope, Public, HideBySig
    DisposeBuffers(): PrivateScope, Public, HideBySig
    ControlPanel(): PrivateScope, Public, HideBySig
    Future(Int32, IntPtr): PrivateScope, Public, HideBySig
    OutputReady(): PrivateScope, Public, HideBySig
    ReleaseComAsioDriver(): PrivateScope, Public, HideBySig
Class NAudio.Wave.Asio.AsioFillBufferCallback: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr[], IntPtr[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr[], IntPtr[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.Asio.AsioDriverExt: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.Asio.AsioDriver): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Wave.Asio.AsioDriver Driver 'get ' : 
    NAudio.Wave.Asio.AsioFillBufferCallback FillBufferCallback 'get set' : 
    NAudio.Wave.Asio.AsioDriverCapability Capabilities 'get ' : 
  Methods:
    SetChannelOffset(Int32, Int32): PrivateScope, Public, HideBySig
    get_Driver(): PrivateScope, Public, HideBySig, SpecialName
    Start(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    ShowControlPanel(): PrivateScope, Public, HideBySig
    ReleaseDriver(): PrivateScope, Public, HideBySig
    IsSampleRateSupported(Double): PrivateScope, Public, HideBySig
    SetSampleRate(Double): PrivateScope, Public, HideBySig
    get_FillBufferCallback(): PrivateScope, Public, HideBySig, SpecialName
    set_FillBufferCallback(AsioFillBufferCallback): PrivateScope, Public, HideBySig, SpecialName
    get_Capabilities(): PrivateScope, Public, HideBySig, SpecialName
    CreateBuffers(Int32, Int32, Boolean): PrivateScope, Public, HideBySig
Class NAudio.Wave.Asio.AsioSampleConvertor: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SelectSampleConvertor(WaveFormat, AsioSampleType): PrivateScope, Public, Static, HideBySig
    ConvertorShortToInt2Channels(IntPtr, IntPtr[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    ConvertorShortToIntGeneric(IntPtr, IntPtr[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    ConvertorFloatToInt2Channels(IntPtr, IntPtr[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    ConvertorFloatToIntGeneric(IntPtr, IntPtr[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    ConvertorShortToShort2Channels(IntPtr, IntPtr[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    ConvertorShortToShortGeneric(IntPtr, IntPtr[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    ConvertorFloatToShort2Channels(IntPtr, IntPtr[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    ConvertorFloatToShortGeneric(IntPtr, IntPtr[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    ConverterFloatTo24LSBGeneric(IntPtr, IntPtr[], Int32, Int32): PrivateScope, Public, Static, HideBySig
    ConverterFloatToFloatGeneric(IntPtr, IntPtr[], Int32, Int32): PrivateScope, Public, Static, HideBySig
Class NAudio.Wave.Asio.AsioException: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Wave.Asio.AsioError Error 'get set' : 
  Methods:
    get_Error(): PrivateScope, Public, HideBySig, SpecialName
    set_Error(AsioError): PrivateScope, Public, HideBySig, SpecialName
    getErrorName(AsioError): PrivateScope, Public, Static, HideBySig
Struct NAudio.Wave.Asio.AsioBufferInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Boolean isInput : Public
    Int32 channelNum : Public
    IntPtr pBuffer0 : Public
    IntPtr pBuffer1 : Public
  Methods:
    Buffer(Int32): PrivateScope, Public, HideBySig
Struct NAudio.Wave.Asio.AsioTimeCode: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double speed : Public
    NAudio.Wave.Asio.Asio64Bit timeCodeSamples : Public
    NAudio.Wave.Asio.AsioTimeCodeFlags flags : Public
    System.String future : Public, HasFieldMarshal
Struct NAudio.Wave.Asio.AsioTimeCodeFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Asio.AsioTimeCodeFlags kTcValid = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioTimeCodeFlags kTcRunning = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioTimeCodeFlags kTcReverse = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioTimeCodeFlags kTcOnspeed = 8 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioTimeCodeFlags kTcStill = 16 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioTimeCodeFlags kTcSpeedValid = 256 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.Asio.AsioTimeInfo: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double speed : Public
    NAudio.Wave.Asio.Asio64Bit systemTime : Public
    NAudio.Wave.Asio.Asio64Bit samplePosition : Public
    Double sampleRate : Public
    NAudio.Wave.Asio.AsioTimeInfoFlags flags : Public
    System.String reserved : Public, HasFieldMarshal
Struct NAudio.Wave.Asio.AsioTimeInfoFlags: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Wave.Asio.AsioTimeInfoFlags kSystemTimeValid = 1 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioTimeInfoFlags kSamplePositionValid = 2 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioTimeInfoFlags kSampleRateValid = 4 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioTimeInfoFlags kSpeedValid = 8 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioTimeInfoFlags kSampleRateChanged = 16 : Public, Static, Literal, HasDefault
    NAudio.Wave.Asio.AsioTimeInfoFlags kClockSourceChanged = 32 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.Asio.AsioTime: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 reserved1 : Public
    Int32 reserved2 : Public
    Int32 reserved3 : Public
    Int32 reserved4 : Public
    NAudio.Wave.Asio.AsioTimeInfo timeInfo : Public
    NAudio.Wave.Asio.AsioTimeCode timeCode : Public
Class NAudio.Utils.ChunkIdentifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ChunkIdentifierToInt32(String): PrivateScope, Public, Static, HideBySig
Class NAudio.Utils.FieldDescriptionAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Utils.ByteArrayExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsEntirelyNull(Byte[]): PrivateScope, Public, Static, HideBySig
    DescribeAsHex(Byte[], String, Int32): PrivateScope, Public, Static, HideBySig
    DecodeAsString(Byte[], Int32, Int32, Encoding): PrivateScope, Public, Static, HideBySig
    Concat(Byte[][]): PrivateScope, Public, Static, HideBySig
Class NAudio.Utils.FieldDescriptionHelper: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Describe(Type, Guid): PrivateScope, Public, Static, HideBySig
Class NAudio.Utils.MarshalHelpers: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    SizeOf(): PrivateScope, Public, Static, HideBySig
    OffsetOf(String): PrivateScope, Public, Static, HideBySig
    PtrToStructure(IntPtr): PrivateScope, Public, Static, HideBySig
Class NAudio.Utils.WavePositionExtensions: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetPositionTimeSpan(IWavePosition): PrivateScope, Public, Static, HideBySig
Class NAudio.Utils.IEEE: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ConvertToIeeeExtended(Double): PrivateScope, Public, Static, HideBySig
    ConvertFromIeeeExtended(Byte[]): PrivateScope, Public, Static, HideBySig
Class NAudio.Utils.NativeMethods: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    LoadLibrary(String): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetProcAddress(IntPtr, String): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    FreeLibrary(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class NAudio.Utils.BufferHelpers: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Ensure(Byte[], Int32): PrivateScope, Public, Static, HideBySig
    Ensure(Single[], Int32): PrivateScope, Public, Static, HideBySig
Class NAudio.Utils.ByteEncoding: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Text.Encoding
  Fields:
    NAudio.Utils.ByteEncoding Instance : Public, Static, InitOnly
  Methods:
    GetByteCount(Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetBytes(Char[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Virtual, HideBySig
    GetCharCount(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetChars(Byte[], Int32, Int32, Char[], Int32): PrivateScope, Public, Virtual, HideBySig
    GetMaxCharCount(Int32): PrivateScope, Public, Virtual, HideBySig
    GetMaxByteCount(Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Utils.CircularBuffer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 MaxLength 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    Write(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    get_MaxLength(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    Reset(): PrivateScope, Public, HideBySig
    Advance(Int32): PrivateScope, Public, HideBySig
Class NAudio.Utils.Decibels: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    LinearToDecibels(Double): PrivateScope, Public, Static, HideBySig
    DecibelsToLinear(Double): PrivateScope, Public, Static, HideBySig
Class NAudio.Utils.HResult: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 S_OK = 0 : Public, Static, Literal, HasDefault
    Int32 S_FALSE = 1 : Public, Static, Literal, HasDefault
    Int32 E_INVALIDARG = -2147483645 : Public, Static, Literal, HasDefault
  Methods:
    MAKE_HRESULT(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    GetHResult(COMException): PrivateScope, Public, Static, HideBySig
Class NAudio.Utils.IgnoreDisposeStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.IO.Stream
    Void .ctor(System.IO.Stream): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.IO.Stream SourceStream 'get set' : 
    Boolean IgnoreDispose 'get set' : 
    Boolean CanRead 'get ' : 
    Boolean CanSeek 'get ' : 
    Boolean CanWrite 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    get_SourceStream(): PrivateScope, Public, HideBySig, SpecialName
    get_IgnoreDispose(): PrivateScope, Public, HideBySig, SpecialName
    set_IgnoreDispose(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Utils.MergeSort: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Sort(IList`1): PrivateScope, Public, Static, HideBySig
    Sort(IList`1, IComparer`1): PrivateScope, Public, Static, HideBySig
Class NAudio.Utils.ProgressLog: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.UserControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get ' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    LogMessage(Color, String): PrivateScope, Public, HideBySig
    ClearLog(): PrivateScope, Public, HideBySig
Class NAudio.Midi.RawMetaEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MetaEvent
    Void .ctor(NAudio.Midi.MetaEventType, Int64, Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Data 'get set' : 
  Methods:
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    set_Data(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Midi.MidiInMessageEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 RawMessage 'get set' : 
    NAudio.Midi.MidiEvent MidiEvent 'get set' : 
    Int32 Timestamp 'get set' : 
  Methods:
    get_RawMessage(): PrivateScope, Public, HideBySig, SpecialName
    get_MidiEvent(): PrivateScope, Public, HideBySig, SpecialName
    get_Timestamp(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Midi.ChannelAfterTouchEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MidiEvent
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 AfterTouchPressure 'get set' : 
  Methods:
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
    get_AfterTouchPressure(): PrivateScope, Public, HideBySig, SpecialName
    set_AfterTouchPressure(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Midi.ControlChangeEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MidiEvent
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, Int32, NAudio.Midi.MidiController, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Midi.MidiController Controller 'get set' : 
    Int32 ControllerValue 'get set' : 
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetAsShortMessage(): PrivateScope, Public, Virtual, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
    get_Controller(): PrivateScope, Public, HideBySig, SpecialName
    set_Controller(MidiController): PrivateScope, Public, HideBySig, SpecialName
    get_ControllerValue(): PrivateScope, Public, HideBySig, SpecialName
    set_ControllerValue(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Midi.KeySignatureEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MetaEvent
    Void .ctor(System.IO.BinaryReader, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 SharpsFlats 'get ' : 
    Int32 MajorMinor 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig
    get_SharpsFlats(): PrivateScope, Public, HideBySig, SpecialName
    get_MajorMinor(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Midi.MetaEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MidiEvent
    Void .ctor(NAudio.Midi.MetaEventType, Int32, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 metaDataLength : Assembly
  Properties:
    NAudio.Midi.MetaEventType MetaEventType 'get ' : 
  Methods:
    get_MetaEventType(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig
    ReadMetaEvent(BinaryReader): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Struct NAudio.Midi.MetaEventType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    NAudio.Midi.MetaEventType TrackSequenceNumber = 0 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType TextEvent = 1 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType Copyright = 2 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType SequenceTrackName = 3 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType TrackInstrumentName = 4 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType Lyric = 5 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType Marker = 6 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType CuePoint = 7 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType ProgramName = 8 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType DeviceName = 9 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType MidiChannel = 32 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType MidiPort = 33 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType EndTrack = 47 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType SetTempo = 81 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType SmpteOffset = 84 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType TimeSignature = 88 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType KeySignature = 89 : Public, Static, Literal, HasDefault
    NAudio.Midi.MetaEventType SequencerSpecific = 127 : Public, Static, Literal, HasDefault
Struct NAudio.Midi.MidiCommandCode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    NAudio.Midi.MidiCommandCode NoteOff = 128 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode NoteOn = 144 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode KeyAfterTouch = 160 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode ControlChange = 176 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode PatchChange = 192 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode ChannelAfterTouch = 208 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode PitchWheelChange = 224 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode Sysex = 240 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode Eox = 247 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode TimingClock = 248 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode StartSequence = 250 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode ContinueSequence = 251 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode StopSequence = 252 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode AutoSensing = 254 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiCommandCode MetaEvent = 255 : Public, Static, Literal, HasDefault
Struct NAudio.Midi.MidiController: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    NAudio.Midi.MidiController BankSelect = 0 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController Modulation = 1 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController BreathController = 2 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController FootController = 4 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController MainVolume = 7 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController Pan = 10 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController Expression = 11 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController BankSelectLsb = 32 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController Sustain = 64 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController Portamento = 65 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController Sostenuto = 66 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController SoftPedal = 67 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController LegatoFootswitch = 68 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController ResetAllControllers = 121 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiController AllNotesOff = 123 : Public, Static, Literal, HasDefault
Class NAudio.Midi.MidiEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int64, Int32, NAudio.Midi.MidiCommandCode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    Int32 Channel 'get set' : 
    Int32 DeltaTime 'get ' : 
    Int64 AbsoluteTime 'get set' : 
    NAudio.Midi.MidiCommandCode CommandCode 'get ' : 
  Methods:
    FromRawMessage(Int32): PrivateScope, Public, Static, HideBySig
    ReadNextEvent(BinaryReader, MidiEvent): PrivateScope, Public, Static, HideBySig
    GetAsShortMessage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Channel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Channel(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DeltaTime(): PrivateScope, Public, HideBySig, SpecialName
    get_AbsoluteTime(): PrivateScope, Public, HideBySig, SpecialName
    set_AbsoluteTime(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_CommandCode(): PrivateScope, Public, HideBySig, SpecialName
    IsNoteOff(MidiEvent): PrivateScope, Public, Static, HideBySig
    IsNoteOn(MidiEvent): PrivateScope, Public, Static, HideBySig
    IsEndTrack(MidiEvent): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    ReadVarInt(BinaryReader): PrivateScope, Public, Static, HideBySig
    WriteVarInt(BinaryWriter, Int32): PrivateScope, Public, Static, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Midi.MidiEventCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IList`1[NAudio.Midi.MidiEvent]]
    System.Collections.IEnumerable
  Properties:
    Int32 Tracks 'get ' : 
    Int64 StartAbsoluteTime 'get set' : 
    Int32 DeltaTicksPerQuarterNote 'get ' : 
    System.Collections.Generic.IList`1[NAudio.Midi.MidiEvent] Item [Int32] 'get ' : 
    Int32 MidiFileType 'get set' : 
  Methods:
    get_Tracks(): PrivateScope, Public, HideBySig, SpecialName
    get_StartAbsoluteTime(): PrivateScope, Public, HideBySig, SpecialName
    set_StartAbsoluteTime(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_DeltaTicksPerQuarterNote(): PrivateScope, Public, HideBySig, SpecialName
    GetTrackEvents(Int32): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    AddTrack(): PrivateScope, Public, HideBySig
    AddTrack(IList`1): PrivateScope, Public, HideBySig
    RemoveTrack(Int32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    get_MidiFileType(): PrivateScope, Public, HideBySig, SpecialName
    set_MidiFileType(Int32): PrivateScope, Public, HideBySig, SpecialName
    AddEvent(MidiEvent, Int32): PrivateScope, Public, HideBySig
    PrepareForExport(): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Midi.MidiEventComparer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[NAudio.Midi.MidiEvent]
  Methods:
    Compare(MidiEvent, MidiEvent): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Midi.MidiFile: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 FileFormat 'get ' : 
    NAudio.Midi.MidiEventCollection Events 'get ' : 
    Int32 Tracks 'get ' : 
    Int32 DeltaTicksPerQuarterNote 'get ' : 
  Methods:
    get_FileFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_Events(): PrivateScope, Public, HideBySig, SpecialName
    get_Tracks(): PrivateScope, Public, HideBySig, SpecialName
    get_DeltaTicksPerQuarterNote(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Export(String, MidiEventCollection): PrivateScope, Public, Static, HideBySig
Class NAudio.Midi.MidiIn: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 NumberOfDevices 'get ' : 
  Events:
    System.EventHandler`1[NAudio.Midi.MidiInMessageEventArgs] MessageReceived: 
    System.EventHandler`1[NAudio.Midi.MidiInMessageEventArgs] ErrorReceived: 
  Methods:
    add_MessageReceived(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_MessageReceived(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    add_ErrorReceived(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_ErrorReceived(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfDevices(): PrivateScope, Public, Static, HideBySig, SpecialName
    Close(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Start(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    DeviceInfo(Int32): PrivateScope, Public, Static, HideBySig
Struct NAudio.Midi.MidiInCapabilities: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, AutoClass, BeforeFieldInit
  :System.ValueType
  Properties:
    NAudio.Manufacturers Manufacturer 'get ' : 
    Int32 ProductId 'get ' : 
    System.String ProductName 'get ' : 
  Methods:
    get_Manufacturer(): PrivateScope, Public, HideBySig, SpecialName
    get_ProductId(): PrivateScope, Public, HideBySig, SpecialName
    get_ProductName(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Midi.MidiInterop: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 CALLBACK_FUNCTION = 196608 : Public, Static, Literal, HasDefault
    Int32 CALLBACK_NULL = 0 : Public, Static, Literal, HasDefault
  Methods:
    midiOutGetVolume(IntPtr, Int32&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutLongMsg(IntPtr, MIDIHDR&(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutMessage(IntPtr, Int32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutOpen(IntPtr&(Out), IntPtr, MidiOutCallback, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutPrepareHeader(IntPtr, MIDIHDR&(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutReset(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutSetVolume(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutShortMsg(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutUnprepareHeader(IntPtr, MIDIHDR&(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiStreamClose(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiStreamOpen(IntPtr&(Out), IntPtr, Int32, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiStreamOut(IntPtr, MIDIHDR&(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiStreamPause(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiStreamPosition(IntPtr, MMTIME&(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiStreamProperty(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiStreamRestart(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiStreamStop(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiConnect(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiDisconnect(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInAddBuffer(IntPtr, MIDIHDR&(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInClose(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInGetDevCaps(IntPtr, MidiInCapabilities&(Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInGetErrorText(Int32, String, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInGetID(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInGetNumDevs(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInMessage(IntPtr, Int32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInOpen(IntPtr&(Out), IntPtr, MidiInCallback, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInOpenWindow(IntPtr&(Out), IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInPrepareHeader(IntPtr, MIDIHDR&(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInReset(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInStart(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInStop(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiInUnprepareHeader(IntPtr, MIDIHDR&(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutCacheDrumPatches(IntPtr, Int32, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutCachePatches(IntPtr, Int32, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutClose(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutGetDevCaps(IntPtr, MidiOutCapabilities&(Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutGetErrorText(IntPtr, String, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutGetID(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    midiOutGetNumDevs(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class NAudio.Midi.MidiMessage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 RawData 'get ' : 
  Methods:
    StartNote(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    StopNote(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    ChangePatch(Int32, Int32): PrivateScope, Public, Static, HideBySig
    ChangeControl(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    get_RawData(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Midi.MidiOut: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 NumberOfDevices 'get ' : 
    Int32 Volume 'get set' : 
  Methods:
    get_NumberOfDevices(): PrivateScope, Public, Static, HideBySig, SpecialName
    DeviceInfo(Int32): PrivateScope, Public, Static, HideBySig
    Close(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Int32): PrivateScope, Public, HideBySig, SpecialName
    Reset(): PrivateScope, Public, HideBySig
    SendDriverMessage(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Send(Int32): PrivateScope, Public, HideBySig
    SendBuffer(Byte[]): PrivateScope, Public, HideBySig
Struct NAudio.Midi.MidiOutCapabilities: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, AutoClass, BeforeFieldInit
  :System.ValueType
  Properties:
    NAudio.Manufacturers Manufacturer 'get ' : 
    Int16 ProductId 'get ' : 
    System.String ProductName 'get ' : 
    Int32 Voices 'get ' : 
    Int32 Notes 'get ' : 
    Boolean SupportsAllChannels 'get ' : 
    Boolean SupportsPatchCaching 'get ' : 
    Boolean SupportsSeparateLeftAndRightVolume 'get ' : 
    Boolean SupportsMidiStreamOut 'get ' : 
    Boolean SupportsVolumeControl 'get ' : 
    NAudio.Midi.MidiOutTechnology Technology 'get ' : 
  Methods:
    get_Manufacturer(): PrivateScope, Public, HideBySig, SpecialName
    get_ProductId(): PrivateScope, Public, HideBySig, SpecialName
    get_ProductName(): PrivateScope, Public, HideBySig, SpecialName
    get_Voices(): PrivateScope, Public, HideBySig, SpecialName
    get_Notes(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportsAllChannels(): PrivateScope, Public, HideBySig, SpecialName
    SupportsChannel(Int32): PrivateScope, Public, HideBySig
    get_SupportsPatchCaching(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportsSeparateLeftAndRightVolume(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportsMidiStreamOut(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportsVolumeControl(): PrivateScope, Public, HideBySig, SpecialName
    get_Technology(): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.Midi.MidiOutTechnology: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Midi.MidiOutTechnology MidiPort = 1 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiOutTechnology Synth = 2 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiOutTechnology SquareWaveSynth = 3 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiOutTechnology FMSynth = 4 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiOutTechnology MidiMapper = 5 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiOutTechnology WaveTableSynth = 6 : Public, Static, Literal, HasDefault
    NAudio.Midi.MidiOutTechnology SoftwareSynth = 7 : Public, Static, Literal, HasDefault
Class NAudio.Midi.NoteEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MidiEvent
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, Int32, NAudio.Midi.MidiCommandCode, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NoteNumber 'get set' : 
    Int32 Velocity 'get set' : 
    System.String NoteName 'get ' : 
  Methods:
    GetAsShortMessage(): PrivateScope, Public, Virtual, HideBySig
    get_NoteNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NoteNumber(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Velocity(): PrivateScope, Public, HideBySig, SpecialName
    set_Velocity(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NoteName(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Midi.NoteOnEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.NoteEvent
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Midi.NoteEvent OffEvent 'get set' : 
    Int32 NoteNumber 'get set' : 
    Int32 Channel 'get set' : 
    Int32 NoteLength 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig
    get_OffEvent(): PrivateScope, Public, HideBySig, SpecialName
    set_OffEvent(NoteEvent): PrivateScope, Public, HideBySig, SpecialName
    get_NoteNumber(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_NoteNumber(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Channel(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Channel(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_NoteLength(): PrivateScope, Public, HideBySig, SpecialName
    set_NoteLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Midi.PatchChangeEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MidiEvent
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Patch 'get set' : 
  Methods:
    GetPatchName(Int32): PrivateScope, Public, Static, HideBySig
    get_Patch(): PrivateScope, Public, HideBySig, SpecialName
    set_Patch(Int32): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetAsShortMessage(): PrivateScope, Public, Virtual, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Midi.PitchWheelChangeEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MidiEvent
    Void .ctor(System.IO.BinaryReader): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Pitch 'get set' : 
  Methods:
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Pitch(): PrivateScope, Public, HideBySig, SpecialName
    set_Pitch(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetAsShortMessage(): PrivateScope, Public, Virtual, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Midi.SequencerSpecificEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MetaEvent
    Void .ctor(System.IO.BinaryReader, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Data 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    set_Data(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Midi.SmpteOffsetEvent: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NAudio.Midi.MetaEvent
    Void .ctor(Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Hours 'get ' : 
    Int32 Minutes 'get ' : 
    Int32 Seconds 'get ' : 
    Int32 Frames 'get ' : 
    Int32 SubFrames 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig
    get_Hours(): PrivateScope, Public, HideBySig, SpecialName
    get_Minutes(): PrivateScope, Public, HideBySig, SpecialName
    get_Seconds(): PrivateScope, Public, HideBySig, SpecialName
    get_Frames(): PrivateScope, Public, HideBySig, SpecialName
    get_SubFrames(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Midi.SysexEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MidiEvent
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadSysexEvent(BinaryReader): PrivateScope, Public, Static, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Midi.TempoEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MetaEvent
    Void .ctor(System.IO.BinaryReader, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 MicrosecondsPerQuarterNote 'get set' : 
    Double Tempo 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_MicrosecondsPerQuarterNote(): PrivateScope, Public, HideBySig, SpecialName
    set_MicrosecondsPerQuarterNote(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Tempo(): PrivateScope, Public, HideBySig, SpecialName
    set_Tempo(Double): PrivateScope, Public, HideBySig, SpecialName
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Midi.TextEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MetaEvent
    Void .ctor(System.IO.BinaryReader, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, NAudio.Midi.MetaEventType, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Text 'get set' : 
    Byte[] Data 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    set_Data(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Midi.TimeSignatureEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MetaEvent
    Void .ctor(System.IO.BinaryReader, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Numerator 'get ' : 
    Int32 Denominator 'get ' : 
    Int32 TicksInMetronomeClick 'get ' : 
    Int32 No32ndNotesInQuarterNote 'get ' : 
    System.String TimeSignature 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig
    get_Numerator(): PrivateScope, Public, HideBySig, SpecialName
    get_Denominator(): PrivateScope, Public, HideBySig, SpecialName
    get_TicksInMetronomeClick(): PrivateScope, Public, HideBySig, SpecialName
    get_No32ndNotesInQuarterNote(): PrivateScope, Public, HideBySig, SpecialName
    get_TimeSignature(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.Midi.TrackSequenceNumberEvent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :NAudio.Midi.MetaEvent
    Void .ctor(UInt16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.BinaryReader, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Export(Int64&, BinaryWriter): PrivateScope, Public, Virtual, HideBySig
Class NAudio.MediaFoundation.AudioSubtypes: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Guid MFAudioFormat_AAC : Public, Static, InitOnly
    System.Guid MFAudioFormat_ADTS : Public, Static, InitOnly
    System.Guid MFAudioFormat_Dolby_AC3_SPDIF : Public, Static, InitOnly
    System.Guid MFAudioFormat_DRM : Public, Static, InitOnly
    System.Guid MFAudioFormat_DTS : Public, Static, InitOnly
    System.Guid MFAudioFormat_Float : Public, Static, InitOnly
    System.Guid MFAudioFormat_MP3 : Public, Static, InitOnly
    System.Guid MFAudioFormat_MPEG : Public, Static, InitOnly
    System.Guid MFAudioFormat_MSP1 : Public, Static, InitOnly
    System.Guid MFAudioFormat_PCM : Public, Static, InitOnly
    System.Guid MFAudioFormat_WMASPDIF : Public, Static, InitOnly
    System.Guid MFAudioFormat_WMAudio_Lossless : Public, Static, InitOnly
    System.Guid MFAudioFormat_WMAudioV8 : Public, Static, InitOnly
    System.Guid MFAudioFormat_WMAudioV9 : Public, Static, InitOnly
    System.Guid MFAudioFormat_Dolby_AC3 : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_RAW_AAC1 : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_DVM : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_DOLBY_DDPLUS : Public, Static, InitOnly
    System.Guid KSDATAFORMAT_SUBTYPE_MULAW : Public, Static, InitOnly
    System.Guid KSDATAFORMAT_SUBTYPE_ADPCM : Public, Static, InitOnly
    System.Guid KSDATAFORMAT_SUBTYPE_IEC61937_DOLBY_DIGITAL_PLUS : Public, Static, InitOnly
    System.Guid MEDIASUBTYPE_MSAUDIO1 : Public, Static, InitOnly
    System.Guid ImaAdpcm : Public, Static, InitOnly
    System.Guid WMMEDIASUBTYPE_WMSP2 : Public, Static, InitOnly
Interface NAudio.MediaFoundation.IMFReadWriteClassFactory: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, Import
  Methods:
    CreateInstanceFromURL(Guid(In, HasFieldMarshal), String(In, HasFieldMarshal), IMFAttributes(In, HasFieldMarshal), Guid(In, HasFieldMarshal), Object&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateInstanceFromObject(Guid(In, HasFieldMarshal), Object(In, HasFieldMarshal), IMFAttributes(In, HasFieldMarshal), Guid(In, HasFieldMarshal), Object&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NAudio.MediaFoundation.MFReadWriteClassFactory: AutoLayout, AnsiClass, Class, Public, Import, BeforeFieldInit
  :System.__ComObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class NAudio.MediaFoundation.MediaFoundationErrors: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 MF_E_PLATFORM_NOT_INITIALIZED = -1072875856 : Public, Static, Literal, HasDefault
    Int32 MF_E_BUFFERTOOSMALL = -1072875855 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALIDREQUEST = -1072875854 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALIDSTREAMNUMBER = -1072875853 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALIDMEDIATYPE = -1072875852 : Public, Static, Literal, HasDefault
    Int32 MF_E_NOTACCEPTING = -1072875851 : Public, Static, Literal, HasDefault
    Int32 MF_E_NOT_INITIALIZED = -1072875850 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNSUPPORTED_REPRESENTATION = -1072875849 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_MORE_TYPES = -1072875847 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNSUPPORTED_SERVICE = -1072875846 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNEXPECTED = -1072875845 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALIDNAME = -1072875844 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALIDTYPE = -1072875843 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALID_FILE_FORMAT = -1072875842 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALIDINDEX = -1072875841 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALID_TIMESTAMP = -1072875840 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNSUPPORTED_SCHEME = -1072875837 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNSUPPORTED_BYTESTREAM_TYPE = -1072875836 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNSUPPORTED_TIME_FORMAT = -1072875835 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_SAMPLE_TIMESTAMP = -1072875832 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_SAMPLE_DURATION = -1072875831 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALID_STREAM_DATA = -1072875829 : Public, Static, Literal, HasDefault
    Int32 MF_E_RT_UNAVAILABLE = -1072875825 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNSUPPORTED_RATE = -1072875824 : Public, Static, Literal, HasDefault
    Int32 MF_E_THINNING_UNSUPPORTED = -1072875823 : Public, Static, Literal, HasDefault
    Int32 MF_E_REVERSE_UNSUPPORTED = -1072875822 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNSUPPORTED_RATE_TRANSITION = -1072875821 : Public, Static, Literal, HasDefault
    Int32 MF_E_RATE_CHANGE_PREEMPTED = -1072875820 : Public, Static, Literal, HasDefault
    Int32 MF_E_NOT_FOUND = -1072875819 : Public, Static, Literal, HasDefault
    Int32 MF_E_NOT_AVAILABLE = -1072875818 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_CLOCK = -1072875817 : Public, Static, Literal, HasDefault
    Int32 MF_S_MULTIPLE_BEGIN = 866008 : Public, Static, Literal, HasDefault
    Int32 MF_E_MULTIPLE_BEGIN = -1072875815 : Public, Static, Literal, HasDefault
    Int32 MF_E_MULTIPLE_SUBSCRIBERS = -1072875814 : Public, Static, Literal, HasDefault
    Int32 MF_E_TIMER_ORPHANED = -1072875813 : Public, Static, Literal, HasDefault
    Int32 MF_E_STATE_TRANSITION_PENDING = -1072875812 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNSUPPORTED_STATE_TRANSITION = -1072875811 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNRECOVERABLE_ERROR_OCCURRED = -1072875810 : Public, Static, Literal, HasDefault
    Int32 MF_E_SAMPLE_HAS_TOO_MANY_BUFFERS = -1072875809 : Public, Static, Literal, HasDefault
    Int32 MF_E_SAMPLE_NOT_WRITABLE = -1072875808 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALID_KEY = -1072875806 : Public, Static, Literal, HasDefault
    Int32 MF_E_BAD_STARTUP_VERSION = -1072875805 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNSUPPORTED_CAPTION = -1072875804 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALID_POSITION = -1072875803 : Public, Static, Literal, HasDefault
    Int32 MF_E_ATTRIBUTENOTFOUND = -1072875802 : Public, Static, Literal, HasDefault
    Int32 MF_E_PROPERTY_TYPE_NOT_ALLOWED = -1072875801 : Public, Static, Literal, HasDefault
    Int32 MF_E_PROPERTY_TYPE_NOT_SUPPORTED = -1072875800 : Public, Static, Literal, HasDefault
    Int32 MF_E_PROPERTY_EMPTY = -1072875799 : Public, Static, Literal, HasDefault
    Int32 MF_E_PROPERTY_NOT_EMPTY = -1072875798 : Public, Static, Literal, HasDefault
    Int32 MF_E_PROPERTY_VECTOR_NOT_ALLOWED = -1072875797 : Public, Static, Literal, HasDefault
    Int32 MF_E_PROPERTY_VECTOR_REQUIRED = -1072875796 : Public, Static, Literal, HasDefault
    Int32 MF_E_OPERATION_CANCELLED = -1072875795 : Public, Static, Literal, HasDefault
    Int32 MF_E_BYTESTREAM_NOT_SEEKABLE = -1072875794 : Public, Static, Literal, HasDefault
    Int32 MF_E_DISABLED_IN_SAFEMODE = -1072875793 : Public, Static, Literal, HasDefault
    Int32 MF_E_CANNOT_PARSE_BYTESTREAM = -1072875792 : Public, Static, Literal, HasDefault
    Int32 MF_E_SOURCERESOLVER_MUTUALLY_EXCLUSIVE_FLAGS = -1072875791 : Public, Static, Literal, HasDefault
    Int32 MF_E_MEDIAPROC_WRONGSTATE = -1072875790 : Public, Static, Literal, HasDefault
    Int32 MF_E_RT_THROUGHPUT_NOT_AVAILABLE = -1072875789 : Public, Static, Literal, HasDefault
    Int32 MF_E_RT_TOO_MANY_CLASSES = -1072875788 : Public, Static, Literal, HasDefault
    Int32 MF_E_RT_WOULDBLOCK = -1072875787 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_BITPUMP = -1072875786 : Public, Static, Literal, HasDefault
    Int32 MF_E_RT_OUTOFMEMORY = -1072875785 : Public, Static, Literal, HasDefault
    Int32 MF_E_RT_WORKQUEUE_CLASS_NOT_SPECIFIED = -1072875784 : Public, Static, Literal, HasDefault
    Int32 MF_E_INSUFFICIENT_BUFFER = -1072860816 : Public, Static, Literal, HasDefault
    Int32 MF_E_CANNOT_CREATE_SINK = -1072875782 : Public, Static, Literal, HasDefault
    Int32 MF_E_BYTESTREAM_UNKNOWN_LENGTH = -1072875781 : Public, Static, Literal, HasDefault
    Int32 MF_E_SESSION_PAUSEWHILESTOPPED = -1072875780 : Public, Static, Literal, HasDefault
    Int32 MF_S_ACTIVATE_REPLACED = 866045 : Public, Static, Literal, HasDefault
    Int32 MF_E_FORMAT_CHANGE_NOT_SUPPORTED = -1072875778 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALID_WORKQUEUE = -1072875777 : Public, Static, Literal, HasDefault
    Int32 MF_E_DRM_UNSUPPORTED = -1072875776 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNAUTHORIZED = -1072875775 : Public, Static, Literal, HasDefault
    Int32 MF_E_OUT_OF_RANGE = -1072875774 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALID_CODEC_MERIT = -1072875773 : Public, Static, Literal, HasDefault
    Int32 MF_E_HW_MFT_FAILED_START_STREAMING = -1072875772 : Public, Static, Literal, HasDefault
    Int32 MF_S_ASF_PARSEINPROGRESS = 1074608792 : Public, Static, Literal, HasDefault
    Int32 MF_E_ASF_PARSINGINCOMPLETE = -1072874856 : Public, Static, Literal, HasDefault
    Int32 MF_E_ASF_MISSINGDATA = -1072874855 : Public, Static, Literal, HasDefault
    Int32 MF_E_ASF_INVALIDDATA = -1072874854 : Public, Static, Literal, HasDefault
    Int32 MF_E_ASF_OPAQUEPACKET = -1072874853 : Public, Static, Literal, HasDefault
    Int32 MF_E_ASF_NOINDEX = -1072874852 : Public, Static, Literal, HasDefault
    Int32 MF_E_ASF_OUTOFRANGE = -1072874851 : Public, Static, Literal, HasDefault
    Int32 MF_E_ASF_INDEXNOTLOADED = -1072874850 : Public, Static, Literal, HasDefault
    Int32 MF_E_ASF_TOO_MANY_PAYLOADS = -1072874849 : Public, Static, Literal, HasDefault
    Int32 MF_E_ASF_UNSUPPORTED_STREAM_TYPE = -1072874848 : Public, Static, Literal, HasDefault
    Int32 MF_E_ASF_DROPPED_PACKET = -1072874847 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_EVENTS_AVAILABLE = -1072873856 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALID_STATE_TRANSITION = -1072873854 : Public, Static, Literal, HasDefault
    Int32 MF_E_END_OF_STREAM = -1072873852 : Public, Static, Literal, HasDefault
    Int32 MF_E_SHUTDOWN = -1072873851 : Public, Static, Literal, HasDefault
    Int32 MF_E_MP3_NOTFOUND = -1072873850 : Public, Static, Literal, HasDefault
    Int32 MF_E_MP3_OUTOFDATA = -1072873849 : Public, Static, Literal, HasDefault
    Int32 MF_E_MP3_NOTMP3 = -1072873848 : Public, Static, Literal, HasDefault
    Int32 MF_E_MP3_NOTSUPPORTED = -1072873847 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_DURATION = -1072873846 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALID_FORMAT = -1072873844 : Public, Static, Literal, HasDefault
    Int32 MF_E_PROPERTY_NOT_FOUND = -1072873843 : Public, Static, Literal, HasDefault
    Int32 MF_E_PROPERTY_READ_ONLY = -1072873842 : Public, Static, Literal, HasDefault
    Int32 MF_E_PROPERTY_NOT_ALLOWED = -1072873841 : Public, Static, Literal, HasDefault
    Int32 MF_E_MEDIA_SOURCE_NOT_STARTED = -1072873839 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNSUPPORTED_FORMAT = -1072873832 : Public, Static, Literal, HasDefault
    Int32 MF_E_MP3_BAD_CRC = -1072873831 : Public, Static, Literal, HasDefault
    Int32 MF_E_NOT_PROTECTED = -1072873830 : Public, Static, Literal, HasDefault
    Int32 MF_E_MEDIA_SOURCE_WRONGSTATE = -1072873829 : Public, Static, Literal, HasDefault
    Int32 MF_E_MEDIA_SOURCE_NO_STREAMS_SELECTED = -1072873828 : Public, Static, Literal, HasDefault
    Int32 MF_E_CANNOT_FIND_KEYFRAME_SAMPLE = -1072873827 : Public, Static, Literal, HasDefault
    Int32 MF_E_NETWORK_RESOURCE_FAILURE = -1072872856 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_WRITE = -1072872855 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_READ = -1072872854 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_REQUIRE_NETWORK = -1072872853 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_REQUIRE_ASYNC = -1072872852 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_BWLEVEL_NOT_SUPPORTED = -1072872851 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_STREAMGROUPS_NOT_SUPPORTED = -1072872850 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_MANUALSS_NOT_SUPPORTED = -1072872849 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_INVALID_PRESENTATION_DESCRIPTOR = -1072872848 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_CACHESTREAM_NOT_FOUND = -1072872847 : Public, Static, Literal, HasDefault
    Int32 MF_I_MANUAL_PROXY = 1074610802 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_REQUIRE_INPUT = -1072872844 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_REDIRECT = -1072872843 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_REDIRECT_TO_PROXY = -1072872842 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_TOO_MANY_REDIRECTS = -1072872841 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_TIMEOUT = -1072872840 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_CLIENT_CLOSE = -1072872839 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_BAD_CONTROL_DATA = -1072872838 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_INCOMPATIBLE_SERVER = -1072872837 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_UNSAFE_URL = -1072872836 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_CACHE_NO_DATA = -1072872835 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_EOL = -1072872834 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_BAD_REQUEST = -1072872833 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_INTERNAL_SERVER_ERROR = -1072872832 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_SESSION_NOT_FOUND = -1072872831 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_NOCONNECTION = -1072872830 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_CONNECTION_FAILURE = -1072872829 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_INCOMPATIBLE_PUSHSERVER = -1072872828 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_SERVER_ACCESSDENIED = -1072872827 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_PROXY_ACCESSDENIED = -1072872826 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_CANNOTCONNECT = -1072872825 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_INVALID_PUSH_TEMPLATE = -1072872824 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_INVALID_PUSH_PUBLISHING_POINT = -1072872823 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_BUSY = -1072872822 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_RESOURCE_GONE = -1072872821 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_ERROR_FROM_PROXY = -1072872820 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_PROXY_TIMEOUT = -1072872819 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_SERVER_UNAVAILABLE = -1072872818 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_TOO_MUCH_DATA = -1072872817 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_SESSION_INVALID = -1072872816 : Public, Static, Literal, HasDefault
    Int32 MF_E_OFFLINE_MODE = -1072872815 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_UDP_BLOCKED = -1072872814 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_UNSUPPORTED_CONFIGURATION = -1072872813 : Public, Static, Literal, HasDefault
    Int32 MF_E_NET_PROTOCOL_DISABLED = -1072872812 : Public, Static, Literal, HasDefault
    Int32 MF_E_ALREADY_INITIALIZED = -1072871856 : Public, Static, Literal, HasDefault
    Int32 MF_E_BANDWIDTH_OVERRUN = -1072871855 : Public, Static, Literal, HasDefault
    Int32 MF_E_LATE_SAMPLE = -1072871854 : Public, Static, Literal, HasDefault
    Int32 MF_E_FLUSH_NEEDED = -1072871853 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALID_PROFILE = -1072871852 : Public, Static, Literal, HasDefault
    Int32 MF_E_INDEX_NOT_COMMITTED = -1072871851 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_INDEX = -1072871850 : Public, Static, Literal, HasDefault
    Int32 MF_E_CANNOT_INDEX_IN_PLACE = -1072871849 : Public, Static, Literal, HasDefault
    Int32 MF_E_MISSING_ASF_LEAKYBUCKET = -1072871848 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALID_ASF_STREAMID = -1072871847 : Public, Static, Literal, HasDefault
    Int32 MF_E_STREAMSINK_REMOVED = -1072870856 : Public, Static, Literal, HasDefault
    Int32 MF_E_STREAMSINKS_OUT_OF_SYNC = -1072870854 : Public, Static, Literal, HasDefault
    Int32 MF_E_STREAMSINKS_FIXED = -1072870853 : Public, Static, Literal, HasDefault
    Int32 MF_E_STREAMSINK_EXISTS = -1072870852 : Public, Static, Literal, HasDefault
    Int32 MF_E_SAMPLEALLOCATOR_CANCELED = -1072870851 : Public, Static, Literal, HasDefault
    Int32 MF_E_SAMPLEALLOCATOR_EMPTY = -1072870850 : Public, Static, Literal, HasDefault
    Int32 MF_E_SINK_ALREADYSTOPPED = -1072870849 : Public, Static, Literal, HasDefault
    Int32 MF_E_ASF_FILESINK_BITRATE_UNKNOWN = -1072870848 : Public, Static, Literal, HasDefault
    Int32 MF_E_SINK_NO_STREAMS = -1072870847 : Public, Static, Literal, HasDefault
    Int32 MF_S_SINK_NOT_FINALIZED = 870978 : Public, Static, Literal, HasDefault
    Int32 MF_E_METADATA_TOO_LONG = -1072870845 : Public, Static, Literal, HasDefault
    Int32 MF_E_SINK_NO_SAMPLES_PROCESSED = -1072870844 : Public, Static, Literal, HasDefault
    Int32 MF_E_VIDEO_REN_NO_PROCAMP_HW = -1072869856 : Public, Static, Literal, HasDefault
    Int32 MF_E_VIDEO_REN_NO_DEINTERLACE_HW = -1072869855 : Public, Static, Literal, HasDefault
    Int32 MF_E_VIDEO_REN_COPYPROT_FAILED = -1072869854 : Public, Static, Literal, HasDefault
    Int32 MF_E_VIDEO_REN_SURFACE_NOT_SHARED = -1072869853 : Public, Static, Literal, HasDefault
    Int32 MF_E_VIDEO_DEVICE_LOCKED = -1072869852 : Public, Static, Literal, HasDefault
    Int32 MF_E_NEW_VIDEO_DEVICE = -1072869851 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_VIDEO_SAMPLE_AVAILABLE = -1072869850 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_AUDIO_PLAYBACK_DEVICE = -1072869756 : Public, Static, Literal, HasDefault
    Int32 MF_E_AUDIO_PLAYBACK_DEVICE_IN_USE = -1072869755 : Public, Static, Literal, HasDefault
    Int32 MF_E_AUDIO_PLAYBACK_DEVICE_INVALIDATED = -1072869754 : Public, Static, Literal, HasDefault
    Int32 MF_E_AUDIO_SERVICE_NOT_RUNNING = -1072869753 : Public, Static, Literal, HasDefault
    Int32 MF_E_TOPO_INVALID_OPTIONAL_NODE = -1072868850 : Public, Static, Literal, HasDefault
    Int32 MF_E_TOPO_CANNOT_FIND_DECRYPTOR = -1072868847 : Public, Static, Literal, HasDefault
    Int32 MF_E_TOPO_CODEC_NOT_FOUND = -1072868846 : Public, Static, Literal, HasDefault
    Int32 MF_E_TOPO_CANNOT_CONNECT = -1072868845 : Public, Static, Literal, HasDefault
    Int32 MF_E_TOPO_UNSUPPORTED = -1072868844 : Public, Static, Literal, HasDefault
    Int32 MF_E_TOPO_INVALID_TIME_ATTRIBUTES = -1072868843 : Public, Static, Literal, HasDefault
    Int32 MF_E_TOPO_LOOPS_IN_TOPOLOGY = -1072868842 : Public, Static, Literal, HasDefault
    Int32 MF_E_TOPO_MISSING_PRESENTATION_DESCRIPTOR = -1072868841 : Public, Static, Literal, HasDefault
    Int32 MF_E_TOPO_MISSING_STREAM_DESCRIPTOR = -1072868840 : Public, Static, Literal, HasDefault
    Int32 MF_E_TOPO_STREAM_DESCRIPTOR_NOT_SELECTED = -1072868839 : Public, Static, Literal, HasDefault
    Int32 MF_E_TOPO_MISSING_SOURCE = -1072868838 : Public, Static, Literal, HasDefault
    Int32 MF_E_TOPO_SINK_ACTIVATES_UNSUPPORTED = -1072868837 : Public, Static, Literal, HasDefault
    Int32 MF_E_SEQUENCER_UNKNOWN_SEGMENT_ID = -1072864852 : Public, Static, Literal, HasDefault
    Int32 MF_S_SEQUENCER_CONTEXT_CANCELED = 876973 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_SOURCE_IN_CACHE = -1072864850 : Public, Static, Literal, HasDefault
    Int32 MF_S_SEQUENCER_SEGMENT_AT_END_OF_STREAM = 876975 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_TYPE_NOT_SET = -1072861856 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_STREAM_CHANGE = -1072861855 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_INPUT_REMAINING = -1072861854 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_PROFILE_MISSING = -1072861853 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_PROFILE_INVALID_OR_CORRUPT = -1072861852 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_PROFILE_TRUNCATED = -1072861851 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_PROPERTY_PID_NOT_RECOGNIZED = -1072861850 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_PROPERTY_VARIANT_TYPE_WRONG = -1072861849 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_PROPERTY_NOT_WRITEABLE = -1072861848 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_PROPERTY_ARRAY_VALUE_WRONG_NUM_DIM = -1072861847 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_PROPERTY_VALUE_SIZE_WRONG = -1072861846 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_PROPERTY_VALUE_OUT_OF_RANGE = -1072861845 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_PROPERTY_VALUE_INCOMPATIBLE = -1072861844 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_OUTPUT_MEDIATYPE = -1072861843 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_INPUT_MEDIATYPE = -1072861842 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_MEDIATYPE_COMBINATION = -1072861841 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_CONFLICTS_WITH_OTHER_CURRENTLY_ENABLED_FEATURES = -1072861840 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_NEED_MORE_INPUT = -1072861838 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_NOT_POSSIBLE_FOR_CURRENT_SPKR_CONFIG = -1072861837 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_CANNOT_CHANGE_MEDIATYPE_WHILE_PROCESSING = -1072861836 : Public, Static, Literal, HasDefault
    Int32 MF_S_TRANSFORM_DO_NOT_PROPAGATE_EVENT = 879989 : Public, Static, Literal, HasDefault
    Int32 MF_E_UNSUPPORTED_D3D_TYPE = -1072861834 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_ASYNC_LOCKED = -1072861833 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSFORM_CANNOT_INITIALIZE_ACM_DRIVER = -1072861832 : Public, Static, Literal, HasDefault
    Int32 MF_E_LICENSE_INCORRECT_RIGHTS = -1072860856 : Public, Static, Literal, HasDefault
    Int32 MF_E_LICENSE_OUTOFDATE = -1072860855 : Public, Static, Literal, HasDefault
    Int32 MF_E_LICENSE_REQUIRED = -1072860854 : Public, Static, Literal, HasDefault
    Int32 MF_E_DRM_HARDWARE_INCONSISTENT = -1072860853 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_CONTENT_PROTECTION_MANAGER = -1072860852 : Public, Static, Literal, HasDefault
    Int32 MF_E_LICENSE_RESTORE_NO_RIGHTS = -1072860851 : Public, Static, Literal, HasDefault
    Int32 MF_E_BACKUP_RESTRICTED_LICENSE = -1072860850 : Public, Static, Literal, HasDefault
    Int32 MF_E_LICENSE_RESTORE_NEEDS_INDIVIDUALIZATION = -1072860849 : Public, Static, Literal, HasDefault
    Int32 MF_S_PROTECTION_NOT_REQUIRED = 880976 : Public, Static, Literal, HasDefault
    Int32 MF_E_COMPONENT_REVOKED = -1072860847 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRUST_DISABLED = -1072860846 : Public, Static, Literal, HasDefault
    Int32 MF_E_WMDRMOTA_NO_ACTION = -1072860845 : Public, Static, Literal, HasDefault
    Int32 MF_E_WMDRMOTA_ACTION_ALREADY_SET = -1072860844 : Public, Static, Literal, HasDefault
    Int32 MF_E_WMDRMOTA_DRM_HEADER_NOT_AVAILABLE = -1072860843 : Public, Static, Literal, HasDefault
    Int32 MF_E_WMDRMOTA_DRM_ENCRYPTION_SCHEME_NOT_SUPPORTED = -1072860842 : Public, Static, Literal, HasDefault
    Int32 MF_E_WMDRMOTA_ACTION_MISMATCH = -1072860841 : Public, Static, Literal, HasDefault
    Int32 MF_E_WMDRMOTA_INVALID_POLICY = -1072860840 : Public, Static, Literal, HasDefault
    Int32 MF_E_POLICY_UNSUPPORTED = -1072860839 : Public, Static, Literal, HasDefault
    Int32 MF_E_OPL_NOT_SUPPORTED = -1072860838 : Public, Static, Literal, HasDefault
    Int32 MF_E_TOPOLOGY_VERIFICATION_FAILED = -1072860837 : Public, Static, Literal, HasDefault
    Int32 MF_E_SIGNATURE_VERIFICATION_FAILED = -1072860836 : Public, Static, Literal, HasDefault
    Int32 MF_E_DEBUGGING_NOT_ALLOWED = -1072860835 : Public, Static, Literal, HasDefault
    Int32 MF_E_CODE_EXPIRED = -1072860834 : Public, Static, Literal, HasDefault
    Int32 MF_E_GRL_VERSION_TOO_LOW = -1072860833 : Public, Static, Literal, HasDefault
    Int32 MF_E_GRL_RENEWAL_NOT_FOUND = -1072860832 : Public, Static, Literal, HasDefault
    Int32 MF_E_GRL_EXTENSIBLE_ENTRY_NOT_FOUND = -1072860831 : Public, Static, Literal, HasDefault
    Int32 MF_E_KERNEL_UNTRUSTED = -1072860830 : Public, Static, Literal, HasDefault
    Int32 MF_E_PEAUTH_UNTRUSTED = -1072860829 : Public, Static, Literal, HasDefault
    Int32 MF_E_NON_PE_PROCESS = -1072860827 : Public, Static, Literal, HasDefault
    Int32 MF_E_REBOOT_REQUIRED = -1072860825 : Public, Static, Literal, HasDefault
    Int32 MF_S_WAIT_FOR_POLICY_SET = 881000 : Public, Static, Literal, HasDefault
    Int32 MF_S_VIDEO_DISABLED_WITH_UNKNOWN_SOFTWARE_OUTPUT = 881001 : Public, Static, Literal, HasDefault
    Int32 MF_E_GRL_INVALID_FORMAT = -1072860822 : Public, Static, Literal, HasDefault
    Int32 MF_E_GRL_UNRECOGNIZED_FORMAT = -1072860821 : Public, Static, Literal, HasDefault
    Int32 MF_E_ALL_PROCESS_RESTART_REQUIRED = -1072860820 : Public, Static, Literal, HasDefault
    Int32 MF_E_PROCESS_RESTART_REQUIRED = -1072860819 : Public, Static, Literal, HasDefault
    Int32 MF_E_USERMODE_UNTRUSTED = -1072860818 : Public, Static, Literal, HasDefault
    Int32 MF_E_PEAUTH_SESSION_NOT_STARTED = -1072860817 : Public, Static, Literal, HasDefault
    Int32 MF_E_PEAUTH_PUBLICKEY_REVOKED = -1072860815 : Public, Static, Literal, HasDefault
    Int32 MF_E_GRL_ABSENT = -1072860814 : Public, Static, Literal, HasDefault
    Int32 MF_S_PE_TRUSTED = 881011 : Public, Static, Literal, HasDefault
    Int32 MF_E_PE_UNTRUSTED = -1072860812 : Public, Static, Literal, HasDefault
    Int32 MF_E_PEAUTH_NOT_STARTED = -1072860811 : Public, Static, Literal, HasDefault
    Int32 MF_E_INCOMPATIBLE_SAMPLE_PROTECTION = -1072860810 : Public, Static, Literal, HasDefault
    Int32 MF_E_PE_SESSIONS_MAXED = -1072860809 : Public, Static, Literal, HasDefault
    Int32 MF_E_HIGH_SECURITY_LEVEL_CONTENT_NOT_ALLOWED = -1072860808 : Public, Static, Literal, HasDefault
    Int32 MF_E_TEST_SIGNED_COMPONENTS_NOT_ALLOWED = -1072860807 : Public, Static, Literal, HasDefault
    Int32 MF_E_ITA_UNSUPPORTED_ACTION = -1072860806 : Public, Static, Literal, HasDefault
    Int32 MF_E_ITA_ERROR_PARSING_SAP_PARAMETERS = -1072860805 : Public, Static, Literal, HasDefault
    Int32 MF_E_POLICY_MGR_ACTION_OUTOFBOUNDS = -1072860804 : Public, Static, Literal, HasDefault
    Int32 MF_E_BAD_OPL_STRUCTURE_FORMAT = -1072860803 : Public, Static, Literal, HasDefault
    Int32 MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_PROTECTION_GUID = -1072860802 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_PMP_HOST = -1072860801 : Public, Static, Literal, HasDefault
    Int32 MF_E_ITA_OPL_DATA_NOT_INITIALIZED = -1072860800 : Public, Static, Literal, HasDefault
    Int32 MF_E_ITA_UNRECOGNIZED_ANALOG_VIDEO_OUTPUT = -1072860799 : Public, Static, Literal, HasDefault
    Int32 MF_E_ITA_UNRECOGNIZED_DIGITAL_VIDEO_OUTPUT = -1072860798 : Public, Static, Literal, HasDefault
    Int32 MF_E_CLOCK_INVALID_CONTINUITY_KEY = -1072849856 : Public, Static, Literal, HasDefault
    Int32 MF_E_CLOCK_NO_TIME_SOURCE = -1072849855 : Public, Static, Literal, HasDefault
    Int32 MF_E_CLOCK_STATE_ALREADY_SET = -1072849854 : Public, Static, Literal, HasDefault
    Int32 MF_E_CLOCK_NOT_SIMPLE = -1072849853 : Public, Static, Literal, HasDefault
    Int32 MF_S_CLOCK_STOPPED = 891972 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_MORE_DROP_MODES = -1072848856 : Public, Static, Literal, HasDefault
    Int32 MF_E_NO_MORE_QUALITY_LEVELS = -1072848855 : Public, Static, Literal, HasDefault
    Int32 MF_E_DROPTIME_NOT_SUPPORTED = -1072848854 : Public, Static, Literal, HasDefault
    Int32 MF_E_QUALITYKNOB_WAIT_LONGER = -1072848853 : Public, Static, Literal, HasDefault
    Int32 MF_E_QM_INVALIDSTATE = -1072848852 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSCODE_NO_CONTAINERTYPE = -1072847856 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSCODE_PROFILE_NO_MATCHING_STREAMS = -1072847855 : Public, Static, Literal, HasDefault
    Int32 MF_E_TRANSCODE_NO_MATCHING_ENCODER = -1072847854 : Public, Static, Literal, HasDefault
    Int32 MF_E_ALLOCATOR_NOT_INITIALIZED = -1072846856 : Public, Static, Literal, HasDefault
    Int32 MF_E_ALLOCATOR_NOT_COMMITED = -1072846855 : Public, Static, Literal, HasDefault
    Int32 MF_E_ALLOCATOR_ALREADY_COMMITED = -1072846854 : Public, Static, Literal, HasDefault
    Int32 MF_E_STREAM_ERROR = -1072846853 : Public, Static, Literal, HasDefault
    Int32 MF_E_INVALID_STREAM_STATE = -1072846852 : Public, Static, Literal, HasDefault
    Int32 MF_E_HW_STREAM_NOT_CONNECTED = -1072846851 : Public, Static, Literal, HasDefault
Class NAudio.MediaFoundation.MediaTypes: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Guid MFMediaType_Default : Public, Static, InitOnly
    System.Guid MFMediaType_Audio : Public, Static, InitOnly
    System.Guid MFMediaType_Video : Public, Static, InitOnly
    System.Guid MFMediaType_Protected : Public, Static, InitOnly
    System.Guid MFMediaType_SAMI : Public, Static, InitOnly
    System.Guid MFMediaType_Script : Public, Static, InitOnly
    System.Guid MFMediaType_Image : Public, Static, InitOnly
    System.Guid MFMediaType_HTML : Public, Static, InitOnly
    System.Guid MFMediaType_Binary : Public, Static, InitOnly
    System.Guid MFMediaType_FileTransfer : Public, Static, InitOnly
Interface NAudio.MediaFoundation.IMFActivate: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, Import
  Interfaces:
    NAudio.MediaFoundation.IMFAttributes
  Methods:
    GetItem(Guid(In, HasFieldMarshal), IntPtr(In, Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetItemType(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CompareItem(Guid(In, HasFieldMarshal), IntPtr, Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Compare(IMFAttributes(HasFieldMarshal), Int32, Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUINT32(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUINT64(Guid(In, HasFieldMarshal), Int64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDouble(Guid(In, HasFieldMarshal), Double&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetGUID(Guid(In, HasFieldMarshal), Guid&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStringLength(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetString(Guid(In, HasFieldMarshal), StringBuilder(Out, HasFieldMarshal), Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAllocatedString(Guid(In, HasFieldMarshal), String&(Out, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlobSize(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlob(Guid(In, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAllocatedBlob(Guid(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUnknown(Guid(In, HasFieldMarshal), Guid(In, HasFieldMarshal), Object&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetItem(Guid(In, HasFieldMarshal), IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteItem(Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteAllItems(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUINT32(Guid(In, HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUINT64(Guid(In, HasFieldMarshal), Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDouble(Guid(In, HasFieldMarshal), Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetGUID(Guid(In, HasFieldMarshal), Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetString(Guid(In, HasFieldMarshal), String(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetBlob(Guid(In, HasFieldMarshal), Byte[](In, HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUnknown(Guid(HasFieldMarshal), Object(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LockStore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnlockStore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCount(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetItemByIndex(Int32, Guid&(Out), IntPtr(In, Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CopyAllItems(IMFAttributes(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ActivateObject(Guid(In, HasFieldMarshal), Object&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ShutdownObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DetachObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.MediaFoundation.IMFCollection: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, Import
  Methods:
    GetElementCount(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetElement(Int32(In), Object&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddElement(Object(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveElement(Int32(In), Object&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    InsertElementAt(Int32(In), Object(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveAllElements(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.MediaFoundation.IMFMediaEvent: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, Import
  Interfaces:
    NAudio.MediaFoundation.IMFAttributes
  Methods:
    GetItem(Guid(In, HasFieldMarshal), IntPtr(In, Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetItemType(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CompareItem(Guid(In, HasFieldMarshal), IntPtr, Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Compare(IMFAttributes(HasFieldMarshal), Int32, Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUINT32(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUINT64(Guid(In, HasFieldMarshal), Int64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDouble(Guid(In, HasFieldMarshal), Double&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetGUID(Guid(In, HasFieldMarshal), Guid&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStringLength(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetString(Guid(In, HasFieldMarshal), StringBuilder(Out, HasFieldMarshal), Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAllocatedString(Guid(In, HasFieldMarshal), String&(Out, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlobSize(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlob(Guid(In, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAllocatedBlob(Guid(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUnknown(Guid(In, HasFieldMarshal), Guid(In, HasFieldMarshal), Object&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetItem(Guid(In, HasFieldMarshal), IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteItem(Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteAllItems(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUINT32(Guid(In, HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUINT64(Guid(In, HasFieldMarshal), Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDouble(Guid(In, HasFieldMarshal), Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetGUID(Guid(In, HasFieldMarshal), Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetString(Guid(In, HasFieldMarshal), String(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetBlob(Guid(In, HasFieldMarshal), Byte[](In, HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUnknown(Guid(HasFieldMarshal), Object(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LockStore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnlockStore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCount(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetItemByIndex(Int32, Guid&(Out), IntPtr(In, Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CopyAllItems(IMFAttributes(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetType(MediaEventType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetExtendedType(Guid&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStatus(Int32&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetValue(IntPtr(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.MediaFoundation.IMFSinkWriter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, Import
  Methods:
    AddStream(IMFMediaType(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetInputMediaType(Int32(In), IMFMediaType(In, HasFieldMarshal), IMFAttributes(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginWriting(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteSample(Int32(In), IMFSample(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SendStreamTick(Int32(In), Int64(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PlaceMarker(Int32(In), IntPtr(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    NotifyEndOfSegment(Int32(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Flush(Int32(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoFinalize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetServiceForStream(Int32(In), Guid&(In), Guid&(In), IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStatistics(Int32(In), MF_SINK_WRITER_STATISTICS(In, Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.MediaFoundation.IMFTransform: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, Import
  Methods:
    GetStreamLimits(Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStreamCount(Int32&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStreamIds(Int32(In), IntPtr(In, Out), Int32(In), IntPtr(In, Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInputStreamInfo(Int32(In), MFT_INPUT_STREAM_INFO&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputStreamInfo(Int32(In), MFT_OUTPUT_STREAM_INFO&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAttributes(IMFAttributes&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInputStreamAttributes(Int32(In), IMFAttributes&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputStreamAttributes(Int32(In), IMFAttributes&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteInputStream(Int32(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddInputStreams(Int32(In), IntPtr(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInputAvailableType(Int32(In), Int32(In), IMFMediaType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputAvailableType(Int32(In), Int32(In), IMFMediaType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetInputType(Int32(In), IMFMediaType(In), _MFT_SET_TYPE_FLAGS(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetOutputType(Int32(In), IMFMediaType(In), _MFT_SET_TYPE_FLAGS(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInputCurrentType(Int32(In), IMFMediaType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputCurrentType(Int32(In), IMFMediaType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetInputStatus(Int32(In), _MFT_INPUT_STATUS_FLAGS&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetOutputStatus(Int32(In), _MFT_OUTPUT_STATUS_FLAGS&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetOutputBounds(Int64(In), Int64(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessEvent(Int32(In), IMFMediaEvent(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessMessage(MFT_MESSAGE_TYPE(In), IntPtr(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessInput(Int32(In), IMFSample(In), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ProcessOutput(_MFT_PROCESS_OUTPUT_FLAGS(In), Int32(In), MFT_OUTPUT_DATA_BUFFER[](In, Out, HasFieldMarshal), _MFT_PROCESS_OUTPUT_STATUS&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct NAudio.MediaFoundation.MediaEventType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.MediaFoundation.MediaEventType MEUnknown = 0 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEError = 1 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEExtendedType = 2 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MENonFatalError = 3 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionUnknown = 100 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionTopologySet = 101 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionTopologiesCleared = 102 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionStarted = 103 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionPaused = 104 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionStopped = 105 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionClosed = 106 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionEnded = 107 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionRateChanged = 108 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionScrubSampleComplete = 109 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionCapabilitiesChanged = 110 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionTopologyStatus = 111 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionNotifyPresentationTime = 112 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MENewPresentation = 113 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MELicenseAcquisitionStart = 114 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MELicenseAcquisitionCompleted = 115 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEIndividualizationStart = 116 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEIndividualizationCompleted = 117 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEEnablerProgress = 118 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEEnablerCompleted = 119 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEPolicyError = 120 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEPolicyReport = 121 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEBufferingStarted = 122 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEBufferingStopped = 123 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEConnectStart = 124 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEConnectEnd = 125 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEReconnectStart = 126 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEReconnectEnd = 127 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MERendererEvent = 128 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESessionStreamSinkFormatChanged = 129 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESourceUnknown = 200 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESourceStarted = 201 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamStarted = 202 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESourceSeeked = 203 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamSeeked = 204 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MENewStream = 205 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEUpdatedStream = 206 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESourceStopped = 207 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamStopped = 208 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESourcePaused = 209 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamPaused = 210 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEEndOfPresentation = 211 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEEndOfStream = 212 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEMediaSample = 213 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamTick = 214 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamThinMode = 215 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamFormatChanged = 216 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESourceRateChanged = 217 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEEndOfPresentationSegment = 218 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESourceCharacteristicsChanged = 219 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESourceRateChangeRequested = 220 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESourceMetadataChanged = 221 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESequencerSourceTopologyUpdated = 222 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESinkUnknown = 300 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamSinkStarted = 301 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamSinkStopped = 302 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamSinkPaused = 303 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamSinkRateChanged = 304 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamSinkRequestSample = 305 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamSinkMarker = 306 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamSinkPrerolled = 307 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamSinkScrubSampleComplete = 308 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamSinkFormatChanged = 309 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEStreamSinkDeviceChanged = 310 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEQualityNotify = 311 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MESinkInvalidated = 312 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEAudioSessionNameChanged = 313 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEAudioSessionVolumeChanged = 314 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEAudioSessionDeviceRemoved = 315 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEAudioSessionServerShutdown = 316 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEAudioSessionGroupingParamChanged = 317 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEAudioSessionIconChanged = 318 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEAudioSessionFormatChanged = 319 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEAudioSessionDisconnected = 320 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEAudioSessionExclusiveModeOverride = 321 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType METrustUnknown = 400 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEPolicyChanged = 401 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEContentProtectionMessage = 402 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEPolicySet = 403 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEWMDRMLicenseBackupCompleted = 500 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEWMDRMLicenseBackupProgress = 501 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEWMDRMLicenseRestoreCompleted = 502 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEWMDRMLicenseRestoreProgress = 503 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEWMDRMLicenseAcquisitionCompleted = 506 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEWMDRMIndividualizationCompleted = 508 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEWMDRMIndividualizationProgress = 513 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEWMDRMProximityCompleted = 514 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEWMDRMLicenseStoreCleaned = 515 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType MEWMDRMRevocationDownloadCompleted = 516 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType METransformUnknown = 600 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType METransformNeedInput = 601 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType METransformHaveOutput = 602 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType METransformDrainComplete = 603 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MediaEventType METransformMarker = 604 : Public, Static, Literal, HasDefault
Class NAudio.MediaFoundation.MediaFoundationAttributes: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Guid MF_TRANSFORM_ASYNC : Public, Static, InitOnly
    System.Guid MF_TRANSFORM_ASYNC_UNLOCK : Public, Static, InitOnly
    System.Guid MF_TRANSFORM_FLAGS_Attribute : Public, Static, InitOnly
    System.Guid MF_TRANSFORM_CATEGORY_Attribute : Public, Static, InitOnly
    System.Guid MFT_TRANSFORM_CLSID_Attribute : Public, Static, InitOnly
    System.Guid MFT_INPUT_TYPES_Attributes : Public, Static, InitOnly
    System.Guid MFT_OUTPUT_TYPES_Attributes : Public, Static, InitOnly
    System.Guid MFT_ENUM_HARDWARE_URL_Attribute : Public, Static, InitOnly
    System.Guid MFT_FRIENDLY_NAME_Attribute : Public, Static, InitOnly
    System.Guid MFT_CONNECTED_STREAM_ATTRIBUTE : Public, Static, InitOnly
    System.Guid MFT_CONNECTED_TO_HW_STREAM : Public, Static, InitOnly
    System.Guid MFT_PREFERRED_OUTPUTTYPE_Attribute : Public, Static, InitOnly
    System.Guid MFT_PROCESS_LOCAL_Attribute : Public, Static, InitOnly
    System.Guid MFT_PREFERRED_ENCODER_PROFILE : Public, Static, InitOnly
    System.Guid MFT_HW_TIMESTAMP_WITH_QPC_Attribute : Public, Static, InitOnly
    System.Guid MFT_FIELDOFUSE_UNLOCK_Attribute : Public, Static, InitOnly
    System.Guid MFT_CODEC_MERIT_Attribute : Public, Static, InitOnly
    System.Guid MFT_ENUM_TRANSCODE_ONLY_ATTRIBUTE : Public, Static, InitOnly
    System.Guid MF_PD_PMPHOST_CONTEXT : Public, Static, InitOnly
    System.Guid MF_PD_APP_CONTEXT : Public, Static, InitOnly
    System.Guid MF_PD_DURATION : Public, Static, InitOnly
    System.Guid MF_PD_TOTAL_FILE_SIZE : Public, Static, InitOnly
    System.Guid MF_PD_AUDIO_ENCODING_BITRATE : Public, Static, InitOnly
    System.Guid MF_PD_VIDEO_ENCODING_BITRATE : Public, Static, InitOnly
    System.Guid MF_PD_MIME_TYPE : Public, Static, InitOnly
    System.Guid MF_PD_LAST_MODIFIED_TIME : Public, Static, InitOnly
    System.Guid MF_PD_PLAYBACK_ELEMENT_ID : Public, Static, InitOnly
    System.Guid MF_PD_PREFERRED_LANGUAGE : Public, Static, InitOnly
    System.Guid MF_PD_PLAYBACK_BOUNDARY_TIME : Public, Static, InitOnly
    System.Guid MF_PD_AUDIO_ISVARIABLEBITRATE : Public, Static, InitOnly
    System.Guid MF_MT_MAJOR_TYPE : Public, Static, InitOnly
    System.Guid MF_MT_SUBTYPE : Public, Static, InitOnly
    System.Guid MF_MT_AUDIO_BLOCK_ALIGNMENT : Public, Static, InitOnly
    System.Guid MF_MT_AUDIO_AVG_BYTES_PER_SECOND : Public, Static, InitOnly
    System.Guid MF_MT_AUDIO_NUM_CHANNELS : Public, Static, InitOnly
    System.Guid MF_MT_AUDIO_SAMPLES_PER_SECOND : Public, Static, InitOnly
    System.Guid MF_MT_AUDIO_BITS_PER_SAMPLE : Public, Static, InitOnly
    System.Guid MF_READWRITE_ENABLE_HARDWARE_TRANSFORMS : Public, Static, InitOnly
    System.Guid MF_MT_USER_DATA : Public, Static, InitOnly
    System.Guid MF_MT_ALL_SAMPLES_INDEPENDENT : Public, Static, InitOnly
    System.Guid MF_MT_FIXED_SIZE_SAMPLES : Public, Static, InitOnly
    System.Guid MF_MT_AM_FORMAT_TYPE : Public, Static, InitOnly
    System.Guid MF_MT_AUDIO_PREFER_WAVEFORMATEX : Public, Static, InitOnly
    System.Guid MF_MT_COMPRESSED : Public, Static, InitOnly
    System.Guid MF_MT_AVG_BITRATE : Public, Static, InitOnly
    System.Guid MF_MT_AAC_PAYLOAD_TYPE : Public, Static, InitOnly
    System.Guid MF_MT_AAC_AUDIO_PROFILE_LEVEL_INDICATION : Public, Static, InitOnly
Class NAudio.MediaFoundation.MediaFoundationApi: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Startup(): PrivateScope, Public, Static, HideBySig
    EnumerateTransforms(Guid): PrivateScope, Public, Static, HideBySig
    Shutdown(): PrivateScope, Public, Static, HideBySig
    CreateMediaType(): PrivateScope, Public, Static, HideBySig
    CreateMediaTypeFromWaveFormat(WaveFormat): PrivateScope, Public, Static, HideBySig
    CreateMemoryBuffer(Int32): PrivateScope, Public, Static, HideBySig
    CreateSample(): PrivateScope, Public, Static, HideBySig
    CreateAttributes(Int32): PrivateScope, Public, Static, HideBySig
    CreateByteStream(Object): PrivateScope, Public, Static, HideBySig
    CreateSourceReaderFromByteStream(IMFByteStream): PrivateScope, Public, Static, HideBySig
Class NAudio.MediaFoundation.MediaFoundationInterop: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 MF_SOURCE_READER_ALL_STREAMS = -2 : Public, Static, Literal, HasDefault
    Int32 MF_SOURCE_READER_FIRST_AUDIO_STREAM = -3 : Public, Static, Literal, HasDefault
    Int32 MF_SOURCE_READER_FIRST_VIDEO_STREAM = -4 : Public, Static, Literal, HasDefault
    Int32 MF_SOURCE_READER_MEDIASOURCE = -1 : Public, Static, Literal, HasDefault
    Int32 MF_SDK_VERSION = 2 : Public, Static, Literal, HasDefault
    Int32 MF_API_VERSION = 112 : Public, Static, Literal, HasDefault
    Int32 MF_VERSION = 131184 : Public, Static, Literal, HasDefault
  Methods:
    MFStartup(Int32, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MFShutdown(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MFCreateMediaType(IMFMediaType&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    MFInitMediaTypeFromWaveFormatEx(IMFMediaType(In), WaveFormat(In), Int32(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    MFCreateWaveFormatExFromMFMediaType(IMFMediaType, IntPtr&, Int32&, Int32(Optional, HasDefault)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    MFCreateSourceReaderFromURL(String(In, HasFieldMarshal), IMFAttributes(In), IMFSourceReader&(Out, HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MFCreateSourceReaderFromByteStream(IMFByteStream(In), IMFAttributes(In), IMFSourceReader&(Out, HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MFCreateSinkWriterFromURL(String(In, HasFieldMarshal), IMFByteStream(In), IMFAttributes(In), IMFSinkWriter&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MFCreateMFByteStreamOnStream(IStream(In), IMFByteStream&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MFTEnumEx(Guid(In), _MFT_ENUM_FLAG(In), MFT_REGISTER_TYPE_INFO(In), MFT_REGISTER_TYPE_INFO(In), IntPtr&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    MFCreateSample(IMFSample&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    MFCreateMemoryBuffer(Int32, IMFMediaBuffer&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    MFCreateAttributes(IMFAttributes&(Out, HasFieldMarshal), Int32(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    MFTranscodeGetAudioOutputAvailableTypes(Guid(In, HasFieldMarshal), _MFT_ENUM_FLAG(In), IMFAttributes(In), IMFCollection&(Out, HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Interface NAudio.MediaFoundation.IMFAttributes: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, Import
  Methods:
    GetItem(Guid(In, HasFieldMarshal), IntPtr(In, Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetItemType(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CompareItem(Guid(In, HasFieldMarshal), IntPtr, Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Compare(IMFAttributes(HasFieldMarshal), Int32, Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUINT32(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUINT64(Guid(In, HasFieldMarshal), Int64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDouble(Guid(In, HasFieldMarshal), Double&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetGUID(Guid(In, HasFieldMarshal), Guid&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStringLength(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetString(Guid(In, HasFieldMarshal), StringBuilder(Out, HasFieldMarshal), Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAllocatedString(Guid(In, HasFieldMarshal), String&(Out, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlobSize(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlob(Guid(In, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAllocatedBlob(Guid(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUnknown(Guid(In, HasFieldMarshal), Guid(In, HasFieldMarshal), Object&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetItem(Guid(In, HasFieldMarshal), IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteItem(Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteAllItems(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUINT32(Guid(In, HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUINT64(Guid(In, HasFieldMarshal), Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDouble(Guid(In, HasFieldMarshal), Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetGUID(Guid(In, HasFieldMarshal), Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetString(Guid(In, HasFieldMarshal), String(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetBlob(Guid(In, HasFieldMarshal), Byte[](In, HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUnknown(Guid(HasFieldMarshal), Object(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LockStore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnlockStore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCount(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetItemByIndex(Int32, Guid&(Out), IntPtr(In, Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CopyAllItems(IMFAttributes(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.MediaFoundation.IMFByteStream: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, Import
  Methods:
    GetCapabilities(Int32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetLength(Int64&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCurrentPosition(Int64&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCurrentPosition(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsEndOfStream(Boolean&(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Read(IntPtr, Int32, Int32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginRead(IntPtr, Int32, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndRead(IntPtr, Int32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Write(IntPtr, Int32, Int32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BeginWrite(IntPtr, Int32, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndWrite(IntPtr, Int32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Seek(Int32, Int64, Int32, Int64&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Flush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.MediaFoundation.IMFMediaBuffer: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, Import
  Methods:
    Lock(IntPtr&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Unlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCurrentLength(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCurrentLength(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMaxLength(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.MediaFoundation.IMFMediaType: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, Import
  Interfaces:
    NAudio.MediaFoundation.IMFAttributes
  Methods:
    GetItem(Guid(In, HasFieldMarshal), IntPtr(In, Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetItemType(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CompareItem(Guid(In, HasFieldMarshal), IntPtr, Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Compare(IMFAttributes(HasFieldMarshal), Int32, Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUINT32(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUINT64(Guid(In, HasFieldMarshal), Int64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDouble(Guid(In, HasFieldMarshal), Double&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetGUID(Guid(In, HasFieldMarshal), Guid&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStringLength(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetString(Guid(In, HasFieldMarshal), StringBuilder(Out, HasFieldMarshal), Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAllocatedString(Guid(In, HasFieldMarshal), String&(Out, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlobSize(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlob(Guid(In, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAllocatedBlob(Guid(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUnknown(Guid(In, HasFieldMarshal), Guid(In, HasFieldMarshal), Object&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetItem(Guid(In, HasFieldMarshal), IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteItem(Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteAllItems(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUINT32(Guid(In, HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUINT64(Guid(In, HasFieldMarshal), Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDouble(Guid(In, HasFieldMarshal), Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetGUID(Guid(In, HasFieldMarshal), Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetString(Guid(In, HasFieldMarshal), String(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetBlob(Guid(In, HasFieldMarshal), Byte[](In, HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUnknown(Guid(HasFieldMarshal), Object(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LockStore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnlockStore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCount(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetItemByIndex(Int32, Guid&(Out), IntPtr(In, Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CopyAllItems(IMFAttributes(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMajorType(Guid&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsCompressedFormat(Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsEqual(IMFMediaType(In, HasFieldMarshal), Int32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetRepresentation(Guid(In), IntPtr&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FreeRepresentation(Guid(In), IntPtr(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.MediaFoundation.IMFSample: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, Import
  Interfaces:
    NAudio.MediaFoundation.IMFAttributes
  Methods:
    GetItem(Guid(In, HasFieldMarshal), IntPtr(In, Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetItemType(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CompareItem(Guid(In, HasFieldMarshal), IntPtr, Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Compare(IMFAttributes(HasFieldMarshal), Int32, Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUINT32(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUINT64(Guid(In, HasFieldMarshal), Int64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDouble(Guid(In, HasFieldMarshal), Double&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetGUID(Guid(In, HasFieldMarshal), Guid&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStringLength(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetString(Guid(In, HasFieldMarshal), StringBuilder(Out, HasFieldMarshal), Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAllocatedString(Guid(In, HasFieldMarshal), String&(Out, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlobSize(Guid(In, HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBlob(Guid(In, HasFieldMarshal), Byte[](Out, HasFieldMarshal), Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAllocatedBlob(Guid(In, HasFieldMarshal), IntPtr&(Out), Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetUnknown(Guid(In, HasFieldMarshal), Guid(In, HasFieldMarshal), Object&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetItem(Guid(In, HasFieldMarshal), IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteItem(Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeleteAllItems(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUINT32(Guid(In, HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUINT64(Guid(In, HasFieldMarshal), Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDouble(Guid(In, HasFieldMarshal), Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetGUID(Guid(In, HasFieldMarshal), Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetString(Guid(In, HasFieldMarshal), String(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetBlob(Guid(In, HasFieldMarshal), Byte[](In, HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetUnknown(Guid(HasFieldMarshal), Object(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LockStore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnlockStore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCount(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetItemByIndex(Int32, Guid&(Out), IntPtr(In, Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CopyAllItems(IMFAttributes(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSampleFlags(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetSampleFlags(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSampleTime(Int64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetSampleTime(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSampleDuration(Int64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetSampleDuration(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBufferCount(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBufferByIndex(Int32, IMFMediaBuffer&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ConvertToContiguousBuffer(IMFMediaBuffer&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddBuffer(IMFMediaBuffer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveBufferByIndex(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveAllBuffers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetTotalLength(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CopyToBuffer(IMFMediaBuffer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.MediaFoundation.IMFSourceReader: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, Import
  Methods:
    GetStreamSelection(Int32(In), Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetStreamSelection(Int32(In), Boolean(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNativeMediaType(Int32(In), Int32(In), IMFMediaType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCurrentMediaType(Int32(In), IMFMediaType&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCurrentMediaType(Int32(In), IntPtr, IMFMediaType(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCurrentPosition(Guid(In, HasFieldMarshal), IntPtr(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadSample(Int32(In), Int32(In), Int32&(Out), MF_SOURCE_READER_FLAG&(Out), UInt64&(Out), IMFSample&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Flush(Int32(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetServiceForStream(Int32(In), Guid(In, HasFieldMarshal), Guid(In, HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPresentationAttribute(Int32(In), Guid(In, HasFieldMarshal), IntPtr(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct NAudio.MediaFoundation.MF_SOURCE_READER_FLAG: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.MediaFoundation.MF_SOURCE_READER_FLAG None = 0 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MF_SOURCE_READER_FLAG MF_SOURCE_READERF_ERROR = 1 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MF_SOURCE_READER_FLAG MF_SOURCE_READERF_ENDOFSTREAM = 2 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MF_SOURCE_READER_FLAG MF_SOURCE_READERF_NEWSTREAM = 4 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MF_SOURCE_READER_FLAG MF_SOURCE_READERF_NATIVEMEDIATYPECHANGED = 16 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MF_SOURCE_READER_FLAG MF_SOURCE_READERF_CURRENTMEDIATYPECHANGED = 32 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MF_SOURCE_READER_FLAG MF_SOURCE_READERF_STREAMTICK = 256 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MF_SOURCE_READER_FLAG MF_SOURCE_READERF_ALLEFFECTSREMOVED = 512 : Public, Static, Literal, HasDefault
Class NAudio.MediaFoundation.MediaFoundationTransformCategories: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Guid VideoDecoder : Public, Static, InitOnly
    System.Guid VideoEncoder : Public, Static, InitOnly
    System.Guid VideoEffect : Public, Static, InitOnly
    System.Guid Multiplexer : Public, Static, InitOnly
    System.Guid Demultiplexer : Public, Static, InitOnly
    System.Guid AudioDecoder : Public, Static, InitOnly
    System.Guid AudioEncoder : Public, Static, InitOnly
    System.Guid AudioEffect : Public, Static, InitOnly
    System.Guid VideoProcessor : Public, Static, InitOnly
    System.Guid Other : Public, Static, InitOnly
Struct NAudio.MediaFoundation.MFT_INPUT_STREAM_INFO: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int64 hnsMaxLatency : Public
    NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS dwFlags : Public
    Int32 cbSize : Public
    Int32 cbMaxLookahead : Public
    Int32 cbAlignment : Public
Struct NAudio.MediaFoundation.MFT_OUTPUT_DATA_BUFFER: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 dwStreamID : Public
    NAudio.MediaFoundation.IMFSample pSample : Public
    NAudio.MediaFoundation._MFT_OUTPUT_DATA_BUFFER_FLAGS dwStatus : Public
    NAudio.MediaFoundation.IMFCollection pEvents : Public
Struct NAudio.MediaFoundation.MFT_OUTPUT_STREAM_INFO: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS dwFlags : Public
    Int32 cbSize : Public
    Int32 cbAlignment : Public
Struct NAudio.MediaFoundation.MFT_MESSAGE_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.MediaFoundation.MFT_MESSAGE_TYPE MFT_MESSAGE_COMMAND_FLUSH = 0 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MFT_MESSAGE_TYPE MFT_MESSAGE_COMMAND_DRAIN = 1 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MFT_MESSAGE_TYPE MFT_MESSAGE_SET_D3D_MANAGER = 2 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MFT_MESSAGE_TYPE MFT_MESSAGE_DROP_SAMPLES = 3 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MFT_MESSAGE_TYPE MFT_MESSAGE_COMMAND_TICK = 4 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MFT_MESSAGE_TYPE MFT_MESSAGE_NOTIFY_BEGIN_STREAMING = 268435456 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MFT_MESSAGE_TYPE MFT_MESSAGE_NOTIFY_END_STREAMING = 268435457 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MFT_MESSAGE_TYPE MFT_MESSAGE_NOTIFY_END_OF_STREAM = 268435458 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MFT_MESSAGE_TYPE MFT_MESSAGE_NOTIFY_START_OF_STREAM = 268435459 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation.MFT_MESSAGE_TYPE MFT_MESSAGE_COMMAND_MARKER = 536870912 : Public, Static, Literal, HasDefault
Class NAudio.MediaFoundation.MFT_REGISTER_TYPE_INFO: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Guid guidMajorType : Public
    System.Guid guidSubtype : Public
Class NAudio.MediaFoundation.MF_SINK_WRITER_STATISTICS: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 cb : Public
    Int64 llLastTimestampReceived : Public
    Int64 llLastTimestampEncoded : Public
    Int64 llLastTimestampProcessed : Public
    Int64 llLastStreamTickReceived : Public
    Int64 llLastSinkSampleRequest : Public
    Int64 qwNumSamplesReceived : Public
    Int64 qwNumSamplesEncoded : Public
    Int64 qwNumSamplesProcessed : Public
    Int64 qwNumStreamTicksReceived : Public
    Int32 dwByteCountQueued : Public
    Int64 qwByteCountProcessed : Public
    Int32 dwNumOutstandingSinkSampleRequests : Public
    Int32 dwAverageSampleRateReceived : Public
    Int32 dwAverageSampleRateEncoded : Public
    Int32 dwAverageSampleRateProcessed : Public
Struct NAudio.MediaFoundation._MFT_ENUM_FLAG: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.MediaFoundation._MFT_ENUM_FLAG None = 0 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_ENUM_FLAG MFT_ENUM_FLAG_SYNCMFT = 1 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_ENUM_FLAG MFT_ENUM_FLAG_ASYNCMFT = 2 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_ENUM_FLAG MFT_ENUM_FLAG_HARDWARE = 4 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_ENUM_FLAG MFT_ENUM_FLAG_FIELDOFUSE = 8 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_ENUM_FLAG MFT_ENUM_FLAG_LOCALMFT = 16 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_ENUM_FLAG MFT_ENUM_FLAG_TRANSCODE_ONLY = 32 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_ENUM_FLAG MFT_ENUM_FLAG_SORTANDFILTER = 64 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_ENUM_FLAG MFT_ENUM_FLAG_ALL = 63 : Public, Static, Literal, HasDefault
Struct NAudio.MediaFoundation._MFT_INPUT_STATUS_FLAGS: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.MediaFoundation._MFT_INPUT_STATUS_FLAGS None = 0 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_INPUT_STATUS_FLAGS MFT_INPUT_STATUS_ACCEPT_DATA = 1 : Public, Static, Literal, HasDefault
Struct NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS None = 0 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS MFT_INPUT_STREAM_WHOLE_SAMPLES = 1 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS MFT_INPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER = 2 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS MFT_INPUT_STREAM_FIXED_SAMPLE_SIZE = 4 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS MFT_INPUT_STREAM_HOLDS_BUFFERS = 8 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS MFT_INPUT_STREAM_DOES_NOT_ADDREF = 256 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS MFT_INPUT_STREAM_REMOVABLE = 512 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS MFT_INPUT_STREAM_OPTIONAL = 1024 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS MFT_INPUT_STREAM_PROCESSES_IN_PLACE = 2048 : Public, Static, Literal, HasDefault
Struct NAudio.MediaFoundation._MFT_OUTPUT_DATA_BUFFER_FLAGS: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.MediaFoundation._MFT_OUTPUT_DATA_BUFFER_FLAGS None = 0 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_DATA_BUFFER_FLAGS MFT_OUTPUT_DATA_BUFFER_INCOMPLETE = 16777216 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_DATA_BUFFER_FLAGS MFT_OUTPUT_DATA_BUFFER_FORMAT_CHANGE = 256 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_DATA_BUFFER_FLAGS MFT_OUTPUT_DATA_BUFFER_STREAM_END = 512 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_DATA_BUFFER_FLAGS MFT_OUTPUT_DATA_BUFFER_NO_SAMPLE = 768 : Public, Static, Literal, HasDefault
Struct NAudio.MediaFoundation._MFT_OUTPUT_STATUS_FLAGS: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.MediaFoundation._MFT_OUTPUT_STATUS_FLAGS None = 0 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_STATUS_FLAGS MFT_OUTPUT_STATUS_SAMPLE_READY = 1 : Public, Static, Literal, HasDefault
Struct NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS None = 0 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS MFT_OUTPUT_STREAM_WHOLE_SAMPLES = 1 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS MFT_OUTPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER = 2 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS MFT_OUTPUT_STREAM_FIXED_SAMPLE_SIZE = 4 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS MFT_OUTPUT_STREAM_DISCARDABLE = 8 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS MFT_OUTPUT_STREAM_OPTIONAL = 16 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS MFT_OUTPUT_STREAM_PROVIDES_SAMPLES = 256 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS MFT_OUTPUT_STREAM_CAN_PROVIDE_SAMPLES = 512 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS MFT_OUTPUT_STREAM_LAZY_READ = 1024 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS MFT_OUTPUT_STREAM_REMOVABLE = 2048 : Public, Static, Literal, HasDefault
Struct NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_FLAGS: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_FLAGS None = 0 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_FLAGS MFT_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER = 1 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_FLAGS MFT_PROCESS_OUTPUT_REGENERATE_LAST_OUTPUT = 2 : Public, Static, Literal, HasDefault
Struct NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_STATUS: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_STATUS None = 0 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_STATUS MFT_PROCESS_OUTPUT_STATUS_NEW_STREAMS = 256 : Public, Static, Literal, HasDefault
Struct NAudio.MediaFoundation._MFT_SET_TYPE_FLAGS: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.MediaFoundation._MFT_SET_TYPE_FLAGS None = 0 : Public, Static, Literal, HasDefault
    NAudio.MediaFoundation._MFT_SET_TYPE_FLAGS MFT_SET_TYPE_TEST_ONLY = 1 : Public, Static, Literal, HasDefault
Class NAudio.MediaFoundation.MediaType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.MediaFoundation.IMFMediaType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 SampleRate 'get set' : 
    Int32 ChannelCount 'get set' : 
    Int32 BitsPerSample 'get set' : 
    Int32 AverageBytesPerSecond 'get ' : 
    System.Guid SubType 'get set' : 
    System.Guid MajorType 'get set' : 
    NAudio.MediaFoundation.IMFMediaType MediaFoundationObject 'get ' : 
  Methods:
    TryGetUInt32(Guid, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_SampleRate(): PrivateScope, Public, HideBySig, SpecialName
    set_SampleRate(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ChannelCount(): PrivateScope, Public, HideBySig, SpecialName
    set_ChannelCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BitsPerSample(): PrivateScope, Public, HideBySig, SpecialName
    set_BitsPerSample(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AverageBytesPerSecond(): PrivateScope, Public, HideBySig, SpecialName
    get_SubType(): PrivateScope, Public, HideBySig, SpecialName
    set_SubType(Guid): PrivateScope, Public, HideBySig, SpecialName
    get_MajorType(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorType(Guid): PrivateScope, Public, HideBySig, SpecialName
    get_MediaFoundationObject(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.MediaFoundation.MediaFoundationTransform: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(NAudio.Wave.IWaveProvider, NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveProvider
    System.IDisposable
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_WaveFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Read(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reposition(): PrivateScope, Public, HideBySig
Class NAudio.FileFormats.Mp3.DmoMp3FrameDecompressor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.Wave.WaveFormat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IMp3FrameDecompressor
    System.IDisposable
  Properties:
    NAudio.Wave.WaveFormat OutputFormat 'get ' : 
  Methods:
    get_OutputFormat(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    DecompressFrame(Mp3Frame, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.FileFormats.Map.CakewalkDrumMapping: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String NoteName 'get set' : 
    Int32 InNote 'get set' : 
    Int32 OutNote 'get set' : 
    Int32 OutPort 'get set' : 
    Int32 Channel 'get set' : 
    Int32 VelocityAdjust 'get set' : 
    Single VelocityScale 'get set' : 
  Methods:
    get_NoteName(): PrivateScope, Public, HideBySig, SpecialName
    set_NoteName(String): PrivateScope, Public, HideBySig, SpecialName
    get_InNote(): PrivateScope, Public, HideBySig, SpecialName
    set_InNote(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OutNote(): PrivateScope, Public, HideBySig, SpecialName
    set_OutNote(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OutPort(): PrivateScope, Public, HideBySig, SpecialName
    set_OutPort(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Channel(): PrivateScope, Public, HideBySig, SpecialName
    set_Channel(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_VelocityAdjust(): PrivateScope, Public, HideBySig, SpecialName
    set_VelocityAdjust(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_VelocityScale(): PrivateScope, Public, HideBySig, SpecialName
    set_VelocityScale(Single): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.FileFormats.Map.CakewalkMapFile: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[NAudio.FileFormats.Map.CakewalkDrumMapping] DrumMappings 'get ' : 
  Methods:
    get_DrumMappings(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class NAudio.FileFormats.Map.MapBlockHeader: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Length 'get ' : 
  Methods:
    Read(BinaryReader): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.FileFormats.Wav.WaveFileChunkReader: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.Wave.WaveFormat WaveFormat 'get ' : 
    Int64 DataChunkPosition 'get ' : 
    Int64 DataChunkLength 'get ' : 
    System.Collections.Generic.List`1[NAudio.Wave.RiffChunk] RiffChunks 'get ' : 
  Methods:
    ReadWaveHeader(Stream): PrivateScope, Public, HideBySig
    get_WaveFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_DataChunkPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_DataChunkLength(): PrivateScope, Public, HideBySig, SpecialName
    get_RiffChunks(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Dsp.EnvelopeGenerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single AttackRate 'get set' : 
    Single DecayRate 'get set' : 
    Single ReleaseRate 'get set' : 
    Single SustainLevel 'get set' : 
    EnvelopeState State 'get ' : 
  Methods:
    get_AttackRate(): PrivateScope, Public, HideBySig, SpecialName
    set_AttackRate(Single): PrivateScope, Public, HideBySig, SpecialName
    get_DecayRate(): PrivateScope, Public, HideBySig, SpecialName
    set_DecayRate(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ReleaseRate(): PrivateScope, Public, HideBySig, SpecialName
    set_ReleaseRate(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SustainLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_SustainLevel(Single): PrivateScope, Public, HideBySig, SpecialName
    Process(): PrivateScope, Public, HideBySig
    Gate(Boolean): PrivateScope, Public, HideBySig
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    Reset(): PrivateScope, Public, HideBySig
    GetOutput(): PrivateScope, Public, HideBySig
Class NAudio.Dsp.WdlResampler: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetMode(Boolean, Int32, Boolean, Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetFilterParms(Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetFeedMode(Boolean): PrivateScope, Public, HideBySig
    Reset(Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetRates(Double, Double): PrivateScope, Public, HideBySig
    GetCurrentLatency(): PrivateScope, Public, HideBySig
    ResamplePrepare(Int32, Int32, Single[]&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    ResampleOut(Single[], Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
Class NAudio.Dsp.SmbPitchShifter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    PitchShift(Single, Int64, Single, Single[]): PrivateScope, Public, HideBySig
    PitchShift(Single, Int64, Int64, Int64, Single, Single[]): PrivateScope, Public, HideBySig
    ShortTimeFourierTransform(Single[], Int64, Int64): PrivateScope, Public, HideBySig
Class NAudio.Dsp.BiQuadFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Methods:
    Transform(Single): PrivateScope, Public, HideBySig
    SetLowPassFilter(Single, Single, Single): PrivateScope, Public, HideBySig
    SetPeakingEq(Single, Single, Single, Single): PrivateScope, Public, HideBySig
    SetHighPassFilter(Single, Single, Single): PrivateScope, Public, HideBySig
    LowPassFilter(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    HighPassFilter(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    BandPassFilterConstantSkirtGain(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    BandPassFilterConstantPeakGain(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    NotchFilter(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    AllPassFilter(Single, Single, Single): PrivateScope, Public, Static, HideBySig
    PeakingEQ(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    LowShelf(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    HighShelf(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
Struct NAudio.Dsp.Complex: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single X : Public
    Single Y : Public
Class NAudio.Dsp.EnvelopeDetector: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double TimeConstant 'get set' : 
    Double SampleRate 'get set' : 
  Methods:
    get_TimeConstant(): PrivateScope, Public, HideBySig, SpecialName
    set_TimeConstant(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SampleRate(): PrivateScope, Public, HideBySig, SpecialName
    set_SampleRate(Double): PrivateScope, Public, HideBySig, SpecialName
    Run(Double, Double&): PrivateScope, Public, HideBySig
Class NAudio.Dsp.AttRelEnvelope: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Attack 'get set' : 
    Double Release 'get set' : 
    Double SampleRate 'get set' : 
  Methods:
    get_Attack(): PrivateScope, Public, HideBySig, SpecialName
    set_Attack(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Release(): PrivateScope, Public, HideBySig, SpecialName
    set_Release(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SampleRate(): PrivateScope, Public, HideBySig, SpecialName
    set_SampleRate(Double): PrivateScope, Public, HideBySig, SpecialName
    Run(Double, Double&): PrivateScope, Public, HideBySig
Class NAudio.Dsp.FastFourierTransform: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    FFT(Boolean, Int32, Complex[]): PrivateScope, Public, Static, HideBySig
    HammingWindow(Int32, Int32): PrivateScope, Public, Static, HideBySig
    HannWindow(Int32, Int32): PrivateScope, Public, Static, HideBySig
    BlackmannHarrisWindow(Int32, Int32): PrivateScope, Public, Static, HideBySig
Class NAudio.Dsp.ImpulseResponseConvolution: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Convolve(Single[], Single[]): PrivateScope, Public, HideBySig
    Normalize(Single[]): PrivateScope, Public, HideBySig
Class NAudio.Dsp.SimpleCompressor: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NAudio.Dsp.AttRelEnvelope
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double MakeUpGain 'get set' : 
    Double Threshold 'get set' : 
    Double Ratio 'get set' : 
  Methods:
    get_MakeUpGain(): PrivateScope, Public, HideBySig, SpecialName
    set_MakeUpGain(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Threshold(): PrivateScope, Public, HideBySig, SpecialName
    set_Threshold(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Ratio(): PrivateScope, Public, HideBySig, SpecialName
    set_Ratio(Double): PrivateScope, Public, HideBySig, SpecialName
    InitRuntime(): PrivateScope, Public, HideBySig
    Process(Double&, Double&): PrivateScope, Public, HideBySig
Class NAudio.Dsp.SimpleGate: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :NAudio.Dsp.AttRelEnvelope
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Threshold 'get set' : 
  Methods:
    Process(Double&, Double&): PrivateScope, Public, HideBySig
    get_Threshold(): PrivateScope, Public, HideBySig, SpecialName
    set_Threshold(Double): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.CoreAudioApi.AudioCaptureClient: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioCaptureClient): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    GetBuffer(Int32&(Out), AudioClientBufferFlags&(Out), Int64&(Out), Int64&(Out)): PrivateScope, Public, HideBySig
    GetBuffer(Int32&(Out), AudioClientBufferFlags&(Out)): PrivateScope, Public, HideBySig
    GetNextPacketSize(): PrivateScope, Public, HideBySig
    ReleaseBuffer(Int32): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.CoreAudioApi.AudioClient: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioClient): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    NAudio.Wave.WaveFormat MixFormat 'get ' : 
    Int32 BufferSize 'get ' : 
    Int64 StreamLatency 'get ' : 
    Int32 CurrentPadding 'get ' : 
    Int64 DefaultDevicePeriod 'get ' : 
    Int64 MinimumDevicePeriod 'get ' : 
    NAudio.CoreAudioApi.AudioStreamVolume AudioStreamVolume 'get ' : 
    NAudio.CoreAudioApi.AudioClockClient AudioClockClient 'get ' : 
    NAudio.CoreAudioApi.AudioRenderClient AudioRenderClient 'get ' : 
    NAudio.CoreAudioApi.AudioCaptureClient AudioCaptureClient 'get ' : 
  Methods:
    get_MixFormat(): PrivateScope, Public, HideBySig, SpecialName
    Initialize(AudioClientShareMode, AudioClientStreamFlags, Int64, Int64, WaveFormat, Guid): PrivateScope, Public, HideBySig
    get_BufferSize(): PrivateScope, Public, HideBySig, SpecialName
    get_StreamLatency(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentPadding(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultDevicePeriod(): PrivateScope, Public, HideBySig, SpecialName
    get_MinimumDevicePeriod(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioStreamVolume(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioClockClient(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioRenderClient(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioCaptureClient(): PrivateScope, Public, HideBySig, SpecialName
    IsFormatSupported(AudioClientShareMode, WaveFormat): PrivateScope, Public, HideBySig
    IsFormatSupported(AudioClientShareMode, WaveFormat, WaveFormatExtensible&(Out)): PrivateScope, Public, HideBySig
    Start(): PrivateScope, Public, HideBySig
    Stop(): PrivateScope, Public, HideBySig
    SetEventHandle(IntPtr): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NAudio.CoreAudioApi.AudioClientBufferFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.AudioClientBufferFlags None = 0 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioClientBufferFlags DataDiscontinuity = 1 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioClientBufferFlags Silent = 2 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioClientBufferFlags TimestampError = 4 : Public, Static, Literal, HasDefault
Struct NAudio.CoreAudioApi.AudioClientProperties: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 cbSize : Public
    Int32 bIsOffload : Public
    NAudio.CoreAudioApi.AudioStreamCategory eCategory : Public
    NAudio.CoreAudioApi.AudioClientStreamOptions Options : Public
Struct NAudio.CoreAudioApi.AudioClientShareMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.AudioClientShareMode Shared = 0 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioClientShareMode Exclusive = 1 : Public, Static, Literal, HasDefault
Struct NAudio.CoreAudioApi.AudioClientStreamFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.AudioClientStreamFlags None = 0 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioClientStreamFlags CrossProcess = 65536 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioClientStreamFlags Loopback = 131072 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioClientStreamFlags EventCallback = 262144 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioClientStreamFlags NoPersist = 524288 : Public, Static, Literal, HasDefault
Struct NAudio.CoreAudioApi.AudioClientStreamOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.AudioClientStreamOptions None = 0 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioClientStreamOptions Raw = 1 : Public, Static, Literal, HasDefault
Class NAudio.CoreAudioApi.AudioClockClient: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioClock): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 Characteristics 'get ' : 
    UInt64 Frequency 'get ' : 
    UInt64 AdjustedPosition 'get ' : 
    Boolean CanAdjustPosition 'get ' : 
  Methods:
    get_Characteristics(): PrivateScope, Public, HideBySig, SpecialName
    get_Frequency(): PrivateScope, Public, HideBySig, SpecialName
    GetPosition(UInt64&(Out), UInt64&(Out)): PrivateScope, Public, HideBySig
    get_AdjustedPosition(): PrivateScope, Public, HideBySig, SpecialName
    get_CanAdjustPosition(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.CoreAudioApi.AudioEndpointVolumeCallback: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.AudioEndpointVolume): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.CoreAudioApi.Interfaces.IAudioEndpointVolumeCallback
  Methods:
    OnNotify(IntPtr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.CoreAudioApi.AudioEndpointVolumeChannel: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioEndpointVolume, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Guid NotificationGuid 'get set' : 
    Single VolumeLevel 'get set' : 
    Single VolumeLevelScalar 'get set' : 
  Methods:
    get_NotificationGuid(): PrivateScope, Public, HideBySig, SpecialName
    set_NotificationGuid(Guid): PrivateScope, Public, HideBySig, SpecialName
    get_VolumeLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_VolumeLevel(Single): PrivateScope, Public, HideBySig, SpecialName
    get_VolumeLevelScalar(): PrivateScope, Public, HideBySig, SpecialName
    set_VolumeLevelScalar(Single): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.CoreAudioApi.AudioEndpointVolumeChannels: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioEndpointVolume): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
    NAudio.CoreAudioApi.AudioEndpointVolumeChannel Item [Int32] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.CoreAudioApi.AudioEndpointVolumeNotificationDelegate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(AudioVolumeNotificationData): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AudioVolumeNotificationData, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.CoreAudioApi.AudioEndpointVolumeStepInformation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioEndpointVolume): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 Step 'get ' : 
    UInt32 StepCount 'get ' : 
  Methods:
    get_Step(): PrivateScope, Public, HideBySig, SpecialName
    get_StepCount(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.CoreAudioApi.AudioEndpointVolumeVolumeRange: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioEndpointVolume): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single MinDecibels 'get ' : 
    Single MaxDecibels 'get ' : 
    Single IncrementDecibels 'get ' : 
  Methods:
    get_MinDecibels(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxDecibels(): PrivateScope, Public, HideBySig, SpecialName
    get_IncrementDecibels(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.CoreAudioApi.AudioMeterInformationChannels: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioMeterInformation): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
    Single Item [Int32] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.CoreAudioApi.AudioRenderClient: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioRenderClient): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    GetBuffer(Int32): PrivateScope, Public, HideBySig
    ReleaseBuffer(Int32, AudioClientBufferFlags): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.CoreAudioApi.AudioSessionControl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioSessionControl): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    NAudio.CoreAudioApi.AudioMeterInformation AudioMeterInformation 'get ' : 
    NAudio.CoreAudioApi.SimpleAudioVolume SimpleAudioVolume 'get ' : 
    NAudio.CoreAudioApi.Interfaces.AudioSessionState State 'get ' : 
    System.String DisplayName 'get set' : 
    System.String IconPath 'get set' : 
    System.String GetSessionIdentifier 'get ' : 
    System.String GetSessionInstanceIdentifier 'get ' : 
    UInt32 GetProcessID 'get ' : 
    Boolean IsSystemSoundsSession 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_AudioMeterInformation(): PrivateScope, Public, HideBySig, SpecialName
    get_SimpleAudioVolume(): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IconPath(): PrivateScope, Public, HideBySig, SpecialName
    set_IconPath(String): PrivateScope, Public, HideBySig, SpecialName
    get_GetSessionIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    get_GetSessionInstanceIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    get_GetProcessID(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSystemSoundsSession(): PrivateScope, Public, HideBySig, SpecialName
    GetGroupingParam(): PrivateScope, Public, HideBySig
    SetGroupingParam(Guid, Guid): PrivateScope, Public, HideBySig
    RegisterEventClient(IAudioSessionEventsHandler): PrivateScope, Public, HideBySig
    UnRegisterEventClient(IAudioSessionEventsHandler): PrivateScope, Public, HideBySig
Class NAudio.CoreAudioApi.AudioSessionEventsCallback: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioSessionEventsHandler): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.CoreAudioApi.Interfaces.IAudioSessionEvents
  Methods:
    OnDisplayNameChanged(String(In, HasFieldMarshal), Guid&(In)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnIconPathChanged(String(In, HasFieldMarshal), Guid&(In)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnSimpleVolumeChanged(Single(In, HasFieldMarshal), Boolean(In, HasFieldMarshal), Guid&(In)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnChannelVolumeChanged(UInt32(In, HasFieldMarshal), IntPtr(In, HasFieldMarshal), UInt32(In, HasFieldMarshal), Guid&(In)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnGroupingParamChanged(Guid&(In), Guid&(In)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnStateChanged(AudioSessionState(In)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    OnSessionDisconnected(AudioSessionDisconnectReason(In)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.CoreAudioApi.AudioSessionManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioSessionManager): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.CoreAudioApi.SimpleAudioVolume SimpleAudioVolume 'get ' : 
    NAudio.CoreAudioApi.AudioSessionControl AudioSessionControl 'get ' : 
    NAudio.CoreAudioApi.SessionCollection Sessions 'get ' : 
  Events:
    SessionCreatedDelegate OnSessionCreated: 
  Methods:
    add_OnSessionCreated(SessionCreatedDelegate): PrivateScope, Public, HideBySig, SpecialName
    remove_OnSessionCreated(SessionCreatedDelegate): PrivateScope, Public, HideBySig, SpecialName
    get_SimpleAudioVolume(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioSessionControl(): PrivateScope, Public, HideBySig, SpecialName
    FireSessionCreated(IAudioSessionControl): PrivateScope, Assembly, HideBySig
    RefreshSessions(): PrivateScope, Public, HideBySig
    get_Sessions(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, HideBySig
Class NAudio.CoreAudioApi.AudioSessionNotification: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.AudioSessionManager): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.CoreAudioApi.Interfaces.IAudioSessionNotification
  Methods:
    OnSessionCreated(IAudioSessionControl): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct NAudio.CoreAudioApi.AudioStreamCategory: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.AudioStreamCategory Other = 0 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioStreamCategory ForegroundOnlyMedia = 1 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioStreamCategory BackgroundCapableMedia = 2 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioStreamCategory Communications = 3 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioStreamCategory Alerts = 4 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioStreamCategory SoundEffects = 5 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioStreamCategory GameEffects = 6 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.AudioStreamCategory GameMedia = 7 : Public, Static, Literal, HasDefault
Class NAudio.CoreAudioApi.AudioStreamVolume: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioStreamVolume): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 ChannelCount 'get ' : 
  Methods:
    GetAllVolumes(): PrivateScope, Public, HideBySig
    get_ChannelCount(): PrivateScope, Public, HideBySig, SpecialName
    GetChannelVolume(Int32): PrivateScope, Public, HideBySig
    SetAllVolumes(Single[]): PrivateScope, Public, HideBySig
    SetChannelVolume(Int32, Single): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.CoreAudioApi.AudioVolumeNotificationData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Guid, Boolean, Single, Single[], System.Guid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Guid EventContext 'get ' : 
    Boolean Muted 'get ' : 
    System.Guid Guid 'get ' : 
    Single MasterVolume 'get ' : 
    Int32 Channels 'get ' : 
    Single[] ChannelVolume 'get ' : 
  Methods:
    get_EventContext(): PrivateScope, Public, HideBySig, SpecialName
    get_Muted(): PrivateScope, Public, HideBySig, SpecialName
    get_Guid(): PrivateScope, Public, HideBySig, SpecialName
    get_MasterVolume(): PrivateScope, Public, HideBySig, SpecialName
    get_Channels(): PrivateScope, Public, HideBySig, SpecialName
    get_ChannelVolume(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.CoreAudioApi.MMDeviceCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IMMDeviceCollection): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[NAudio.CoreAudioApi.MMDevice]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    NAudio.CoreAudioApi.MMDevice Item [Int32] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.CoreAudioApi.PropertyKeys: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    NAudio.CoreAudioApi.PropertyKey PKEY_DeviceInterface_FriendlyName : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_AudioEndpoint_FormFactor : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_AudioEndpoint_ControlPanelPageProvider : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_AudioEndpoint_Association : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_AudioEndpoint_PhysicalSpeakers : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_AudioEndpoint_GUID : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_AudioEndpoint_Disable_SysFx : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_AudioEndpoint_FullRangeSpeakers : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_AudioEndpoint_Supports_EventDriven_Mode : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_AudioEndpoint_JackSubType : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_AudioEngine_DeviceFormat : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_AudioEngine_OEMFormat : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_Device_FriendlyName : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_Device_IconPath : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_Device_DeviceDesc : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_Device_ControllerDeviceId : Public, Static, InitOnly
    NAudio.CoreAudioApi.PropertyKey PKEY_Device_InterfaceKey : Public, Static, InitOnly
Class NAudio.CoreAudioApi.SessionCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioSessionEnumerator): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.CoreAudioApi.AudioSessionControl Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.CoreAudioApi.SimpleAudioVolume: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.ISimpleAudioVolume): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Single Volume 'get set' : 
    Boolean Mute 'get set' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    set_Volume(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Mute(): PrivateScope, Public, HideBySig, SpecialName
    set_Mute(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.CoreAudioApi.CaptureState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.CaptureState Stopped = 0 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.CaptureState Starting = 1 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.CaptureState Capturing = 2 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.CaptureState Stopping = 3 : Public, Static, Literal, HasDefault
Class NAudio.CoreAudioApi.WasapiCapture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.CoreAudioApi.MMDevice): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.CoreAudioApi.MMDevice, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(NAudio.CoreAudioApi.MMDevice, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    NAudio.Wave.IWaveIn
    System.IDisposable
  Properties:
    NAudio.CoreAudioApi.AudioClientShareMode ShareMode 'get set' : 
    NAudio.CoreAudioApi.CaptureState CaptureState 'get ' : 
    NAudio.Wave.WaveFormat WaveFormat 'get set' : 
  Events:
    System.EventHandler`1[NAudio.Wave.WaveInEventArgs] DataAvailable: 
    System.EventHandler`1[NAudio.Wave.StoppedEventArgs] RecordingStopped: 
  Methods:
    add_DataAvailable(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_DataAvailable(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    add_RecordingStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_RecordingStopped(EventHandler`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ShareMode(): PrivateScope, Public, HideBySig, SpecialName
    set_ShareMode(AudioClientShareMode): PrivateScope, Public, HideBySig, SpecialName
    get_CaptureState(): PrivateScope, Public, HideBySig, SpecialName
    get_WaveFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_WaveFormat(WaveFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetDefaultCaptureDevice(): PrivateScope, Public, Static, HideBySig
    StartRecording(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    StopRecording(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.CoreAudioApi.AudioEndpointVolume: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioEndpointVolume): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Guid NotificationGuid 'get set' : 
    NAudio.CoreAudioApi.AudioEndpointVolumeVolumeRange VolumeRange 'get ' : 
    NAudio.CoreAudioApi.EEndpointHardwareSupport HardwareSupport 'get ' : 
    NAudio.CoreAudioApi.AudioEndpointVolumeStepInformation StepInformation 'get ' : 
    NAudio.CoreAudioApi.AudioEndpointVolumeChannels Channels 'get ' : 
    Single MasterVolumeLevel 'get set' : 
    Single MasterVolumeLevelScalar 'get set' : 
    Boolean Mute 'get set' : 
  Events:
    NAudio.CoreAudioApi.AudioEndpointVolumeNotificationDelegate OnVolumeNotification: 
  Methods:
    get_NotificationGuid(): PrivateScope, Public, HideBySig, SpecialName
    set_NotificationGuid(Guid): PrivateScope, Public, HideBySig, SpecialName
    add_OnVolumeNotification(AudioEndpointVolumeNotificationDelegate): PrivateScope, Public, HideBySig, SpecialName
    remove_OnVolumeNotification(AudioEndpointVolumeNotificationDelegate): PrivateScope, Public, HideBySig, SpecialName
    get_VolumeRange(): PrivateScope, Public, HideBySig, SpecialName
    get_HardwareSupport(): PrivateScope, Public, HideBySig, SpecialName
    get_StepInformation(): PrivateScope, Public, HideBySig, SpecialName
    get_Channels(): PrivateScope, Public, HideBySig, SpecialName
    get_MasterVolumeLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_MasterVolumeLevel(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MasterVolumeLevelScalar(): PrivateScope, Public, HideBySig, SpecialName
    set_MasterVolumeLevelScalar(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Mute(): PrivateScope, Public, HideBySig, SpecialName
    set_Mute(Boolean): PrivateScope, Public, HideBySig, SpecialName
    VolumeStepUp(): PrivateScope, Public, HideBySig
    VolumeStepDown(): PrivateScope, Public, HideBySig
    FireNotification(AudioVolumeNotificationData): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.CoreAudioApi.AudioMeterInformation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IAudioMeterInformation): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.CoreAudioApi.AudioMeterInformationChannels PeakValues 'get ' : 
    NAudio.CoreAudioApi.EEndpointHardwareSupport HardwareSupport 'get ' : 
    Single MasterPeakValue 'get ' : 
  Methods:
    get_PeakValues(): PrivateScope, Public, HideBySig, SpecialName
    get_HardwareSupport(): PrivateScope, Public, HideBySig, SpecialName
    get_MasterPeakValue(): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.CoreAudioApi.DeviceState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.DeviceState Active = 1 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.DeviceState Disabled = 2 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.DeviceState NotPresent = 4 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.DeviceState Unplugged = 8 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.DeviceState All = 15 : Public, Static, Literal, HasDefault
Struct NAudio.CoreAudioApi.EEndpointHardwareSupport: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.EEndpointHardwareSupport Volume = 1 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.EEndpointHardwareSupport Mute = 2 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.EEndpointHardwareSupport Meter = 4 : Public, Static, Literal, HasDefault
Struct NAudio.CoreAudioApi.DataFlow: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.DataFlow Render = 0 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.DataFlow Capture = 1 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.DataFlow All = 2 : Public, Static, Literal, HasDefault
Struct NAudio.CoreAudioApi.PropertyKey: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Guid, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Guid formatId : Public
    Int32 propertyId : Public
Struct NAudio.CoreAudioApi.Role: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.Role Console = 0 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Role Multimedia = 1 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Role Communications = 2 : Public, Static, Literal, HasDefault
Class NAudio.CoreAudioApi.MMDevice: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IMMDevice): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    NAudio.CoreAudioApi.AudioClient AudioClient 'get ' : 
    NAudio.CoreAudioApi.AudioMeterInformation AudioMeterInformation 'get ' : 
    NAudio.CoreAudioApi.AudioEndpointVolume AudioEndpointVolume 'get ' : 
    NAudio.CoreAudioApi.AudioSessionManager AudioSessionManager 'get ' : 
    NAudio.CoreAudioApi.PropertyStore Properties 'get ' : 
    System.String FriendlyName 'get ' : 
    System.String DeviceFriendlyName 'get ' : 
    System.String IconPath 'get ' : 
    System.String ID 'get ' : 
    NAudio.CoreAudioApi.DataFlow DataFlow 'get ' : 
    NAudio.CoreAudioApi.DeviceState State 'get ' : 
  Methods:
    GetPropertyInformation(StorageAccessMode(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_AudioClient(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioMeterInformation(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioEndpointVolume(): PrivateScope, Public, HideBySig, SpecialName
    get_AudioSessionManager(): PrivateScope, Public, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, HideBySig, SpecialName
    get_FriendlyName(): PrivateScope, Public, HideBySig, SpecialName
    get_DeviceFriendlyName(): PrivateScope, Public, HideBySig, SpecialName
    get_IconPath(): PrivateScope, Public, HideBySig, SpecialName
    get_ID(): PrivateScope, Public, HideBySig, SpecialName
    get_DataFlow(): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.CoreAudioApi.MMDeviceEnumerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    EnumerateAudioEndPoints(DataFlow, DeviceState): PrivateScope, Public, HideBySig
    GetDefaultAudioEndpoint(DataFlow, Role): PrivateScope, Public, HideBySig
    HasDefaultAudioEndpoint(DataFlow, Role): PrivateScope, Public, HideBySig
    GetDevice(String): PrivateScope, Public, HideBySig
    RegisterEndpointNotificationCallback(IMMNotificationClient(In, HasFieldMarshal)): PrivateScope, Public, HideBySig
    UnregisterEndpointNotificationCallback(IMMNotificationClient(In, HasFieldMarshal)): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class NAudio.CoreAudioApi.PropertyStore: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.Interfaces.IPropertyStore): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
    NAudio.CoreAudioApi.PropertyStoreProperty Item [Int32] 'get ' : 
    NAudio.CoreAudioApi.PropertyStoreProperty Item [NAudio.CoreAudioApi.PropertyKey] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Contains(PropertyKey): PrivateScope, Public, HideBySig
    get_Item(PropertyKey): PrivateScope, Public, HideBySig, SpecialName
    Get(Int32): PrivateScope, Public, HideBySig
    GetValue(Int32): PrivateScope, Public, HideBySig
    SetValue(PropertyKey, PropVariant): PrivateScope, Public, HideBySig
    Commit(): PrivateScope, Public, HideBySig
Class NAudio.CoreAudioApi.PropertyStoreProperty: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(NAudio.CoreAudioApi.PropertyKey, NAudio.CoreAudioApi.Interfaces.PropVariant): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    NAudio.CoreAudioApi.PropertyKey Key 'get ' : 
    System.Object Value 'get ' : 
  Methods:
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Struct NAudio.CoreAudioApi.Interfaces.AudioVolumeNotificationDataStruct: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Guid guidEventContext : Public
    Boolean bMuted : Public
    Single fMasterVolume : Public
    UInt32 nChannels : Public
    Single ChannelVolume : Public
Struct NAudio.CoreAudioApi.Interfaces.AudioClientErrors: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.Interfaces.AudioClientErrors NotInitialized = -2004287487 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.AudioClientErrors UnsupportedFormat = -2004287480 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.AudioClientErrors DeviceInUse = -2004287478 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.AudioClientErrors ResourcesInvalidated = -2004287450 : Public, Static, Literal, HasDefault
Class NAudio.CoreAudioApi.Interfaces.ErrorCodes: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32 AUDCLNT_E_NOT_INITIALIZED : Public, Static, InitOnly
    Int32 AUDCLNT_E_ALREADY_INITIALIZED : Public, Static, InitOnly
    Int32 AUDCLNT_E_WRONG_ENDPOINT_TYPE : Public, Static, InitOnly
    Int32 AUDCLNT_E_DEVICE_INVALIDATED : Public, Static, InitOnly
    Int32 AUDCLNT_E_NOT_STOPPED : Public, Static, InitOnly
    Int32 AUDCLNT_E_BUFFER_TOO_LARGE : Public, Static, InitOnly
    Int32 AUDCLNT_E_OUT_OF_ORDER : Public, Static, InitOnly
    Int32 AUDCLNT_E_UNSUPPORTED_FORMAT : Public, Static, InitOnly
    Int32 AUDCLNT_E_INVALID_SIZE : Public, Static, InitOnly
    Int32 AUDCLNT_E_DEVICE_IN_USE : Public, Static, InitOnly
    Int32 AUDCLNT_E_BUFFER_OPERATION_PENDING : Public, Static, InitOnly
    Int32 AUDCLNT_E_THREAD_NOT_REGISTERED : Public, Static, InitOnly
    Int32 AUDCLNT_E_EXCLUSIVE_MODE_NOT_ALLOWED : Public, Static, InitOnly
    Int32 AUDCLNT_E_ENDPOINT_CREATE_FAILED : Public, Static, InitOnly
    Int32 AUDCLNT_E_SERVICE_NOT_RUNNING : Public, Static, InitOnly
    Int32 AUDCLNT_E_EVENTHANDLE_NOT_EXPECTED : Public, Static, InitOnly
    Int32 AUDCLNT_E_EXCLUSIVE_MODE_ONLY : Public, Static, InitOnly
    Int32 AUDCLNT_E_BUFDURATION_PERIOD_NOT_EQUAL : Public, Static, InitOnly
    Int32 AUDCLNT_E_EVENTHANDLE_NOT_SET : Public, Static, InitOnly
    Int32 AUDCLNT_E_INCORRECT_BUFFER_SIZE : Public, Static, InitOnly
    Int32 AUDCLNT_E_BUFFER_SIZE_ERROR : Public, Static, InitOnly
    Int32 AUDCLNT_E_CPUUSAGE_EXCEEDED : Public, Static, InitOnly
    Int32 AUDCLNT_E_RESOURCES_INVALIDATED : Public, Static, InitOnly
    Int32 SEVERITY_ERROR = 1 : Public, Static, Literal, HasDefault
    Int32 FACILITY_AUDCLNT = 2185 : Public, Static, Literal, HasDefault
Interface NAudio.CoreAudioApi.Interfaces.IAudioCaptureClient: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetBuffer(IntPtr&(Out), Int32&(Out), AudioClientBufferFlags&(Out), Int64&(Out), Int64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReleaseBuffer(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNextPacketSize(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioClock: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetFrequency(UInt64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPosition(UInt64&(Out), UInt64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCharacteristics(UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioClock2: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    NAudio.CoreAudioApi.Interfaces.IAudioClock
  Methods:
    GetDevicePosition(UInt64&(Out), UInt64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioEndpointVolumeCallback: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    OnNotify(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioRenderClient: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    GetBuffer(Int32, IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReleaseBuffer(Int32, AudioClientBufferFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioSessionControl: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetState(AudioSessionState&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDisplayName(String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDisplayName(String(In, HasFieldMarshal), Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIconPath(String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetIconPath(String(In, HasFieldMarshal), Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetGroupingParam(Guid&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetGroupingParam(Guid(In, HasFieldMarshal), Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RegisterAudioSessionNotification(IAudioSessionEvents(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnregisterAudioSessionNotification(IAudioSessionEvents(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioSessionControl2: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    NAudio.CoreAudioApi.Interfaces.IAudioSessionControl
  Methods:
    GetState(AudioSessionState&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDisplayName(String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDisplayName(String(In, HasFieldMarshal), Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetIconPath(String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetIconPath(String(In, HasFieldMarshal), Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetGroupingParam(Guid&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetGroupingParam(Guid(In, HasFieldMarshal), Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RegisterAudioSessionNotification(IAudioSessionEvents(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnregisterAudioSessionNotification(IAudioSessionEvents(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSessionIdentifier(String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSessionInstanceIdentifier(String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetProcessId(UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsSystemSoundsSession(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetDuckingPreference(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioSessionEnumerator: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetCount(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSession(Int32, IAudioSessionControl&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct NAudio.CoreAudioApi.Interfaces.AudioSessionState: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.Interfaces.AudioSessionState AudioSessionStateInactive = 0 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.AudioSessionState AudioSessionStateActive = 1 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.AudioSessionState AudioSessionStateExpired = 2 : Public, Static, Literal, HasDefault
Struct NAudio.CoreAudioApi.Interfaces.AudioSessionDisconnectReason: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.Interfaces.AudioSessionDisconnectReason DisconnectReasonDeviceRemoval = 0 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.AudioSessionDisconnectReason DisconnectReasonServerShutdown = 1 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.AudioSessionDisconnectReason DisconnectReasonFormatChanged = 2 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.AudioSessionDisconnectReason DisconnectReasonSessionLogoff = 3 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.AudioSessionDisconnectReason DisconnectReasonSessionDisconnected = 4 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.AudioSessionDisconnectReason DisconnectReasonExclusiveModeOverride = 5 : Public, Static, Literal, HasDefault
Interface NAudio.CoreAudioApi.Interfaces.IAudioSessionEvents: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    OnDisplayNameChanged(String(In, HasFieldMarshal), Guid&(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnIconPathChanged(String(In, HasFieldMarshal), Guid&(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnSimpleVolumeChanged(Single(In, HasFieldMarshal), Boolean(In, HasFieldMarshal), Guid&(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnChannelVolumeChanged(UInt32(In, HasFieldMarshal), IntPtr(In, HasFieldMarshal), UInt32(In, HasFieldMarshal), Guid&(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnGroupingParamChanged(Guid&(In), Guid&(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnStateChanged(AudioSessionState(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnSessionDisconnected(AudioSessionDisconnectReason(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioSessionEventsHandler: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    OnVolumeChanged(Single, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnDisplayNameChanged(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnIconPathChanged(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnChannelVolumeChanged(UInt32, IntPtr, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnGroupingParamChanged(Guid&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnStateChanged(AudioSessionState): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnSessionDisconnected(AudioSessionDisconnectReason): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioSessionManager: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetAudioSessionControl(Guid(In, Optional, HasFieldMarshal), UInt32(In, HasFieldMarshal), IAudioSessionControl&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSimpleAudioVolume(Guid(In, Optional, HasFieldMarshal), UInt32(In, HasFieldMarshal), ISimpleAudioVolume&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioSessionManager2: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Interfaces:
    NAudio.CoreAudioApi.Interfaces.IAudioSessionManager
  Methods:
    GetAudioSessionControl(Guid(In, Optional, HasFieldMarshal), UInt32(In, HasFieldMarshal), IAudioSessionControl&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSimpleAudioVolume(Guid(In, Optional, HasFieldMarshal), UInt32(In, HasFieldMarshal), ISimpleAudioVolume&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSessionEnumerator(IAudioSessionEnumerator&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RegisterSessionNotification(IAudioSessionNotification): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnregisterSessionNotification(IAudioSessionNotification): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RegisterDuckNotification(String, IAudioSessionNotification): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnregisterDuckNotification(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioSessionNotification: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    OnSessionCreated(IAudioSessionControl): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioStreamVolume: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetChannelCount(UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetChannelVolume(UInt32(In), Single(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetChannelVolume(UInt32(In), Single&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetAllVoumes(UInt32(In), Single[](In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAllVolumes(UInt32(In), Single[](HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.ISimpleAudioVolume: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    SetMasterVolume(Single(In, HasFieldMarshal), Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMasterVolume(Single&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetMute(Boolean(In, HasFieldMarshal), Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMute(Boolean&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NAudio.CoreAudioApi.Interfaces.PropVariantNative: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    PropVariantClear(PropVariant&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    PropVariantClear(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
Struct NAudio.CoreAudioApi.Interfaces.Blob: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Length : Public
    IntPtr Data : Public
Struct NAudio.CoreAudioApi.Interfaces.ClsCtx: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.Interfaces.ClsCtx INPROC_SERVER = 1 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx INPROC_HANDLER = 2 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx LOCAL_SERVER = 4 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx INPROC_SERVER16 = 8 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx REMOTE_SERVER = 16 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx INPROC_HANDLER16 = 32 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx NO_CODE_DOWNLOAD = 1024 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx NO_CUSTOM_MARSHAL = 4096 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx ENABLE_CODE_DOWNLOAD = 8192 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx NO_FAILURE_LOG = 16384 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx DISABLE_AAA = 32768 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx ENABLE_AAA = 65536 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx FROM_DEFAULT_CONTEXT = 131072 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx ACTIVATE_32_BIT_SERVER = 262144 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx ACTIVATE_64_BIT_SERVER = 524288 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx ENABLE_CLOAKING = 1048576 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx PS_DLL = -2147483648 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx INPROC = 3 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx SERVER = 21 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.ClsCtx ALL = 23 : Public, Static, Literal, HasDefault
Interface NAudio.CoreAudioApi.Interfaces.IAudioClient: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract, Import
  Methods:
    Initialize(AudioClientShareMode, AudioClientStreamFlags, Int64, Int64, WaveFormat(In), Guid&(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetBufferSize(UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStreamLatency(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCurrentPadding(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsFormatSupported(AudioClientShareMode, WaveFormat(In), IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMixFormat(IntPtr&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDevicePeriod(Int64&(Out), Int64&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Start(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Stop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetEventHandle(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetService(Guid(In, HasFieldMarshal), Object&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioEndpointVolume: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    RegisterControlChangeNotify(IAudioEndpointVolumeCallback): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnregisterControlChangeNotify(IAudioEndpointVolumeCallback): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetChannelCount(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetMasterVolumeLevel(Single, Guid&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetMasterVolumeLevelScalar(Single, Guid&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMasterVolumeLevel(Single&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMasterVolumeLevelScalar(Single&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetChannelVolumeLevel(UInt32, Single, Guid&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetChannelVolumeLevelScalar(UInt32, Single, Guid&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetChannelVolumeLevel(UInt32, Single&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetChannelVolumeLevelScalar(UInt32, Single&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetMute(Boolean(HasFieldMarshal), Guid&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMute(Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetVolumeStepInfo(UInt32&(Out), UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    VolumeStepUp(Guid&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    VolumeStepDown(Guid&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    QueryHardwareSupport(UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetVolumeRange(Single&(Out), Single&(Out), Single&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IAudioMeterInformation: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetPeakValue(Single&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMeteringChannelCount(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetChannelsPeakValues(Int32, IntPtr(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    QueryHardwareSupport(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IMMDevice: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    Activate(Guid&, ClsCtx, IntPtr, Object&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OpenPropertyStore(StorageAccessMode, IPropertyStore&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetId(String&(Out, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetState(DeviceState&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IMMDeviceCollection: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetCount(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Item(Int32, IMMDevice&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IMMDeviceEnumerator: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    EnumAudioEndpoints(DataFlow, DeviceState, IMMDeviceCollection&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDefaultAudioEndpoint(DataFlow, Role, IMMDevice&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDevice(String, IMMDevice&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RegisterEndpointNotificationCallback(IMMNotificationClient): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UnregisterEndpointNotificationCallback(IMMNotificationClient): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IMMEndpoint: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetDataFlow(DataFlow&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IMMNotificationClient: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    OnDeviceStateChanged(String(HasFieldMarshal), DeviceState(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnDeviceAdded(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnDeviceRemoved(String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnDefaultDeviceChanged(DataFlow, Role, String(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OnPropertyValueChanged(String(HasFieldMarshal), PropertyKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.CoreAudioApi.Interfaces.IPropertyStore: AutoLayout, AnsiClass, Class, ClassSemanticsMask, Abstract
  Methods:
    GetCount(Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetAt(Int32, PropertyKey&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetValue(PropertyKey&, PropVariant&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetValue(PropertyKey&, PropVariant&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Commit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class NAudio.CoreAudioApi.Interfaces.MMDeviceEnumeratorComObject: AutoLayout, AnsiClass, Class, Import, BeforeFieldInit
  :System.__ComObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct NAudio.CoreAudioApi.Interfaces.StorageAccessMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.CoreAudioApi.Interfaces.StorageAccessMode Read = 0 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.StorageAccessMode Write = 1 : Public, Static, Literal, HasDefault
    NAudio.CoreAudioApi.Interfaces.StorageAccessMode ReadWrite = 2 : Public, Static, Literal, HasDefault
Struct NAudio.CoreAudioApi.Interfaces.PropVariant: AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int16 vt : Public
    Int16 wReserved1 : Public
    Int16 wReserved2 : Public
    Int16 wReserved3 : Public
    SByte cVal : Public
    Byte bVal : Public
    Int16 iVal : Public
    UInt16 uiVal : Public
    Int32 lVal : Public
    UInt32 ulVal : Public
    Int32 intVal : Public
    UInt32 uintVal : Public
    Int64 hVal : Public
    Int64 uhVal : Public
    Single fltVal : Public
    Double dblVal : Public
    Int16 boolVal : Public
    Int32 scode : Public
    System.Runtime.InteropServices.ComTypes.FILETIME filetime : Public
    NAudio.CoreAudioApi.Interfaces.Blob blobVal : Public
    IntPtr pointerValue : Public
  Properties:
    System.Runtime.InteropServices.VarEnum DataType 'get ' : 
    System.Object Value 'get ' : 
  Methods:
    FromLong(Int64): PrivateScope, Public, Static, HideBySig
    GetBlobAsArrayOf(): PrivateScope, Public, HideBySig
    get_DataType(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig (Obsolete)
    Clear(IntPtr): PrivateScope, Public, Static, HideBySig
Class NAudio.Codecs.ALawDecoder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ALawToLinearSample(Byte): PrivateScope, Public, Static, HideBySig
Class NAudio.Codecs.ALawEncoder: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    LinearToALawSample(Int16): PrivateScope, Public, Static, HideBySig
Class NAudio.Codecs.G722Codec: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Decode(G722CodecState, Int16[], Byte[], Int32): PrivateScope, Public, HideBySig
    Encode(G722CodecState, Byte[], Int16[], Int32): PrivateScope, Public, HideBySig
Class NAudio.Codecs.G722CodecState: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, NAudio.Codecs.G722Flags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ItuTestMode 'get set' : 
    Boolean Packed 'get set' : 
    Boolean EncodeFrom8000Hz 'get set' : 
    Int32 BitsPerSample 'get set' : 
    Int32[] QmfSignalHistory 'get set' : 
    NAudio.Codecs.Band[] Band 'get set' : 
    UInt32 InBuffer 'get set' : 
    Int32 InBits 'get set' : 
    UInt32 OutBuffer 'get set' : 
    Int32 OutBits 'get set' : 
  Methods:
    get_ItuTestMode(): PrivateScope, Public, HideBySig, SpecialName
    set_ItuTestMode(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Packed(): PrivateScope, Public, HideBySig, SpecialName
    get_EncodeFrom8000Hz(): PrivateScope, Public, HideBySig, SpecialName
    get_BitsPerSample(): PrivateScope, Public, HideBySig, SpecialName
    get_QmfSignalHistory(): PrivateScope, Public, HideBySig, SpecialName
    get_Band(): PrivateScope, Public, HideBySig, SpecialName
    get_InBuffer(): PrivateScope, Public, HideBySig, SpecialName
    set_InBuffer(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_InBits(): PrivateScope, Public, HideBySig, SpecialName
    set_InBits(Int32): PrivateScope, Assembly, HideBySig, SpecialName
    get_OutBuffer(): PrivateScope, Public, HideBySig, SpecialName
    set_OutBuffer(UInt32): PrivateScope, Assembly, HideBySig, SpecialName
    get_OutBits(): PrivateScope, Public, HideBySig, SpecialName
    set_OutBits(Int32): PrivateScope, Assembly, HideBySig, SpecialName
Class NAudio.Codecs.Band: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 s : Public
    Int32 sp : Public
    Int32 sz : Public
    Int32[] r : Public
    Int32[] a : Public
    Int32[] ap : Public
    Int32[] p : Public
    Int32[] d : Public
    Int32[] b : Public
    Int32[] bp : Public
    Int32[] sg : Public
    Int32 nb : Public
    Int32 det : Public
Struct NAudio.Codecs.G722Flags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NAudio.Codecs.G722Flags None = 0 : Public, Static, Literal, HasDefault
    NAudio.Codecs.G722Flags SampleRate8000 = 1 : Public, Static, Literal, HasDefault
    NAudio.Codecs.G722Flags Packed = 2 : Public, Static, Literal, HasDefault
Class NAudio.Codecs.MuLawDecoder: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    MuLawToLinearSample(Byte): PrivateScope, Public, Static, HideBySig
Class NAudio.Codecs.MuLawEncoder: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    LinearToMuLawSample(Int16): PrivateScope, Public, Static, HideBySig
Struct NAudio.Mixer.MixerInterop+MIXERCONTROLDETAILS: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, AutoClass, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 cbStruct : Public
    Int32 dwControlID : Public
    Int32 cChannels : Public
    IntPtr hwndOwner : Public
    Int32 cbDetails : Public
    IntPtr paDetails : Public
Struct NAudio.Mixer.MixerInterop+MIXERCAPS: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt16 wMid : Public
    UInt16 wPid : Public
    UInt32 vDriverVersion : Public
    System.String szPname : Public, HasFieldMarshal
    UInt32 fdwSupport : Public
    UInt32 cDestinations : Public
Struct NAudio.Mixer.MixerInterop+MIXERLINECONTROLS: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 cbStruct : Public
    Int32 dwLineID : Public
    Int32 dwControlID : Public
    Int32 cControls : Public
    Int32 cbmxctrl : Public
    IntPtr pamxctrl : Public
Struct NAudio.Mixer.MixerInterop+MIXERLINE_LINEF: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MIXERLINE_LINEF MIXERLINE_LINEF_ACTIVE = 1 : Public, Static, Literal, HasDefault
    MIXERLINE_LINEF MIXERLINE_LINEF_DISCONNECTED = 32768 : Public, Static, Literal, HasDefault
    MIXERLINE_LINEF MIXERLINE_LINEF_SOURCE = -2147483648 : Public, Static, Literal, HasDefault
Struct NAudio.Mixer.MixerInterop+MIXERLINE: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 cbStruct : Public
    Int32 dwDestination : Public
    Int32 dwSource : Public
    Int32 dwLineID : Public
    MIXERLINE_LINEF fdwLine : Public
    IntPtr dwUser : Public
    NAudio.Mixer.MixerLineComponentType dwComponentType : Public
    Int32 cChannels : Public
    Int32 cConnections : Public
    Int32 cControls : Public
    System.String szShortName : Public, HasFieldMarshal
    System.String szName : Public, HasFieldMarshal
    UInt32 dwType : Public
    UInt32 dwDeviceID : Public
    UInt16 wMid : Public
    UInt16 wPid : Public
    UInt32 vDriverVersion : Public
    System.String szPname : Public, HasFieldMarshal
Struct NAudio.Mixer.MixerInterop+Bounds: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 minimum : Public
    Int32 maximum : Public
    Int32 reserved2 : Public
    Int32 reserved3 : Public
    Int32 reserved4 : Public
    Int32 reserved5 : Public
Struct NAudio.Mixer.MixerInterop+Metrics: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 step : Public
    Int32 customData : Public
    Int32 reserved2 : Public
    Int32 reserved3 : Public
    Int32 reserved4 : Public
    Int32 reserved5 : Public
Struct NAudio.Mixer.MixerInterop+MIXERCONTROL: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 cbStruct : Public
    Int32 dwControlID : Public
    NAudio.Mixer.MixerControlType dwControlType : Public
    UInt32 fdwControl : Public
    UInt32 cMultipleItems : Public
    System.String szShortName : Public, HasFieldMarshal
    System.String szName : Public, HasFieldMarshal
    Bounds Bounds : Public
    Metrics Metrics : Public
Struct NAudio.Mixer.MixerInterop+MIXERCONTROLDETAILS_BOOLEAN: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 fValue : Public
Struct NAudio.Mixer.MixerInterop+MIXERCONTROLDETAILS_SIGNED: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 lValue : Public
Struct NAudio.Mixer.MixerInterop+MIXERCONTROLDETAILS_LISTTEXT: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 dwParam1 : Public
    UInt32 dwParam2 : Public
    System.String szName : Public, HasFieldMarshal
Struct NAudio.Mixer.MixerInterop+MIXERCONTROLDETAILS_UNSIGNED: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 dwValue : Public
Struct NAudio.Wave.WaveInterop+WaveInOutOpenFlags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WaveInOutOpenFlags CallbackNull = 0 : Public, Static, Literal, HasDefault
    WaveInOutOpenFlags CallbackFunction = 196608 : Public, Static, Literal, HasDefault
    WaveInOutOpenFlags CallbackEvent = 327680 : Public, Static, Literal, HasDefault
    WaveInOutOpenFlags CallbackWindow = 65536 : Public, Static, Literal, HasDefault
    WaveInOutOpenFlags CallbackThread = 131072 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.WaveInterop+WaveMessage: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WaveMessage WaveInOpen = 958 : Public, Static, Literal, HasDefault
    WaveMessage WaveInClose = 959 : Public, Static, Literal, HasDefault
    WaveMessage WaveInData = 960 : Public, Static, Literal, HasDefault
    WaveMessage WaveOutClose = 956 : Public, Static, Literal, HasDefault
    WaveMessage WaveOutDone = 957 : Public, Static, Literal, HasDefault
    WaveMessage WaveOutOpen = 955 : Public, Static, Literal, HasDefault
Class NAudio.Wave.WaveInterop+WaveCallback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, WaveMessage, IntPtr, WaveHeader, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, WaveMessage, IntPtr, WaveHeader, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.DirectSoundOut+BufferDescription: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 dwSize : Public
    DirectSoundBufferCaps dwFlags : Public, HasFieldMarshal
    UInt32 dwBufferBytes : Public
    Int32 dwReserved : Public
    IntPtr lpwfxFormat : Public
    System.Guid guidAlgo : Public
Class NAudio.Wave.DirectSoundOut+BufferCaps: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 dwSize : Public
    Int32 dwFlags : Public
    Int32 dwBufferBytes : Public
    Int32 dwUnlockTransferRate : Public
    Int32 dwPlayCpuOverhead : Public
Struct NAudio.Wave.DirectSoundOut+DirectSoundCooperativeLevel: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    DirectSoundCooperativeLevel DSSCL_NORMAL = 1 : Public, Static, Literal, HasDefault
    DirectSoundCooperativeLevel DSSCL_PRIORITY = 2 : Public, Static, Literal, HasDefault
    DirectSoundCooperativeLevel DSSCL_EXCLUSIVE = 3 : Public, Static, Literal, HasDefault
    DirectSoundCooperativeLevel DSSCL_WRITEPRIMARY = 4 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.DirectSoundOut+DirectSoundPlayFlags: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    DirectSoundPlayFlags DSBPLAY_LOOPING = 1 : Public, Static, Literal, HasDefault
    DirectSoundPlayFlags DSBPLAY_LOCHARDWARE = 2 : Public, Static, Literal, HasDefault
    DirectSoundPlayFlags DSBPLAY_LOCSOFTWARE = 4 : Public, Static, Literal, HasDefault
    DirectSoundPlayFlags DSBPLAY_TERMINATEBY_TIME = 8 : Public, Static, Literal, HasDefault
    DirectSoundPlayFlags DSBPLAY_TERMINATEBY_DISTANCE = 16 : Public, Static, Literal, HasDefault
    DirectSoundPlayFlags DSBPLAY_TERMINATEBY_PRIORITY = 32 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.DirectSoundOut+DirectSoundBufferLockFlag: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    DirectSoundBufferLockFlag None = 0 : Public, Static, Literal, HasDefault
    DirectSoundBufferLockFlag FromWriteCursor = 1 : Public, Static, Literal, HasDefault
    DirectSoundBufferLockFlag EntireBuffer = 2 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.DirectSoundOut+DirectSoundBufferStatus: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    DirectSoundBufferStatus DSBSTATUS_PLAYING = 1 : Public, Static, Literal, HasDefault
    DirectSoundBufferStatus DSBSTATUS_BUFFERLOST = 2 : Public, Static, Literal, HasDefault
    DirectSoundBufferStatus DSBSTATUS_LOOPING = 4 : Public, Static, Literal, HasDefault
    DirectSoundBufferStatus DSBSTATUS_LOCHARDWARE = 8 : Public, Static, Literal, HasDefault
    DirectSoundBufferStatus DSBSTATUS_LOCSOFTWARE = 16 : Public, Static, Literal, HasDefault
    DirectSoundBufferStatus DSBSTATUS_TERMINATED = 32 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.DirectSoundOut+DirectSoundBufferCaps: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    DirectSoundBufferCaps DSBCAPS_PRIMARYBUFFER = 1 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_STATIC = 2 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_LOCHARDWARE = 4 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_LOCSOFTWARE = 8 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_CTRL3D = 16 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_CTRLFREQUENCY = 32 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_CTRLPAN = 64 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_CTRLVOLUME = 128 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_CTRLPOSITIONNOTIFY = 256 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_CTRLFX = 512 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_STICKYFOCUS = 16384 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_GLOBALFOCUS = 32768 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_GETCURRENTPOSITION2 = 65536 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_MUTE3DATMAXDISTANCE = 131072 : Public, Static, Literal, HasDefault
    DirectSoundBufferCaps DSBCAPS_LOCDEFER = 262144 : Public, Static, Literal, HasDefault
Struct NAudio.Wave.DirectSoundOut+DirectSoundBufferPositionNotify: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 dwOffset : Public
    IntPtr hEventNotify : Public
Interface NAudio.Wave.DirectSoundOut+IDirectSound: AutoLayout, AnsiClass, Class, NestedAssembly, ClassSemanticsMask, Abstract, Import, HasSecurity
  Methods:
    CreateSoundBuffer(BufferDescription(In), Object&(Out, HasFieldMarshal), IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCaps(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DuplicateSoundBuffer(IDirectSoundBuffer(In, HasFieldMarshal), IDirectSoundBuffer(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCooperativeLevel(IntPtr, DirectSoundCooperativeLevel(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Compact(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSpeakerConfig(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetSpeakerConfig(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Initialize(Guid(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.Wave.DirectSoundOut+IDirectSoundBuffer: AutoLayout, AnsiClass, Class, NestedAssembly, ClassSemanticsMask, Abstract, Import, HasSecurity
  Methods:
    GetCaps(BufferCaps(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCurrentPosition(UInt32&(Out), UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFormat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetVolume(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetPan(UInt32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetFrequency(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetStatus(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Initialize(IDirectSound(In, HasFieldMarshal), BufferDescription(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Lock(Int32, UInt32, IntPtr&(Out), Int32&(Out), IntPtr&(Out), Int32&(Out), DirectSoundBufferLockFlag(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Play(UInt32, UInt32, DirectSoundPlayFlags(In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCurrentPosition(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetFormat(WaveFormat(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetVolume(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetPan(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetFrequency(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Stop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Unlock(IntPtr, Int32, IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Restore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface NAudio.Wave.DirectSoundOut+IDirectSoundNotify: AutoLayout, AnsiClass, Class, NestedAssembly, ClassSemanticsMask, Abstract, Import, HasSecurity
  Methods:
    SetNotificationPositions(UInt32, DirectSoundBufferPositionNotify[](In, HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct NAudio.Wave.AiffFileReader+AiffChunk: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt32, System.String, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ChunkName : Public
    UInt32 ChunkLength : Public
    UInt32 ChunkStart : Public
Class NAudio.Wave.MediaFoundationReader+MediaFoundationReaderSettings: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean RequestFloatOutput 'get set' : 
    Boolean SingleReaderObject 'get set' : 
    Boolean RepositionInRead 'get set' : 
  Methods:
    get_RequestFloatOutput(): PrivateScope, Public, HideBySig, SpecialName
    set_RequestFloatOutput(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SingleReaderObject(): PrivateScope, Public, HideBySig, SpecialName
    set_SingleReaderObject(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RepositionInRead(): PrivateScope, Public, HideBySig, SpecialName
    set_RepositionInRead(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class NAudio.Wave.Mp3FileReader+FrameDecompressorBuilder: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(WaveFormat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(WaveFormat, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.Compression.AcmInterop+AcmDriverEnumCallback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, AcmDriverDetailsSupportFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, AcmDriverDetailsSupportFlags, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.Compression.AcmInterop+AcmFormatEnumCallback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, AcmFormatDetails&, IntPtr, AcmDriverDetailsSupportFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AcmFormatDetails&, IntPtr, AcmDriverDetailsSupportFlags, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(AcmFormatDetails&, IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.Compression.AcmInterop+AcmFormatTagEnumCallback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, AcmFormatTagDetails&, IntPtr, AcmDriverDetailsSupportFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AcmFormatTagDetails&, IntPtr, AcmDriverDetailsSupportFlags, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(AcmFormatTagDetails&, IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.Compression.AcmInterop+AcmFormatChooseHookProc: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int32, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int32, IntPtr, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.Asio.AsioCallbacks+AsioBufferSwitchCallBack: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32, Boolean, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.Asio.AsioCallbacks+AsioSampleRateDidChangeCallBack: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Double, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.Asio.AsioCallbacks+AsioAsioMessageCallBack: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(AsioMessageSelector, Int32, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsioMessageSelector, Int32, IntPtr, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.Asio.AsioCallbacks+AsioBufferSwitchTimeInfoCallBack: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int32, Boolean, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Wave.Asio.AsioSampleConvertor+SampleConvertor: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr[], Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct NAudio.Midi.MidiInterop+MidiInMessage: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MidiInMessage Open = 961 : Public, Static, Literal, HasDefault
    MidiInMessage Close = 962 : Public, Static, Literal, HasDefault
    MidiInMessage Data = 963 : Public, Static, Literal, HasDefault
    MidiInMessage LongData = 964 : Public, Static, Literal, HasDefault
    MidiInMessage Error = 965 : Public, Static, Literal, HasDefault
    MidiInMessage LongError = 966 : Public, Static, Literal, HasDefault
    MidiInMessage MoreData = 972 : Public, Static, Literal, HasDefault
Struct NAudio.Midi.MidiInterop+MidiOutMessage: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MidiOutMessage Open = 967 : Public, Static, Literal, HasDefault
    MidiOutMessage Close = 968 : Public, Static, Literal, HasDefault
    MidiOutMessage Done = 969 : Public, Static, Literal, HasDefault
Class NAudio.Midi.MidiInterop+MidiInCallback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, MidiInMessage, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, MidiInMessage, IntPtr, IntPtr, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class NAudio.Midi.MidiInterop+MidiOutCallback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, MidiOutMessage, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, MidiOutMessage, IntPtr, IntPtr, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct NAudio.Midi.MidiInterop+MMTIME: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 wType : Public
    Int32 u : Public
Struct NAudio.Midi.MidiInterop+MIDIEVENT: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 dwDeltaTime : Public
    Int32 dwStreamID : Public
    Int32 dwEvent : Public
    Int32 dwParms : Public, HasFieldMarshal
Struct NAudio.Midi.MidiInterop+MIDIHDR: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr lpData : Public
    Int32 dwBufferLength : Public
    Int32 dwBytesRecorded : Public
    IntPtr dwUser : Public
    Int32 dwFlags : Public
    IntPtr lpNext : Public
    IntPtr reserved : Public
    Int32 dwOffset : Public
    IntPtr[] dwReserved : Public, HasFieldMarshal
Struct NAudio.Midi.MidiInterop+MIDIPROPTEMPO: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 cbStruct : Public
    Int32 dwTempo : Public
Struct NAudio.Dsp.EnvelopeGenerator+EnvelopeState: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EnvelopeState Idle = 0 : Public, Static, Literal, HasDefault
    EnvelopeState Attack = 1 : Public, Static, Literal, HasDefault
    EnvelopeState Decay = 2 : Public, Static, Literal, HasDefault
    EnvelopeState Sustain = 3 : Public, Static, Literal, HasDefault
    EnvelopeState Release = 4 : Public, Static, Literal, HasDefault
Class NAudio.CoreAudioApi.AudioSessionManager+SessionCreatedDelegate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, IAudioSessionControl): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, IAudioSessionControl, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
